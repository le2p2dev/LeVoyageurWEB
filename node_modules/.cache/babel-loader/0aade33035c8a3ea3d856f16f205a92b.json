{"ast":null,"code":"import * as React from 'react';\nimport { createContext, useContext, PureComponent, useState, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant = function (condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nvar invariant_1 = invariant;\nconst MapContext = createContext(null);\n\nfunction useGoogleMap() {\n  invariant_1(!!useContext, 'useGoogleMap is React hook and requires React version 16.8+');\n  const map = useContext(MapContext);\n  invariant_1(!!map, 'useGoogleMap needs a GoogleMap available up in the tree');\n  return map;\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst reduce = (obj, fn, acc) => {\n  return Object.keys(obj).reduce(function reducer(newAcc, key) {\n    return fn(newAcc, obj[key], key);\n  }, acc);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction forEach(obj, fn) {\n  Object.keys(obj).forEach(function iterator(key) {\n    return fn(obj[key], key);\n  });\n}\n/* global google */\n\n\nconst applyUpdaterToNextProps = ( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nupdaterMap, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nprevProps, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nnextProps, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ninstance // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const map = {}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  const iter = (fn, key) => {\n    const nextValue = nextProps[key];\n\n    if (nextValue !== prevProps[key]) {\n      map[key] = nextValue;\n      fn(instance, nextValue);\n    }\n  };\n\n  forEach(updaterMap, iter);\n  return map;\n};\n\nfunction registerEvents( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nprops, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ninstance, eventMap) {\n  const registeredList = reduce(eventMap, function reducer(acc, googleEventName, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onEventName) {\n    if (typeof props[onEventName] === 'function') {\n      acc.push(google.maps.event.addListener(instance, googleEventName, props[onEventName]));\n    }\n\n    return acc;\n  }, []);\n  return registeredList;\n}\n\nfunction unregisterEvent(registered) {\n  google.maps.event.removeListener(registered);\n}\n\nfunction unregisterEvents() {\n  let events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  events.forEach(unregisterEvent);\n}\n\nfunction applyUpdatersToPropsAndRegisterEvents(_ref) {\n  let {\n    updaterMap,\n    eventMap,\n    prevProps,\n    nextProps,\n    instance\n  } = _ref;\n  const registeredEvents = registerEvents(nextProps, instance, eventMap);\n  applyUpdaterToNextProps(updaterMap, prevProps, nextProps, instance);\n  return registeredEvents;\n}\n\nconst eventMap$i = {\n  onDblClick: 'dblclick',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseDown: 'mousedown',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n  onTilesLoaded: 'tilesloaded',\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDrag: 'drag',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onProjectionChanged: 'projection_changed',\n  onResize: 'resize',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed'\n};\nconst updaterMap$i = {\n  extraMapTypes(map, extra) {\n    extra.forEach(function forEachExtra(it, i) {\n      map.mapTypes.set(String(i), it);\n    });\n  },\n\n  center(map, center) {\n    map.setCenter(center);\n  },\n\n  clickableIcons(map, clickable) {\n    map.setClickableIcons(clickable);\n  },\n\n  heading(map, heading) {\n    map.setHeading(heading);\n  },\n\n  mapTypeId(map, mapTypeId) {\n    map.setMapTypeId(mapTypeId);\n  },\n\n  options(map, options) {\n    map.setOptions(options);\n  },\n\n  streetView(map, streetView) {\n    map.setStreetView(streetView);\n  },\n\n  tilt(map, tilt) {\n    map.setTilt(tilt);\n  },\n\n  zoom(map, zoom) {\n    map.setZoom(zoom);\n  }\n\n}; // function GoogleMapFunctional({ children, options, id, mapContainerStyle, center, clickableIcons, extraMapTypes, heading, mapContainerClassName, mapTypeId, onBoundsChanged, onCenterChanged, onClick, onDblClick, onDrag, onDragEnd, onDragStart, onHeadingChanged, onIdle, onProjectionChanged, onResize, onTiltChanged, onLoad }: GoogleMapProps): JSX.Element {\n//   const [map, setMap] = React.useState<google.maps.Map | null>(null)\n//   const ref = React.useRef<HTMLDivElement | null>(null)\n//   const getInstance = React.useCallback(() => {\n//     if (ref.current === null) {\n//       return null\n//     }\n//     return new google.maps.Map(ref.current, options)\n//   }, [options])\n//   React.useEffect(() => {\n//   }, [])\n//   const panTo = React.useCallback((latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n//     const map = getInstance()\n//     if (map) {\n//       map.panTo(latLng)\n//     }\n//   }, [])\n//   React.useEffect(() => {\n//     const map = getInstance()\n//   }, [])\n//   return (\n//     <div\n//         id={id}\n//         ref={ref}\n//         style={mapContainerStyle}\n//         className={mapContainerClassName}\n//       >\n//         <MapContext.Provider value={map}>\n//           {map !== null ? children : <></>}\n//         </MapContext.Provider>\n//       </div>\n//   )\n// }\n\nclass GoogleMap extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      map: null\n    };\n    this.registeredEvents = [];\n    this.mapRef = null;\n\n    this.getInstance = () => {\n      if (this.mapRef === null) {\n        return null;\n      }\n\n      return new google.maps.Map(this.mapRef, this.props.options);\n    };\n\n    this.panTo = latLng => {\n      const map = this.getInstance();\n\n      if (map) {\n        map.panTo(latLng);\n      }\n    };\n\n    this.setMapCallback = () => {\n      if (this.state.map !== null) {\n        if (this.props.onLoad) {\n          this.props.onLoad(this.state.map);\n        }\n      }\n    };\n\n    this.getRef = ref => {\n      this.mapRef = ref;\n    };\n  }\n\n  componentDidMount() {\n    const map = this.getInstance();\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$i,\n      eventMap: eventMap$i,\n      prevProps: {},\n      nextProps: this.props,\n      instance: map\n    });\n    this.setState(function setMap() {\n      return {\n        map\n      };\n    }, this.setMapCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.map !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$i,\n        eventMap: eventMap$i,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.map\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.map !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.map);\n      }\n\n      unregisterEvents(this.registeredEvents);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.id,\n      ref: this.getRef,\n      style: this.props.mapContainerStyle,\n      className: this.props.mapContainerClassName\n    }, React.createElement(MapContext.Provider, {\n      value: this.state.map\n    }, this.state.map !== null ? this.props.children : React.createElement(React.Fragment, null)));\n  }\n\n}\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n\nfunction __rest$1(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nconst isBrowser = typeof document !== 'undefined';\n\nconst injectScript = _ref2 => {\n  let {\n    url,\n    id,\n    nonce\n  } = _ref2;\n\n  if (!isBrowser) {\n    return Promise.reject(new Error('document is undefined'));\n  }\n\n  return new Promise(function injectScriptCallback(resolve, reject) {\n    const existingScript = document.getElementById(id);\n    const windowWithGoogleMap = window;\n\n    if (existingScript) {\n      // Same script id/url: keep same script\n      const dataStateAttribute = existingScript.getAttribute('data-state');\n\n      if (existingScript.src === url && dataStateAttribute !== 'error') {\n        if (dataStateAttribute === 'ready') {\n          return resolve(id);\n        } else {\n          const originalInitMap = windowWithGoogleMap.initMap;\n          const originalErrorCallback = existingScript.onerror;\n\n          windowWithGoogleMap.initMap = function initMap() {\n            if (originalInitMap) {\n              originalInitMap();\n            }\n\n            resolve(id);\n          };\n\n          existingScript.onerror = function (err) {\n            if (originalErrorCallback) {\n              originalErrorCallback(err);\n            }\n\n            reject(err);\n          };\n\n          return;\n        }\n      } // Same script id, but either\n      // 1. requested URL is different\n      // 2. script failed to load\n      else {\n        existingScript.remove();\n      }\n    }\n\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.id = id;\n    script.async = true;\n    script.nonce = nonce;\n\n    script.onerror = function onerror(err) {\n      script.setAttribute('data-state', 'error');\n      reject(err);\n    };\n\n    windowWithGoogleMap.initMap = function onload() {\n      script.setAttribute('data-state', 'ready');\n      resolve(id);\n    };\n\n    document.head.appendChild(script);\n  }).catch(err => {\n    console.error('injectScript error: ', err);\n    throw err;\n  });\n};\n\nconst isRobotoStyle = element => {\n  // roboto font download\n  if (element.href && element.href.indexOf('https://fonts.googleapis.com/css?family=Roboto') === 0) {\n    return true;\n  } // roboto style elements\n\n\n  if (element.tagName.toLowerCase() === 'style' && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet.cssText && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet.cssText.replace('\\r\\n', '').indexOf('.gm-style') === 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText = '';\n    return true;\n  } // roboto style elements for other browsers\n\n\n  if (element.tagName.toLowerCase() === 'style' && element.innerHTML && element.innerHTML.replace('\\r\\n', '').indexOf('.gm-style') === 0) {\n    element.innerHTML = '';\n    return true;\n  } // when google tries to add empty style\n\n\n  if (element.tagName.toLowerCase() === 'style' && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  !element.styleSheet && !element.innerHTML) {\n    return true;\n  }\n\n  return false;\n}; // Preventing the Google Maps library from downloading an extra font\n\n\nconst preventGoogleFonts = () => {\n  // we override these methods only for one particular head element\n  // default methods for other elements are not affected\n  const head = document.getElementsByTagName('head')[0];\n  const trueInsertBefore = head.insertBefore.bind(head); // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n\n  head.insertBefore = function insertBefore(newElement, referenceElement) {\n    if (!isRobotoStyle(newElement)) {\n      Reflect.apply(trueInsertBefore, head, [newElement, referenceElement]);\n    }\n  };\n\n  const trueAppend = head.appendChild.bind(head); // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n\n  head.appendChild = function appendChild(textNode) {\n    if (!isRobotoStyle(textNode)) {\n      Reflect.apply(trueAppend, head, [textNode]);\n    }\n  };\n};\n\nfunction makeLoadScriptUrl(_ref3) {\n  let {\n    googleMapsApiKey,\n    googleMapsClientId,\n    version = 'weekly',\n    language,\n    region,\n    libraries,\n    channel,\n    mapIds\n  } = _ref3;\n  const params = [];\n  invariant_1(googleMapsApiKey && googleMapsClientId || !(googleMapsApiKey && googleMapsClientId), 'You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time.');\n\n  if (googleMapsApiKey) {\n    params.push(`key=${googleMapsApiKey}`);\n  } else if (googleMapsClientId) {\n    params.push(`client=${googleMapsClientId}`);\n  }\n\n  if (version) {\n    params.push(`v=${version}`);\n  }\n\n  if (language) {\n    params.push(`language=${language}`);\n  }\n\n  if (region) {\n    params.push(`region=${region}`);\n  }\n\n  if (libraries && libraries.length) {\n    params.push(`libraries=${libraries.sort().join(',')}`);\n  }\n\n  if (channel) {\n    params.push(`channel=${channel}`);\n  }\n\n  if (mapIds && mapIds.length) {\n    params.push(`map_ids=${mapIds.join(',')}`);\n  }\n\n  params.push('callback=initMap');\n  return `https://maps.googleapis.com/maps/api/js?${params.join('&')}`;\n}\n\nlet cleaningUp = false;\n\nfunction DefaultLoadingElement() {\n  return React.createElement(\"div\", null, `Loading...`);\n}\n\nconst defaultLoadScriptProps = {\n  id: 'script-loader',\n  version: 'weekly'\n};\n\nclass LoadScript extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.check = React.createRef();\n    this.state = {\n      loaded: false\n    };\n\n    this.cleanupCallback = () => {\n      // @ts-ignore\n      delete window.google.maps;\n      this.injectScript();\n    };\n\n    this.isCleaningUp = () => __awaiter(this, void 0, void 0, function* () {\n      function promiseCallback(resolve) {\n        if (!cleaningUp) {\n          resolve();\n        } else {\n          if (isBrowser) {\n            const timer = window.setInterval(function interval() {\n              if (!cleaningUp) {\n                window.clearInterval(timer);\n                resolve();\n              }\n            }, 1);\n          }\n        }\n\n        return;\n      }\n\n      return new Promise(promiseCallback);\n    });\n\n    this.cleanup = () => {\n      cleaningUp = true;\n      const script = document.getElementById(this.props.id);\n\n      if (script && script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n\n      Array.prototype.slice.call(document.getElementsByTagName('script')).filter(function filter(script) {\n        return typeof script.src === 'string' && script.src.includes('maps.googleapis');\n      }).forEach(function forEach(script) {\n        if (script.parentNode) {\n          script.parentNode.removeChild(script);\n        }\n      });\n      Array.prototype.slice.call(document.getElementsByTagName('link')).filter(function filter(link) {\n        return link.href === 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans';\n      }).forEach(function forEach(link) {\n        if (link.parentNode) {\n          link.parentNode.removeChild(link);\n        }\n      });\n      Array.prototype.slice.call(document.getElementsByTagName('style')).filter(function filter(style) {\n        return style.innerText !== undefined && style.innerText.length > 0 && style.innerText.includes('.gm-');\n      }).forEach(function forEach(style) {\n        if (style.parentNode) {\n          style.parentNode.removeChild(style);\n        }\n      });\n    };\n\n    this.injectScript = () => {\n      if (this.props.preventGoogleFontsLoading) {\n        preventGoogleFonts();\n      }\n\n      invariant_1(!!this.props.id, 'LoadScript requires \"id\" prop to be a string: %s', this.props.id);\n      const injectScriptOptions = {\n        id: this.props.id,\n        nonce: this.props.nonce,\n        url: makeLoadScriptUrl(this.props)\n      };\n      injectScript(injectScriptOptions).then(() => {\n        if (this.props.onLoad) {\n          this.props.onLoad();\n        }\n\n        this.setState(function setLoaded() {\n          return {\n            loaded: true\n          };\n        });\n        return;\n      }).catch(err => {\n        if (this.props.onError) {\n          this.props.onError(err);\n        }\n\n        console.error(`\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${this.props.googleMapsApiKey || '-'}) or Client ID (${this.props.googleMapsClientId || '-'}) to <LoadScript />\n          Otherwise it is a Network issue.\n        `);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (isBrowser) {\n      if (window.google && window.google.maps && !cleaningUp) {\n        console.error('google api is already presented');\n        return;\n      }\n\n      this.isCleaningUp().then(this.injectScript).catch(function error(err) {\n        console.error('Error at injecting script after cleaning up: ', err);\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.libraries !== prevProps.libraries) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n\n    if (isBrowser && prevProps.language !== this.props.language) {\n      this.cleanup(); // TODO: refactor to use gDSFP maybe... wait for hooks refactoring.\n      // eslint-disable-next-line react/no-did-update-set-state\n\n      this.setState(function setLoaded() {\n        return {\n          loaded: false\n        };\n      }, this.cleanupCallback);\n    }\n  }\n\n  componentWillUnmount() {\n    if (isBrowser) {\n      this.cleanup();\n\n      const timeoutCallback = () => {\n        if (!this.check.current) {\n          // @ts-ignore\n          delete window.google;\n          cleaningUp = false;\n        }\n      };\n\n      window.setTimeout(timeoutCallback, 1);\n\n      if (this.props.onUnmount) {\n        this.props.onUnmount();\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      ref: this.check\n    }), this.state.loaded ? this.props.children : this.props.loadingElement || React.createElement(DefaultLoadingElement, null));\n  }\n\n}\n\nLoadScript.defaultProps = defaultLoadScriptProps;\n/* eslint-disable filenames/match-regex */\n\nlet previouslyLoadedUrl;\n\nfunction useLoadScript(_ref4) {\n  let {\n    id = defaultLoadScriptProps.id,\n    version = defaultLoadScriptProps.version,\n    nonce,\n    googleMapsApiKey,\n    googleMapsClientId,\n    language,\n    region,\n    libraries,\n    preventGoogleFontsLoading,\n    channel,\n    mapIds\n  } = _ref4;\n  const isMounted = React.useRef(false);\n  const [isLoaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState(undefined);\n  React.useEffect(function trackMountedState() {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  React.useEffect(function applyPreventGoogleFonts() {\n    if (isBrowser && preventGoogleFontsLoading) {\n      preventGoogleFonts();\n    }\n  }, [preventGoogleFontsLoading]);\n  React.useEffect(function validateLoadedState() {\n    if (isLoaded) {\n      invariant_1(!!window.google, 'useLoadScript was marked as loaded, but window.google is not present. Something went wrong.');\n    }\n  }, [isLoaded]);\n  const url = makeLoadScriptUrl({\n    version,\n    googleMapsApiKey,\n    googleMapsClientId,\n    language,\n    region,\n    libraries,\n    channel,\n    mapIds\n  });\n  React.useEffect(function loadScriptAndModifyLoadedState() {\n    if (!isBrowser) {\n      return;\n    }\n\n    function setLoadedIfMounted() {\n      if (isMounted.current) {\n        setLoaded(true);\n        previouslyLoadedUrl = url;\n      }\n    }\n\n    if (window.google && window.google.maps && previouslyLoadedUrl === url) {\n      setLoadedIfMounted();\n      return;\n    }\n\n    injectScript({\n      id,\n      url,\n      nonce\n    }).then(setLoadedIfMounted).catch(function handleInjectError(err) {\n      if (isMounted.current) {\n        setLoadError(err);\n      }\n\n      console.warn(`\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${googleMapsApiKey || '-'}) or Client ID (${googleMapsClientId || '-'})\n        Otherwise it is a Network issue.\n      `);\n      console.error(err);\n    });\n  }, [id, url, nonce]);\n  const prevLibraries = React.useRef();\n  React.useEffect(function checkPerformance() {\n    if (prevLibraries.current && libraries !== prevLibraries.current) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n\n    prevLibraries.current = libraries;\n  }, [libraries]);\n  return {\n    isLoaded,\n    loadError,\n    url\n  };\n}\n\nconst defaultLoadingElement = React.createElement(DefaultLoadingElement, null);\n\nfunction LoadScriptNext(_a) {\n  var {\n    loadingElement,\n    onLoad,\n    onError,\n    onUnmount,\n    children\n  } = _a,\n      hookOptions = __rest$1(_a, [\"loadingElement\", \"onLoad\", \"onError\", \"onUnmount\", \"children\"]);\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript(hookOptions);\n  React.useEffect(function handleOnLoad() {\n    if (isLoaded && typeof onLoad === 'function') {\n      onLoad();\n    }\n  }, [isLoaded, onLoad]);\n  React.useEffect(function handleOnError() {\n    if (loadError && typeof onError === 'function') {\n      onError(loadError);\n    }\n  }, [loadError, onError]);\n  React.useEffect(function handleOnUnmount() {\n    return () => {\n      if (onUnmount) {\n        onUnmount();\n      }\n    };\n  }, [onUnmount]);\n  return isLoaded ? children : loadingElement || defaultLoadingElement;\n}\n\nvar LoadScriptNext$1 = React.memo(LoadScriptNext); // do not edit .js files directly - edit src/index.jst\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n};\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at.\r\n *\r\n *      Http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst DEFAULT_ID = \"__googleMapsScriptId\";\n/**\r\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\r\n * dynamically using\r\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\r\n * It works by dynamically creating and appending a script node to the the\r\n * document head and wrapping the callback function so as to return a promise.\r\n *\r\n * ```\r\n * const loader = new Loader({\r\n *   apiKey: \"\",\r\n *   version: \"weekly\",\r\n *   libraries: [\"places\"]\r\n * });\r\n *\r\n * loader.load().then((google) => {\r\n *   const map = new google.maps.Map(...)\r\n * })\r\n * ```\r\n */\n\nclass Loader {\n  /**\r\n   * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\r\n   * using this library, instead the defaults are set by the Google Maps\r\n   * JavaScript API server.\r\n   *\r\n   * ```\r\n   * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\r\n   * ```\r\n   */\n  constructor(_ref5) {\n    let {\n      apiKey,\n      channel,\n      client,\n      id = DEFAULT_ID,\n      libraries = [],\n      language,\n      region,\n      version,\n      mapIds,\n      nonce,\n      retries = 3,\n      url = \"https://maps.googleapis.com/maps/api/js\"\n    } = _ref5;\n    this.CALLBACK = \"__googleMapsCallback\";\n    this.callbacks = [];\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.version = version;\n    this.apiKey = apiKey;\n    this.channel = channel;\n    this.client = client;\n    this.id = id || DEFAULT_ID; // Do not allow empty string\n\n    this.libraries = libraries;\n    this.language = language;\n    this.region = region;\n    this.mapIds = mapIds;\n    this.nonce = nonce;\n    this.retries = retries;\n    this.url = url;\n\n    if (Loader.instance) {\n      if (!fastDeepEqual(this.options, Loader.instance.options)) {\n        throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\n      }\n\n      return Loader.instance;\n    }\n\n    Loader.instance = this;\n  }\n\n  get options() {\n    return {\n      version: this.version,\n      apiKey: this.apiKey,\n      channel: this.channel,\n      client: this.client,\n      id: this.id,\n      libraries: this.libraries,\n      language: this.language,\n      region: this.region,\n      mapIds: this.mapIds,\n      nonce: this.nonce,\n      url: this.url\n    };\n  }\n\n  get failed() {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1;\n  }\n  /**\r\n   * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\r\n   *\r\n   * @ignore\r\n   */\n\n\n  createUrl() {\n    let url = this.url;\n    url += `?callback=${this.CALLBACK}`;\n\n    if (this.apiKey) {\n      url += `&key=${this.apiKey}`;\n    }\n\n    if (this.channel) {\n      url += `&channel=${this.channel}`;\n    }\n\n    if (this.client) {\n      url += `&client=${this.client}`;\n    }\n\n    if (this.libraries.length > 0) {\n      url += `&libraries=${this.libraries.join(\",\")}`;\n    }\n\n    if (this.language) {\n      url += `&language=${this.language}`;\n    }\n\n    if (this.region) {\n      url += `&region=${this.region}`;\n    }\n\n    if (this.version) {\n      url += `&v=${this.version}`;\n    }\n\n    if (this.mapIds) {\n      url += `&map_ids=${this.mapIds.join(\",\")}`;\n    }\n\n    return url;\n  }\n\n  deleteScript() {\n    const script = document.getElementById(this.id);\n\n    if (script) {\n      script.remove();\n    }\n  }\n  /**\r\n   * Load the Google Maps JavaScript API script and return a Promise.\r\n   */\n\n\n  load() {\n    return this.loadPromise();\n  }\n  /**\r\n   * Load the Google Maps JavaScript API script and return a Promise.\r\n   *\r\n   * @ignore\r\n   */\n\n\n  loadPromise() {\n    return new Promise((resolve, reject) => {\n      this.loadCallback(err => {\n        if (!err) {\n          resolve(window.google);\n        } else {\n          reject(err.error);\n        }\n      });\n    });\n  }\n  /**\r\n   * Load the Google Maps JavaScript API script with a callback.\r\n   */\n\n\n  loadCallback(fn) {\n    this.callbacks.push(fn);\n    this.execute();\n  }\n  /**\r\n   * Set the script on document.\r\n   */\n\n\n  setScript() {\n    if (document.getElementById(this.id)) {\n      // TODO wrap onerror callback for cases where the script was loaded elsewhere\n      this.callback();\n      return;\n    }\n\n    const url = this.createUrl();\n    const script = document.createElement(\"script\");\n    script.id = this.id;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.onerror = this.loadErrorCallback.bind(this);\n    script.defer = true;\n    script.async = true;\n\n    if (this.nonce) {\n      script.nonce = this.nonce;\n    }\n\n    document.head.appendChild(script);\n  }\n  /**\r\n   * Reset the loader state.\r\n   */\n\n\n  reset() {\n    this.deleteScript();\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.onerrorEvent = null;\n  }\n\n  resetIfRetryingFailed() {\n    if (this.failed) {\n      this.reset();\n    }\n  }\n\n  loadErrorCallback(e) {\n    this.errors.push(e);\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * Math.pow(2, this.errors.length);\n      console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\n      setTimeout(() => {\n        this.deleteScript();\n        this.setScript();\n      }, delay);\n    } else {\n      this.onerrorEvent = e;\n      this.callback();\n    }\n  }\n\n  setCallback() {\n    window.__googleMapsCallback = this.callback.bind(this);\n  }\n\n  callback() {\n    this.done = true;\n    this.loading = false;\n    this.callbacks.forEach(cb => {\n      cb(this.onerrorEvent);\n    });\n    this.callbacks = [];\n  }\n\n  execute() {\n    this.resetIfRetryingFailed();\n\n    if (this.done) {\n      this.callback();\n    } else {\n      // short circuit and warn if google.maps is already loaded\n      if (window.google && window.google.maps && window.google.maps.version) {\n        console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" + \"This may result in undesirable behavior as options and script parameters may not match.\");\n        this.callback();\n        return;\n      }\n\n      if (this.loading) ;else {\n        this.loading = true;\n        this.setCallback();\n        this.setScript();\n      }\n    }\n  }\n\n}\n/* eslint-disable filenames/match-regex */\n\n\nfunction useJsApiLoader(_ref6) {\n  let {\n    id = defaultLoadScriptProps.id,\n    version = defaultLoadScriptProps.version,\n    nonce,\n    googleMapsApiKey,\n    // googleMapsClientId,\n    language,\n    region,\n    libraries,\n    preventGoogleFontsLoading,\n    // channel,\n    mapIds\n  } = _ref6;\n  const isMounted = React.useRef(false);\n  const [isLoaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState(undefined);\n  React.useEffect(function trackMountedState() {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  const loader = React.useMemo(function memo() {\n    return new Loader({\n      id,\n      apiKey: googleMapsApiKey,\n      version,\n      libraries,\n      language,\n      region,\n      mapIds,\n      nonce\n    });\n  }, [id, googleMapsApiKey, version, libraries, language, region, mapIds, nonce]);\n  React.useEffect(function effect() {\n    if (isLoaded) {\n      return;\n    } else {\n      loader.load().then(function then() {\n        if (isMounted.current) setLoaded(true);\n      }).catch(function onrejected(error) {\n        setLoadError(error);\n      });\n    }\n  }, []);\n  React.useEffect(function applyPreventGoogleFonts() {\n    if (isBrowser && preventGoogleFontsLoading) {\n      preventGoogleFonts();\n    }\n  }, [preventGoogleFontsLoading]);\n  const prevLibraries = React.useRef();\n  React.useEffect(function effect() {\n    if (prevLibraries.current && libraries !== prevLibraries.current) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n\n    prevLibraries.current = libraries;\n  }, [libraries]);\n  return {\n    isLoaded,\n    loadError\n  };\n}\n\nconst eventMap$h = {};\nconst updaterMap$h = {\n  options(instance, options) {\n    instance.setOptions(options);\n  }\n\n};\n\nclass TrafficLayer extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      trafficLayer: null\n    };\n\n    this.setTrafficLayerCallback = () => {\n      if (this.state.trafficLayer !== null) {\n        if (this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.props.onLoad(this.state.trafficLayer);\n        }\n      }\n    };\n\n    this.registeredEvents = [];\n  }\n\n  componentDidMount() {\n    const trafficLayer = new google.maps.TrafficLayer(Object.assign(Object.assign({}, this.props.options || {}), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$h,\n      eventMap: eventMap$h,\n      prevProps: {},\n      nextProps: this.props,\n      instance: trafficLayer\n    });\n    this.setState(function setTrafficLayer() {\n      return {\n        trafficLayer\n      };\n    }, this.setTrafficLayerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.trafficLayer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$h,\n        eventMap: eventMap$h,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.trafficLayer\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.trafficLayer);\n      }\n\n      unregisterEvents(this.registeredEvents); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.trafficLayer.setMap(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nTrafficLayer.contextType = MapContext;\n\nclass BicyclingLayer extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      bicyclingLayer: null\n    };\n\n    this.setBicyclingLayerCallback = () => {\n      if (this.state.bicyclingLayer !== null) {\n        // TODO: how is this possibly null if we're doing a null check\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.state.bicyclingLayer.setMap(this.context);\n\n        if (this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.props.onLoad(this.state.bicyclingLayer);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const bicyclingLayer = new google.maps.BicyclingLayer();\n    this.setState(function setBicyclingLayer() {\n      return {\n        bicyclingLayer\n      };\n    }, this.setBicyclingLayerCallback);\n  }\n\n  componentWillUnmount() {\n    if (this.state.bicyclingLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.bicyclingLayer);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      this.state.bicyclingLayer.setMap(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nBicyclingLayer.contextType = MapContext;\n\nclass TransitLayer extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      transitLayer: null\n    };\n\n    this.setTransitLayerCallback = () => {\n      if (this.state.transitLayer !== null) {\n        // TODO: how is this possibly null if we're doing a null check\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.state.transitLayer.setMap(this.context);\n\n        if (this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.props.onLoad(this.state.transitLayer);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const transitLayer = new google.maps.TransitLayer();\n    this.setState(function setTransitLayer() {\n      return {\n        transitLayer\n      };\n    }, this.setTransitLayerCallback);\n  }\n\n  componentWillUnmount() {\n    if (this.state.transitLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.transitLayer);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      this.state.transitLayer.setMap(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nTransitLayer.contextType = MapContext;\n/* globals google */\n\nconst eventMap$g = {\n  onCircleComplete: 'circlecomplete',\n  onMarkerComplete: 'markercomplete',\n  onOverlayComplete: 'overlaycomplete',\n  onPolygonComplete: 'polygoncomplete',\n  onPolylineComplete: 'polylinecomplete',\n  onRectangleComplete: 'rectanglecomplete'\n};\nconst updaterMap$g = {\n  drawingMode(instance, drawingMode) {\n    instance.setDrawingMode(drawingMode);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  }\n\n};\n\nclass DrawingManager extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.registeredEvents = [];\n    this.state = {\n      drawingManager: null\n    };\n\n    this.setDrawingManagerCallback = () => {\n      if (this.state.drawingManager !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.drawingManager);\n      }\n    };\n\n    invariant_1(!!google.maps.drawing, `Did you include prop libraries={['drawing']} in the URL? %s`, google.maps.drawing);\n  }\n\n  componentDidMount() {\n    const drawingManager = new google.maps.drawing.DrawingManager(Object.assign(Object.assign({}, this.props.options || {}), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$g,\n      eventMap: eventMap$g,\n      prevProps: {},\n      nextProps: this.props,\n      instance: drawingManager\n    });\n    this.setState(function setDrawingManager() {\n      return {\n        drawingManager\n      };\n    }, this.setDrawingManagerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.drawingManager !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$g,\n        eventMap: eventMap$g,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.drawingManager\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.drawingManager !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.drawingManager);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.drawingManager.setMap(null);\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nDrawingManager.contextType = MapContext;\nconst eventMap$f = {\n  onAnimationChanged: 'animation_changed',\n  onClick: 'click',\n  onClickableChanged: 'clickable_changed',\n  onCursorChanged: 'cursor_changed',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDraggableChanged: 'draggable_changed',\n  onDragStart: 'dragstart',\n  onFlatChanged: 'flat_changed',\n  onIconChanged: 'icon_changed',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onPositionChanged: 'position_changed',\n  onRightClick: 'rightclick',\n  onShapeChanged: 'shape_changed',\n  onTitleChanged: 'title_changed',\n  onVisibleChanged: 'visible_changed',\n  onZindexChanged: 'zindex_changed'\n};\nconst updaterMap$f = {\n  animation(instance, animation) {\n    instance.setAnimation(animation);\n  },\n\n  clickable(instance, clickable) {\n    instance.setClickable(clickable);\n  },\n\n  cursor(instance, cursor) {\n    instance.setCursor(cursor);\n  },\n\n  draggable(instance, draggable) {\n    instance.setDraggable(draggable);\n  },\n\n  icon(instance, icon) {\n    instance.setIcon(icon);\n  },\n\n  label(instance, label) {\n    instance.setLabel(label);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  opacity(instance, opacity) {\n    instance.setOpacity(opacity);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  position(instance, position) {\n    instance.setPosition(position);\n  },\n\n  shape(instance, shape) {\n    instance.setShape(shape);\n  },\n\n  title(instance, title) {\n    instance.setTitle(title);\n  },\n\n  visible(instance, visible) {\n    instance.setVisible(visible);\n  },\n\n  zIndex(instance, zIndex) {\n    instance.setZIndex(zIndex);\n  }\n\n};\n\nclass Marker extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n  }\n\n  componentDidMount() {\n    const markerOptions = Object.assign(Object.assign(Object.assign({}, this.props.options || {}), this.props.clusterer ? {} : {\n      map: this.context\n    }), {\n      position: this.props.position\n    }); // Unfortunately we can't just do this in the contstructor, because the\n    // `MapContext` might not be filled in yet.\n\n    this.marker = new google.maps.Marker(markerOptions);\n\n    if (this.props.clusterer) {\n      this.props.clusterer.addMarker(this.marker, !!this.props.noClustererRedraw);\n    } else {\n      this.marker.setMap(this.context);\n    }\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$f,\n      eventMap: eventMap$f,\n      prevProps: {},\n      nextProps: this.props,\n      instance: this.marker\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad(this.marker);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.marker) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$f,\n        eventMap: eventMap$f,\n        prevProps,\n        nextProps: this.props,\n        instance: this.marker\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.marker) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.marker);\n      }\n\n      unregisterEvents(this.registeredEvents);\n\n      if (this.props.clusterer) {\n        this.props.clusterer.removeMarker(this.marker, !!this.props.noClustererRedraw);\n      } else {\n        this.marker && this.marker.setMap(null);\n      }\n    }\n  }\n\n  render() {\n    let children = null;\n\n    if (this.props.children) {\n      children = React.Children.map(this.props.children, child => {\n        if (!React.isValidElement(child)) {\n          return child;\n        }\n\n        let elementChild = child;\n        return React.cloneElement(elementChild, {\n          anchor: this.marker\n        });\n      });\n    }\n\n    return children || null;\n  }\n\n}\n\nMarker.contextType = MapContext;\n\nvar ClusterIcon =\n/** @class */\nfunction () {\n  function ClusterIcon(cluster, styles) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView);\n    this.cluster = cluster;\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass();\n    this.className = this.clusterClassName;\n    this.styles = styles;\n    this.center = undefined;\n    this.div = null;\n    this.sums = null;\n    this.visible = false;\n    this.boundsChangedListener = null;\n    this.url = '';\n    this.height = 0;\n    this.width = 0;\n    this.anchorText = [0, 0];\n    this.anchorIcon = [0, 0];\n    this.textColor = 'black';\n    this.textSize = 11;\n    this.textDecoration = 'none';\n    this.fontWeight = 'bold';\n    this.fontStyle = 'normal';\n    this.fontFamily = 'Arial,sans-serif';\n    this.backgroundPosition = '0 0'; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n  }\n\n  ClusterIcon.prototype.onAdd = function () {\n    var _this = this;\n\n    var cMouseDownInCluster;\n    var cDraggingMapByCluster;\n    this.div = document.createElement('div');\n    this.div.className = this.className;\n\n    if (this.visible) {\n      this.show();\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.getPanes().overlayMouseTarget.appendChild(this.div); // Fix for Issue 157\n\n    this.boundsChangedListener = google.maps.event.addListener( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'boundschanged', function boundsChanged() {\n      cDraggingMapByCluster = cMouseDownInCluster;\n    });\n    google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true;\n      cDraggingMapByCluster = false;\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'click', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function (event) {\n      cMouseDownInCluster = false;\n\n      if (!cDraggingMapByCluster) {\n        var markerClusterer_1 = _this.cluster.getClusterer();\n        /**\n         * This event is fired when a cluster marker is clicked.\n         * @name MarkerClusterer#click\n         * @param {Cluster} c The cluster that was clicked.\n         * @event\n         */\n\n\n        google.maps.event.trigger(markerClusterer_1, 'click', _this.cluster);\n        google.maps.event.trigger(markerClusterer_1, 'clusterclick', _this.cluster); // deprecated name\n        // The default click handler follows. Disable it by setting\n        // the zoomOnClick property to false.\n\n        if (markerClusterer_1.getZoomOnClick()) {\n          // Zoom into the cluster.\n          var maxZoom_1 = markerClusterer_1.getMaxZoom();\n\n          var bounds_1 = _this.cluster.getBounds(); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n\n          markerClusterer_1.getMap().fitBounds(bounds_1); // There is a fix for Issue 170 here:\n\n          setTimeout(function timeout() {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            markerClusterer_1.getMap().fitBounds(bounds_1); // Don't zoom beyond the max zoom level\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n\n            if (maxZoom_1 !== null && markerClusterer_1.getMap().getZoom() > maxZoom_1) {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              markerClusterer_1.getMap().setZoom(maxZoom_1 + 1);\n            }\n          }, 100);\n        } // Prevent event propagation to the map:\n\n\n        event.cancelBubble = true;\n\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n      }\n    });\n    google.maps.event.addDomListener(this.div, 'mouseover', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\n       * This event is fired when the mouse moves over a cluster marker.\n       * @name MarkerClusterer#mouseover\n       * @param {Cluster} c The cluster that the mouse moved over.\n       * @event\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseover', _this.cluster);\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'mouseout', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\n       * This event is fired when the mouse moves out of a cluster marker.\n       * @name MarkerClusterer#mouseout\n       * @param {Cluster} c The cluster that the mouse moved out of.\n       * @event\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseout', _this.cluster);\n    });\n  };\n\n  ClusterIcon.prototype.onRemove = function () {\n    if (this.div && this.div.parentNode) {\n      this.hide();\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener);\n      }\n\n      google.maps.event.clearInstanceListeners(this.div);\n      this.div.parentNode.removeChild(this.div);\n      this.div = null;\n    }\n  };\n\n  ClusterIcon.prototype.draw = function () {\n    if (this.visible && this.div !== null && this.center) {\n      var _a = this.getPosFromLatLng(this.center),\n          x = _a.x,\n          y = _a.y;\n\n      this.div.style.top = y + 'px';\n      this.div.style.left = x + 'px';\n    }\n  };\n\n  ClusterIcon.prototype.hide = function () {\n    if (this.div) {\n      this.div.style.display = 'none';\n    }\n\n    this.visible = false;\n  };\n\n  ClusterIcon.prototype.show = function () {\n    if (this.div && this.center) {\n      var img = '',\n          divTitle = ''; // NOTE: values must be specified in px units\n\n      var bp = this.backgroundPosition.split(' ');\n      var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10);\n      var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10);\n      var pos = this.getPosFromLatLng(this.center);\n\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle();\n      } else {\n        divTitle = this.sums.title;\n      }\n\n      this.div.style.cssText = this.createCss(pos);\n      img = \"<img alt='\" + divTitle + \"' src='\" + this.url + \"' style='position: absolute; top: \" + spriteV + 'px; left: ' + spriteH + 'px; '; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      //@ts-ignore\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img += 'clip: rect(' + -1 * spriteV + 'px, ' + (-1 * spriteH + this.width) + 'px, ' + (-1 * spriteV + this.height) + 'px, ' + -1 * spriteH + 'px);';\n      }\n\n      img += \"'>\";\n      this.div.innerHTML = img + \"<div style='\" + 'position: absolute;' + 'top: ' + this.anchorText[0] + 'px;' + 'left: ' + this.anchorText[1] + 'px;' + 'color: ' + this.textColor + ';' + 'font-size: ' + this.textSize + 'px;' + 'font-family: ' + this.fontFamily + ';' + 'font-weight: ' + this.fontWeight + ';' + 'font-style: ' + this.fontStyle + ';' + 'text-decoration: ' + this.textDecoration + ';' + 'text-align: center;' + 'width: ' + this.width + 'px;' + 'line-height:' + this.height + 'px;' + \"'>\" + // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.sums.text + '</div>';\n      this.div.title = divTitle;\n      this.div.style.display = '';\n    }\n\n    this.visible = true;\n  };\n\n  ClusterIcon.prototype.useStyle = function (sums) {\n    this.sums = sums;\n    var styles = this.cluster.getClusterer().getStyles();\n    var style = styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))];\n    this.url = style.url;\n    this.height = style.height;\n    this.width = style.width;\n    if (style.className) this.className = this.clusterClassName + \" \" + style.className;\n    this.anchorText = style.anchorText || [0, 0];\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2];\n    this.textColor = style.textColor || 'black';\n    this.textSize = style.textSize || 11;\n    this.textDecoration = style.textDecoration || 'none';\n    this.fontWeight = style.fontWeight || 'bold';\n    this.fontStyle = style.fontStyle || 'normal';\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif';\n    this.backgroundPosition = style.backgroundPosition || '0 0';\n  };\n\n  ClusterIcon.prototype.setCenter = function (center) {\n    this.center = center;\n  };\n\n  ClusterIcon.prototype.createCss = function (pos) {\n    var style = [];\n    style.push('cursor: pointer;');\n    style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;');\n    style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;');\n    return style.join('');\n  };\n\n  ClusterIcon.prototype.getPosFromLatLng = function (latlng) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n    pos.x -= this.anchorIcon[1];\n    pos.y -= this.anchorIcon[0]; // pos.x = pos.x\n    // pos.y = pos.y\n\n    return pos;\n  };\n\n  return ClusterIcon;\n}();\n\nvar Cluster$1 =\n/** @class */\nfunction () {\n  function Cluster(markerClusterer) {\n    this.markerClusterer = markerClusterer; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.map = this.markerClusterer.getMap();\n    this.gridSize = this.markerClusterer.getGridSize();\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize();\n    this.averageCenter = this.markerClusterer.getAverageCenter();\n    this.markers = [];\n    this.center = undefined;\n    this.bounds = null;\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles());\n  }\n\n  Cluster.prototype.getSize = function () {\n    return this.markers.length;\n  };\n\n  Cluster.prototype.getMarkers = function () {\n    return this.markers;\n  };\n\n  Cluster.prototype.getCenter = function () {\n    return this.center;\n  };\n\n  Cluster.prototype.getMap = function () {\n    return this.map;\n  };\n\n  Cluster.prototype.getClusterer = function () {\n    return this.markerClusterer;\n  };\n\n  Cluster.prototype.getBounds = function () {\n    var bounds = new google.maps.LatLngBounds(this.center, this.center);\n    var markers = this.getMarkers();\n\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n\n      if (position) {\n        bounds.extend(position);\n      }\n    }\n\n    return bounds;\n  };\n\n  Cluster.prototype.remove = function () {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.clusterIcon.setMap(null);\n    this.markers = []; // @ts-ignore\n\n    delete this.markers;\n  };\n\n  Cluster.prototype.addMarker = function (marker) {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false;\n    }\n\n    if (!this.center) {\n      var position = marker.getPosition();\n\n      if (position) {\n        this.center = position;\n        this.calculateBounds();\n      }\n    } else {\n      if (this.averageCenter) {\n        var position = marker.getPosition();\n\n        if (position) {\n          var length_1 = this.markers.length + 1;\n          this.center = new google.maps.LatLng((this.center.lat() * (length_1 - 1) + position.lat()) / length_1, (this.center.lng() * (length_1 - 1) + position.lng()) / length_1);\n          this.calculateBounds();\n        }\n      }\n    }\n\n    marker.isAdded = true;\n    this.markers.push(marker);\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    var zoom = this.map.getZoom();\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (var i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null);\n      }\n    } else {\n      marker.setMap(null);\n    }\n\n    return true;\n  };\n\n  Cluster.prototype.isMarkerInClusterBounds = function (marker) {\n    if (this.bounds !== null) {\n      var position = marker.getPosition();\n\n      if (position) {\n        return this.bounds.contains(position);\n      }\n    }\n\n    return false;\n  };\n\n  Cluster.prototype.calculateBounds = function () {\n    this.bounds = this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center, this.center));\n  };\n\n  Cluster.prototype.updateIcon = function () {\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    var zoom = this.map.getZoom();\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      this.clusterIcon.hide();\n      return;\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide();\n      return;\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center);\n    }\n\n    this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length));\n    this.clusterIcon.show();\n  };\n\n  Cluster.prototype.isMarkerAlreadyAdded = function (marker) {\n    if (this.markers.includes) {\n      return this.markers.includes(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  return Cluster;\n}();\n/* global google */\n\n/**\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\n * which is not a problem as max array length is 4294967296 (2**32)\n */\n\n\nvar CALCULATOR = function CALCULATOR(markers, numStyles) {\n  var count = markers.length;\n  var numberOfDigits = count.toString().length;\n  var index = Math.min(numberOfDigits, numStyles);\n  return {\n    text: count.toString(),\n    index: index,\n    title: ''\n  };\n};\n\nvar BATCH_SIZE = 2000;\nvar BATCH_SIZE_IE = 500;\nvar IMAGE_PATH = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m';\nvar IMAGE_EXTENSION = 'png';\nvar IMAGE_SIZES = [53, 56, 66, 78, 90];\nvar CLUSTERER_CLASS = 'cluster';\n\nvar Clusterer =\n/** @class */\nfunction () {\n  function Clusterer(map, optMarkers, optOptions) {\n    if (optMarkers === void 0) {\n      optMarkers = [];\n    }\n\n    if (optOptions === void 0) {\n      optOptions = {};\n    }\n\n    this.extend(Clusterer, google.maps.OverlayView);\n    this.markers = [];\n    this.clusters = [];\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n    this.gridSize = optOptions.gridSize || 60;\n    this.minClusterSize = optOptions.minimumClusterSize || 2;\n    this.maxZoom = optOptions.maxZoom || null;\n    this.styles = optOptions.styles || [];\n    this.title = optOptions.title || '';\n    this.zoomOnClick = true;\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick;\n    }\n\n    this.averageCenter = false;\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter;\n    }\n\n    this.ignoreHidden = false;\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden;\n    }\n\n    this.enableRetinaIcons = false;\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons;\n    }\n\n    this.imagePath = optOptions.imagePath || IMAGE_PATH;\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION;\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES;\n    this.calculator = optOptions.calculator || CALCULATOR;\n    this.batchSize = optOptions.batchSize || BATCH_SIZE;\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE;\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS;\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE;\n    }\n\n    this.timerRefStatic = null;\n    this.setupStyles();\n    this.addMarkers(optMarkers, true); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(map); // Note: this causes onAdd to be called\n  }\n\n  Clusterer.prototype.onAdd = function () {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.activeMap = this.getMap();\n    this.ready = true;\n    this.repaint(); // Add the map event listeners\n\n    this.listeners = [google.maps.event.addListener( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'zoom_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.resetViewport(false); // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n\n\n      if ( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === (_this.get('minZoom') || 0) || // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === _this.get('maxZoom')) {\n        google.maps.event.trigger(_this, 'idle');\n      }\n    }), google.maps.event.addListener( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'idle', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.redraw();\n    })];\n  }; // eslint-disable-next-line @getify/proper-arrows/this\n\n\n  Clusterer.prototype.onRemove = function () {\n    // Put all the managed markers back on the map:\n    for (var i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap);\n      }\n    } // Remove all clusters:\n\n\n    for (var i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove();\n    }\n\n    this.clusters = []; // Remove map event listeners:\n\n    for (var i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i]);\n    }\n\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n  }; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  Clusterer.prototype.draw = function () {};\n\n  Clusterer.prototype.setupStyles = function () {\n    if (this.styles.length > 0) {\n      return;\n    }\n\n    for (var i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i]\n      });\n    }\n  };\n\n  Clusterer.prototype.fitMapToMarkers = function () {\n    var markers = this.getMarkers();\n    var bounds = new google.maps.LatLngBounds();\n\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n\n      if (position) {\n        bounds.extend(position);\n      }\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.getMap().fitBounds(bounds);\n  };\n\n  Clusterer.prototype.getGridSize = function () {\n    return this.gridSize;\n  };\n\n  Clusterer.prototype.setGridSize = function (gridSize) {\n    this.gridSize = gridSize;\n  };\n\n  Clusterer.prototype.getMinimumClusterSize = function () {\n    return this.minClusterSize;\n  };\n\n  Clusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n    this.minClusterSize = minimumClusterSize;\n  };\n\n  Clusterer.prototype.getMaxZoom = function () {\n    return this.maxZoom;\n  };\n\n  Clusterer.prototype.setMaxZoom = function (maxZoom) {\n    this.maxZoom = maxZoom;\n  };\n\n  Clusterer.prototype.getStyles = function () {\n    return this.styles;\n  };\n\n  Clusterer.prototype.setStyles = function (styles) {\n    this.styles = styles;\n  };\n\n  Clusterer.prototype.getTitle = function () {\n    return this.title;\n  };\n\n  Clusterer.prototype.setTitle = function (title) {\n    this.title = title;\n  };\n\n  Clusterer.prototype.getZoomOnClick = function () {\n    return this.zoomOnClick;\n  };\n\n  Clusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n    this.zoomOnClick = zoomOnClick;\n  };\n\n  Clusterer.prototype.getAverageCenter = function () {\n    return this.averageCenter;\n  };\n\n  Clusterer.prototype.setAverageCenter = function (averageCenter) {\n    this.averageCenter = averageCenter;\n  };\n\n  Clusterer.prototype.getIgnoreHidden = function () {\n    return this.ignoreHidden;\n  };\n\n  Clusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n    this.ignoreHidden = ignoreHidden;\n  };\n\n  Clusterer.prototype.getEnableRetinaIcons = function () {\n    return this.enableRetinaIcons;\n  };\n\n  Clusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n    this.enableRetinaIcons = enableRetinaIcons;\n  };\n\n  Clusterer.prototype.getImageExtension = function () {\n    return this.imageExtension;\n  };\n\n  Clusterer.prototype.setImageExtension = function (imageExtension) {\n    this.imageExtension = imageExtension;\n  };\n\n  Clusterer.prototype.getImagePath = function () {\n    return this.imagePath;\n  };\n\n  Clusterer.prototype.setImagePath = function (imagePath) {\n    this.imagePath = imagePath;\n  };\n\n  Clusterer.prototype.getImageSizes = function () {\n    return this.imageSizes;\n  };\n\n  Clusterer.prototype.setImageSizes = function (imageSizes) {\n    this.imageSizes = imageSizes;\n  };\n\n  Clusterer.prototype.getCalculator = function () {\n    return this.calculator;\n  };\n\n  Clusterer.prototype.setCalculator = function (calculator) {\n    this.calculator = calculator;\n  };\n\n  Clusterer.prototype.getBatchSizeIE = function () {\n    return this.batchSizeIE;\n  };\n\n  Clusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n    this.batchSizeIE = batchSizeIE;\n  };\n\n  Clusterer.prototype.getClusterClass = function () {\n    return this.clusterClass;\n  };\n\n  Clusterer.prototype.setClusterClass = function (clusterClass) {\n    this.clusterClass = clusterClass;\n  };\n\n  Clusterer.prototype.getMarkers = function () {\n    return this.markers;\n  };\n\n  Clusterer.prototype.getTotalMarkers = function () {\n    return this.markers.length;\n  };\n\n  Clusterer.prototype.getClusters = function () {\n    return this.clusters;\n  };\n\n  Clusterer.prototype.getTotalClusters = function () {\n    return this.clusters.length;\n  };\n\n  Clusterer.prototype.addMarker = function (marker, optNoDraw) {\n    this.pushMarkerTo(marker);\n\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n\n  Clusterer.prototype.addMarkers = function (markers, optNoDraw) {\n    for (var key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key]);\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n\n  Clusterer.prototype.pushMarkerTo = function (marker) {\n    var _this = this; // If the marker is draggable add a listener so we can update the clusters on the dragend:\n\n\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, 'dragend', function () {\n        if (_this.ready) {\n          marker.isAdded = false;\n\n          _this.repaint();\n        }\n      });\n    }\n\n    marker.isAdded = false;\n    this.markers.push(marker);\n  };\n\n  Clusterer.prototype.removeMarker_ = function (marker) {\n    var index = -1;\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n\n    return true;\n  };\n\n  Clusterer.prototype.removeMarker = function (marker, optNoDraw) {\n    var removed = this.removeMarker_(marker);\n\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n\n    return removed;\n  };\n\n  Clusterer.prototype.removeMarkers = function (markers, optNoDraw) {\n    var removed = false;\n\n    for (var i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i]);\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n\n    return removed;\n  };\n\n  Clusterer.prototype.clearMarkers = function () {\n    this.resetViewport(true);\n    this.markers = [];\n  };\n\n  Clusterer.prototype.repaint = function () {\n    var oldClusters = this.clusters.slice();\n    this.clusters = [];\n    this.resetViewport(false);\n    this.redraw(); // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n\n    setTimeout(function timeout() {\n      for (var i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove();\n      }\n    }, 0);\n  };\n\n  Clusterer.prototype.getExtendedBounds = function (bounds) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var projection = this.getProjection(); // Convert the points to pixels and the extend out by the grid size.\n\n    var trPix = projection.fromLatLngToDivPixel( // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng()));\n    trPix.x += this.gridSize;\n    trPix.y -= this.gridSize;\n    var blPix = projection.fromLatLngToDivPixel( // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()));\n    blPix.x -= this.gridSize;\n    blPix.y += this.gridSize; // Extend the bounds to contain the new bounds.\n\n    bounds.extend( // Convert the pixel points back to LatLng nw\n    projection.fromDivPixelToLatLng(trPix));\n    bounds.extend( // Convert the pixel points back to LatLng sw\n    projection.fromDivPixelToLatLng(blPix));\n    return bounds;\n  };\n\n  Clusterer.prototype.redraw = function () {\n    // Redraws all the clusters.\n    this.createClusters(0);\n  };\n\n  Clusterer.prototype.resetViewport = function (optHide) {\n    // Remove all the clusters\n    for (var i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove();\n    }\n\n    this.clusters = []; // Reset the markers to not be added and to be removed from the map.\n\n    for (var i = 0; i < this.markers.length; i++) {\n      var marker = this.markers[i];\n      marker.isAdded = false;\n\n      if (optHide) {\n        marker.setMap(null);\n      }\n    }\n  };\n\n  Clusterer.prototype.distanceBetweenPoints = function (p1, p2) {\n    var R = 6371; // Radius of the Earth in km\n\n    var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n    var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n  };\n\n  Clusterer.prototype.isMarkerInBounds = function (marker, bounds) {\n    var position = marker.getPosition();\n\n    if (position) {\n      return bounds.contains(position);\n    }\n\n    return false;\n  };\n\n  Clusterer.prototype.addToClosestCluster = function (marker) {\n    var cluster;\n    var distance = 40000; // Some large number\n\n    var clusterToAddTo = null;\n\n    for (var i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i];\n      var center = cluster.getCenter();\n      var position = marker.getPosition();\n\n      if (center && position) {\n        var d = this.distanceBetweenPoints(center, position);\n\n        if (d < distance) {\n          distance = d;\n          clusterToAddTo = cluster;\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker);\n    } else {\n      cluster = new Cluster$1(this);\n      cluster.addMarker(marker);\n      this.clusters.push(cluster);\n    }\n  };\n\n  Clusterer.prototype.createClusters = function (iFirst) {\n    var _this = this;\n\n    if (!this.ready) {\n      return;\n    } // Cancel previous batch processing if we're working on the first batch:\n\n\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this);\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic); // @ts-ignore\n\n        delete this.timerRefStatic;\n      }\n    } // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n\n\n    var mapBounds = // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getZoom() > 3 ? new google.maps.LatLngBounds( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getSouthWest(), // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getNorthEast()) : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n    var bounds = this.getExtendedBounds(mapBounds);\n    var iLast = Math.min(iFirst + this.batchSize, this.markers.length);\n\n    for (var i = iFirst; i < iLast; i++) {\n      var marker = this.markers[i];\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (!this.ignoreHidden || this.ignoreHidden && marker.getVisible()) {\n          this.addToClosestCluster(marker);\n        }\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout( // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        _this.createClusters(iLast);\n      }, 0);\n    } else {\n      this.timerRefStatic = null;\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n\n      google.maps.event.trigger(this, 'clusteringend', this);\n\n      for (var i = 0; i < this.clusters.length; i++) {\n        this.clusters[i].updateIcon();\n      }\n    }\n  };\n\n  Clusterer.prototype.extend = function (obj1, obj2) {\n    return function applyExtend(object) {\n      // eslint-disable-next-line guard-for-in\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property];\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n\n  return Clusterer;\n}();\n/* eslint-disable filenames/match-exported */\n\n\nconst eventMap$e = {\n  onClick: 'click',\n  onClusteringBegin: 'clusteringbegin',\n  onClusteringEnd: 'clusteringend',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover'\n};\nconst updaterMap$e = {\n  averageCenter(instance, averageCenter) {\n    instance.setAverageCenter(averageCenter);\n  },\n\n  batchSizeIE(instance, batchSizeIE) {\n    instance.setBatchSizeIE(batchSizeIE);\n  },\n\n  calculator(instance, calculator) {\n    instance.setCalculator(calculator);\n  },\n\n  clusterClass(instance, clusterClass) {\n    instance.setClusterClass(clusterClass);\n  },\n\n  enableRetinaIcons(instance, enableRetinaIcons) {\n    instance.setEnableRetinaIcons(enableRetinaIcons);\n  },\n\n  gridSize(instance, gridSize) {\n    instance.setGridSize(gridSize);\n  },\n\n  ignoreHidden(instance, ignoreHidden) {\n    instance.setIgnoreHidden(ignoreHidden);\n  },\n\n  imageExtension(instance, imageExtension) {\n    instance.setImageExtension(imageExtension);\n  },\n\n  imagePath(instance, imagePath) {\n    instance.setImagePath(imagePath);\n  },\n\n  imageSizes(instance, imageSizes) {\n    instance.setImageSizes(imageSizes);\n  },\n\n  maxZoom(instance, maxZoom) {\n    instance.setMaxZoom(maxZoom);\n  },\n\n  minimumClusterSize(instance, minimumClusterSize) {\n    instance.setMinimumClusterSize(minimumClusterSize);\n  },\n\n  styles(instance, styles) {\n    instance.setStyles(styles);\n  },\n\n  title(instance, title) {\n    instance.setTitle(title);\n  },\n\n  zoomOnClick(instance, zoomOnClick) {\n    instance.setZoomOnClick(zoomOnClick);\n  }\n\n};\n\nclass ClustererComponent extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      markerClusterer: null\n    };\n\n    this.setClustererCallback = () => {\n      if (this.state.markerClusterer !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.markerClusterer);\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.context) {\n      const markerClusterer = new Clusterer(this.context, [], this.props.options);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$e,\n        eventMap: eventMap$e,\n        prevProps: {},\n        nextProps: this.props,\n        instance: markerClusterer\n      });\n      this.setState(function setClusterer() {\n        return {\n          markerClusterer\n        };\n      }, this.setClustererCallback);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.markerClusterer) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$e,\n        eventMap: eventMap$e,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.markerClusterer\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.markerClusterer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.markerClusterer);\n      }\n\n      unregisterEvents(this.registeredEvents); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.markerClusterer.setMap(null);\n    }\n  }\n\n  render() {\n    return this.state.markerClusterer !== null ? this.props.children(this.state.markerClusterer) : null;\n  }\n\n}\n\nClustererComponent.contextType = MapContext;\n\nvar InfoBox =\n/** @class */\nfunction () {\n  function InfoBox(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.extend(InfoBox, google.maps.OverlayView); // Standard options (in common with google.maps.InfoWindow):\n\n    this.content = options.content || '';\n    this.disableAutoPan = options.disableAutoPan || false;\n    this.maxWidth = options.maxWidth || 0;\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0);\n    this.position = options.position || new google.maps.LatLng(0, 0);\n    this.zIndex = options.zIndex || null; // Additional options (unique to InfoBox):\n\n    this.boxClass = options.boxClass || 'infoBox';\n    this.boxStyle = options.boxStyle || {};\n    this.closeBoxMargin = options.closeBoxMargin || '2px';\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif';\n\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = '';\n    }\n\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1);\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true;\n      } else {\n        options.visible = !options.isHidden;\n      }\n    }\n\n    this.isHidden = !options.visible;\n    this.alignBottom = options.alignBottom || false;\n    this.pane = options.pane || 'floatPane';\n    this.enableEventPropagation = options.enableEventPropagation || false;\n    this.div = null;\n    this.closeListener = null;\n    this.moveListener = null;\n    this.mapListener = null;\n    this.contextListener = null;\n    this.eventListeners = null;\n    this.fixedWidthSet = null;\n  }\n\n  InfoBox.prototype.createInfoBoxDiv = function () {\n    var _this = this; // This handler prevents an event in the InfoBox from being passed on to the map.\n\n\n    function cancelHandler(event) {\n      event.cancelBubble = true;\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n    } // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    // eslint-disable-next-line  @getify/proper-arrows/this\n\n\n    var ignoreHandler = function (event) {\n      event.returnValue = false;\n\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      if (!_this.enableEventPropagation) {\n        cancelHandler(event);\n      }\n    };\n\n    if (!this.div) {\n      this.div = document.createElement('div');\n      this.setBoxStyle();\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content;\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg();\n        this.div.appendChild(this.content);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      var panes = this.getPanes();\n      panes[this.pane].appendChild(this.div); // Add the InfoBox div to the DOM\n\n      this.addClickHandler();\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true;\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px';\n          this.fixedWidthSet = true;\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          var bw = this.getBoxWidths();\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px';\n          this.fixedWidthSet = false;\n        }\n      }\n\n      this.panBox(this.disableAutoPan);\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []; // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n\n        var events = ['mousedown', 'mouseover', 'mouseout', 'mouseup', 'click', 'dblclick', 'touchstart', 'touchend', 'touchmove'];\n\n        for (var i = 0; i < events.length; i++) {\n          this.eventListeners.push(google.maps.event.addDomListener(this.div, events[i], cancelHandler));\n        } // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n\n\n        this.eventListeners.push(google.maps.event.addDomListener(this.div, 'mouseover', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        function () {\n          if (_this.div) {\n            _this.div.style.cursor = 'default';\n          }\n        }));\n      }\n\n      this.contextListener = google.maps.event.addDomListener(this.div, 'contextmenu', ignoreHandler);\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n\n      google.maps.event.trigger(this, 'domready');\n    }\n  };\n\n  InfoBox.prototype.getCloseBoxImg = function () {\n    var img = '';\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"';\n      img += ' aria-hidden=\"true\"';\n      img += \" src='\" + this.closeBoxURL + \"'\";\n      img += ' align=right'; // Do this because Opera chokes on style='float: right;'\n\n      img += \" style='\";\n      img += ' position: relative;'; // Required by MSIE\n\n      img += ' cursor: pointer;';\n      img += ' margin: ' + this.closeBoxMargin + ';';\n      img += \"'>\";\n    }\n\n    return img;\n  };\n\n  InfoBox.prototype.addClickHandler = function () {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      var closeBox = this.div.firstChild;\n      this.closeListener = google.maps.event.addDomListener(closeBox, 'click', this.getCloseClickHandler());\n    } else {\n      this.closeListener = null;\n    }\n  };\n\n  InfoBox.prototype.getCloseClickHandler = function () {\n    var _this = this; // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n\n    return function (event) {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true;\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n      /**\n       * This event is fired when the InfoBox's close box is clicked.\n       * @name InfoBox#closeclick\n       * @event\n       */\n\n\n      google.maps.event.trigger(_this, 'closeclick');\n\n      _this.close();\n    };\n  };\n\n  InfoBox.prototype.panBox = function (disablePan) {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      var map = this.getMap(); // Only pan if attached to map, not panorama\n\n      if (map instanceof google.maps.Map) {\n        var xOffset = 0;\n        var yOffset = 0;\n        var bounds = map.getBounds();\n\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position);\n        }\n\n        var mapDiv = map.getDiv(); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var mapWidth = mapDiv.offsetWidth; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var mapHeight = mapDiv.offsetHeight;\n        var iwOffsetX = this.pixelOffset.width;\n        var iwOffsetY = this.pixelOffset.height;\n        var iwWidth = this.div.offsetWidth;\n        var iwHeight = this.div.offsetHeight;\n        var padX = this.infoBoxClearance.width;\n        var padY = this.infoBoxClearance.height; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var projection = this.getProjection();\n        var pixPosition = projection.fromLatLngToContainerPixel(this.position);\n\n        if (pixPosition !== null) {\n          if (pixPosition.x < -iwOffsetX + padX) {\n            xOffset = pixPosition.x + iwOffsetX - padX;\n          } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n            xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;\n          }\n\n          if (this.alignBottom) {\n            if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n              yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;\n            } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;\n            }\n          } else {\n            if (pixPosition.y < -iwOffsetY + padY) {\n              yOffset = pixPosition.y + iwOffsetY - padY;\n            } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;\n            }\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset);\n        }\n      }\n    }\n  };\n\n  InfoBox.prototype.setBoxStyle = function () {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass; // Clear existing inline style values:\n\n      this.div.style.cssText = ''; // Apply style values defined in the boxStyle parameter:\n\n      var boxStyle = this.boxStyle;\n\n      for (var i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i];\n        }\n      } // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n\n\n      this.div.style.webkitTransform = 'translateZ(0)'; // Fix up opacity style for benefit of MSIE\n\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        var opacity = parseFloat(this.div.style.opacity || ''); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        this.div.style.msFilter = '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"';\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\n      } // Apply required styles\n\n\n      this.div.style.position = 'absolute';\n      this.div.style.visibility = 'hidden';\n\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + '';\n      }\n\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto';\n      }\n    }\n  };\n\n  InfoBox.prototype.getBoxWidths = function () {\n    var bw = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (!this.div) {\n      return bw;\n    }\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      var ownerDocument = this.div.ownerDocument;\n      var computedStyle = ownerDocument && ownerDocument.defaultView ? ownerDocument.defaultView.getComputedStyle(this.div, '') : null;\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0;\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0;\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0;\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0;\n      }\n    } else if ( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    document.documentElement.currentStyle // MSIE\n    ) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      var currentStyle = this.div.currentStyle;\n\n      if (currentStyle) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0;\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0;\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0;\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0;\n      }\n    }\n\n    return bw;\n  };\n\n  InfoBox.prototype.onRemove = function () {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div);\n      this.div = null;\n    }\n  };\n\n  InfoBox.prototype.draw = function () {\n    this.createInfoBoxDiv();\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      var projection = this.getProjection();\n      var pixPosition = projection.fromLatLngToDivPixel(this.position);\n\n      if (pixPosition !== null) {\n        this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px';\n\n        if (this.alignBottom) {\n          this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px';\n        } else {\n          this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px';\n        }\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden';\n      } else {\n        this.div.style.visibility = 'visible';\n      }\n    }\n  };\n\n  InfoBox.prototype.setOptions = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass;\n      this.setBoxStyle();\n    }\n\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle;\n      this.setBoxStyle();\n    }\n\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content);\n    }\n\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan;\n    }\n\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth;\n    }\n\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset;\n    }\n\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom;\n    }\n\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position);\n    }\n\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex);\n    }\n\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin;\n    }\n\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL;\n    }\n\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance;\n    }\n\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden;\n    }\n\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible;\n    }\n\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation;\n    }\n\n    if (this.div) {\n      this.draw();\n    }\n  };\n\n  InfoBox.prototype.setContent = function (content) {\n    this.content = content;\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener);\n        this.closeListener = null;\n      } // Odd code required to make things work with MSIE.\n\n\n      if (!this.fixedWidthSet) {\n        this.div.style.width = '';\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content;\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg();\n        this.div.appendChild(content);\n      } // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n\n\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px';\n\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content;\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg();\n          this.div.appendChild(content);\n        }\n      }\n\n      this.addClickHandler();\n    }\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n\n\n    google.maps.event.trigger(this, 'content_changed');\n  };\n\n  InfoBox.prototype.setPosition = function (latLng) {\n    this.position = latLng;\n\n    if (this.div) {\n      this.draw();\n    }\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n\n\n    google.maps.event.trigger(this, 'position_changed');\n  };\n\n  InfoBox.prototype.setVisible = function (isVisible) {\n    this.isHidden = !isVisible;\n\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible';\n    }\n  };\n\n  InfoBox.prototype.setZIndex = function (index) {\n    this.zIndex = index;\n\n    if (this.div) {\n      this.div.style.zIndex = index + '';\n    }\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n\n\n    google.maps.event.trigger(this, 'zindex_changed');\n  };\n\n  InfoBox.prototype.getContent = function () {\n    return this.content;\n  };\n\n  InfoBox.prototype.getPosition = function () {\n    return this.position;\n  };\n\n  InfoBox.prototype.getZIndex = function () {\n    return this.zIndex;\n  };\n\n  InfoBox.prototype.getVisible = function () {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var map = this.getMap();\n    var isVisible;\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false;\n    } else {\n      isVisible = !this.isHidden;\n    }\n\n    return isVisible;\n  };\n\n  InfoBox.prototype.show = function () {\n    this.isHidden = false;\n\n    if (this.div) {\n      this.div.style.visibility = 'visible';\n    }\n  };\n\n  InfoBox.prototype.hide = function () {\n    this.isHidden = true;\n\n    if (this.div) {\n      this.div.style.visibility = 'hidden';\n    }\n  };\n\n  InfoBox.prototype.open = function (map, anchor) {\n    var _this = this;\n\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.position = anchor.getPosition();\n      this.moveListener = google.maps.event.addListener(anchor, 'position_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var position = anchor.getPosition();\n\n        _this.setPosition(position);\n      });\n      this.mapListener = google.maps.event.addListener(anchor, 'map_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        _this.setMap(anchor.map);\n      });\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.setMap(map);\n\n    if (this.div) {\n      this.panBox();\n    }\n  };\n\n  InfoBox.prototype.close = function () {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener);\n      this.closeListener = null;\n    }\n\n    if (this.eventListeners) {\n      for (var i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i]);\n      }\n\n      this.eventListeners = null;\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener);\n      this.moveListener = null;\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener);\n      this.mapListener = null;\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener);\n      this.contextListener = null;\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.setMap(null);\n  };\n\n  InfoBox.prototype.extend = function (obj1, obj2) {\n    return function applyExtend(object) {\n      // eslint-disable-next-line guard-for-in\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property];\n        }\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n\n  return InfoBox;\n}();\n\nconst eventMap$d = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed'\n};\nconst updaterMap$d = {\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  position(instance, position) {\n    if (position instanceof google.maps.LatLng) {\n      instance.setPosition(position);\n    } else {\n      instance.setPosition(new google.maps.LatLng(position.lat, position.lng));\n    }\n  },\n\n  visible(instance, visible) {\n    instance.setVisible(visible);\n  },\n\n  zIndex(instance, zIndex) {\n    instance.setZIndex(zIndex);\n  }\n\n};\n\nclass InfoBoxComponent extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.containerElement = null;\n    this.state = {\n      infoBox: null\n    };\n\n    this.open = (infoBox, anchor) => {\n      if (anchor) {\n        infoBox.open(this.context, anchor);\n      } else if (infoBox.getPosition()) {\n        infoBox.open(this.context);\n      } else {\n        invariant_1(false, 'You must provide either an anchor or a position prop for <InfoBox>.');\n      }\n    };\n\n    this.setInfoBoxCallback = () => {\n      const {\n        anchor,\n        onLoad\n      } = this.props;\n      const {\n        infoBox\n      } = this.state;\n\n      if (infoBox !== null && this.containerElement !== null) {\n        infoBox.setContent(this.containerElement);\n        this.open(infoBox, anchor);\n\n        if (onLoad) {\n          onLoad(infoBox);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      options\n    } = this.props;\n\n    const _a = options || {},\n          {\n      position\n    } = _a,\n          infoBoxOptions = __rest$1(_a, [\"position\"]);\n\n    let positionLatLng;\n\n    if (position && !(position instanceof google.maps.LatLng)) {\n      positionLatLng = new google.maps.LatLng(position.lat, position.lng);\n    }\n\n    const infoBox = new InfoBox(Object.assign(Object.assign({}, infoBoxOptions), positionLatLng ? {\n      position: positionLatLng\n    } : {}));\n    this.containerElement = document.createElement('div');\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$d,\n      eventMap: eventMap$d,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoBox\n    });\n    this.setState({\n      infoBox\n    }, this.setInfoBoxCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      infoBox\n    } = this.state;\n\n    if (infoBox !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$d,\n        eventMap: eventMap$d,\n        prevProps,\n        nextProps: this.props,\n        instance: infoBox\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      onUnmount\n    } = this.props;\n    const {\n      infoBox\n    } = this.state;\n\n    if (infoBox !== null) {\n      if (onUnmount) {\n        onUnmount(infoBox);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      infoBox.close();\n    }\n  }\n\n  render() {\n    if (!this.containerElement) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement);\n  }\n\n}\n\nInfoBoxComponent.contextType = MapContext;\n/**\n * @module helpers\n */\n\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\n\nvar earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\n\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: earthRadius / 111325,\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1000,\n  kilometres: earthRadius / 1000,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1000,\n  millimetres: earthRadius * 1000,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\n\nfunction feature(geom, properties, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var feat = {\n    type: \"Feature\"\n  };\n\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\n\n\nfunction point(coordinates, properties, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n\n  var geom = {\n    type: \"Point\",\n    coordinates: coordinates\n  };\n  return feature(geom, properties, options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\n\n\nfunction featureCollection(features, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var fc = {\n    type: \"FeatureCollection\"\n  };\n\n  if (options.id) {\n    fc.id = options.id;\n  }\n\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n\n  fc.features = features;\n  return fc;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\n\n\nfunction radiansToLength(radians, units) {\n  if (units === void 0) {\n    units = \"kilometers\";\n  }\n\n  var factor = factors[units];\n\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n\n  return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\n\n\nfunction lengthToRadians(distance, units) {\n  if (units === void 0) {\n    units = \"kilometers\";\n  }\n\n  var factor = factors[units];\n\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n\n  return distance / factor;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\n\n\nfunction degreesToRadians(degrees) {\n  var radians = degrees % 360;\n  return radians * Math.PI / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\n\n\nfunction convertLength(length, originalUnit, finalUnit) {\n  if (originalUnit === void 0) {\n    originalUnit = \"kilometers\";\n  }\n\n  if (finalUnit === void 0) {\n    finalUnit = \"kilometers\";\n  }\n\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\n\n\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\n\n\nfunction clone(geojson) {\n  if (!geojson) {\n    throw new Error(\"geojson is required\");\n  }\n\n  switch (geojson.type) {\n    case \"Feature\":\n      return cloneFeature(geojson);\n\n    case \"FeatureCollection\":\n      return cloneFeatureCollection(geojson);\n\n    case \"Point\":\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiPoint\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n    case \"GeometryCollection\":\n      return cloneGeometry(geojson);\n\n    default:\n      throw new Error(\"unknown GeoJSON type\");\n  }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\n\n\nfunction cloneFeature(geojson) {\n  var cloned = {\n    type: \"Feature\"\n  }; // Preserve Foreign Members\n\n  Object.keys(geojson).forEach(function (key) {\n    switch (key) {\n      case \"type\":\n      case \"properties\":\n      case \"geometry\":\n        return;\n\n      default:\n        cloned[key] = geojson[key];\n    }\n  }); // Add properties & geometry last\n\n  cloned.properties = cloneProperties(geojson.properties);\n  cloned.geometry = cloneGeometry(geojson.geometry);\n  return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\n\n\nfunction cloneProperties(properties) {\n  var cloned = {};\n\n  if (!properties) {\n    return cloned;\n  }\n\n  Object.keys(properties).forEach(function (key) {\n    var value = properties[key];\n\n    if (typeof value === \"object\") {\n      if (value === null) {\n        // handle null\n        cloned[key] = null;\n      } else if (Array.isArray(value)) {\n        // handle Array\n        cloned[key] = value.map(function (item) {\n          return item;\n        });\n      } else {\n        // handle generic Object\n        cloned[key] = cloneProperties(value);\n      }\n    } else {\n      cloned[key] = value;\n    }\n  });\n  return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\n\n\nfunction cloneFeatureCollection(geojson) {\n  var cloned = {\n    type: \"FeatureCollection\"\n  }; // Preserve Foreign Members\n\n  Object.keys(geojson).forEach(function (key) {\n    switch (key) {\n      case \"type\":\n      case \"features\":\n        return;\n\n      default:\n        cloned[key] = geojson[key];\n    }\n  }); // Add features\n\n  cloned.features = geojson.features.map(function (feature) {\n    return cloneFeature(feature);\n  });\n  return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\n\n\nfunction cloneGeometry(geometry) {\n  var geom = {\n    type: geometry.type\n  };\n\n  if (geometry.bbox) {\n    geom.bbox = geometry.bbox;\n  }\n\n  if (geometry.type === \"GeometryCollection\") {\n    geom.geometries = geometry.geometries.map(function (g) {\n      return cloneGeometry(g);\n    });\n    return geom;\n  }\n\n  geom.coordinates = deepSlice(geometry.coordinates);\n  return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\n\n\nfunction deepSlice(coords) {\n  var cloned = coords;\n\n  if (typeof cloned[0] !== \"object\") {\n    return cloned.slice();\n  }\n\n  return cloned.map(function (coord) {\n    return deepSlice(coord);\n  });\n}\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\n\n\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n      k,\n      l,\n      geometry,\n      stopG,\n      coords,\n      geometryMaybeCollection,\n      wrapShrink = 0,\n      coordIndex = 0,\n      isGeometryCollection,\n      type = geojson.type,\n      isFeatureCollection = type === \"FeatureCollection\",\n      isFeature = type === \"Feature\",\n      stop = isFeatureCollection ? geojson.features.length : 1; // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection; // Handles null Geometry -- Skips this geometry\n\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n\n        case \"Point\":\n          if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n              coordIndex++;\n            }\n\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n              }\n\n              geometryIndex++;\n            }\n\n            multiFeatureIndex++;\n          }\n\n          break;\n\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++) if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n\n          break;\n\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\n\n\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\n\n\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\nvar distance$1 = {\n  /**\n   * Euclidean distance\n   */\n  eudist: function eudist(v1, v2, sqrt) {\n    var len = v1.length;\n    var sum = 0;\n\n    for (var i = 0; i < len; i++) {\n      var d = (v1[i] || 0) - (v2[i] || 0);\n      sum += d * d;\n    } // Square root not really needed\n\n\n    return sqrt ? Math.sqrt(sum) : sum;\n  },\n  mandist: function mandist(v1, v2, sqrt) {\n    var len = v1.length;\n    var sum = 0;\n\n    for (var i = 0; i < len; i++) {\n      sum += Math.abs((v1[i] || 0) - (v2[i] || 0));\n    } // Square root not really needed\n\n\n    return sqrt ? Math.sqrt(sum) : sum;\n  },\n\n  /**\n   * Unidimensional distance\n   */\n  dist: function dist(v1, v2, sqrt) {\n    var d = Math.abs(v1 - v2);\n    return sqrt ? d : d * d;\n  }\n};\nvar Distance$1 = distance$1,\n    eudist$1 = Distance$1.eudist,\n    dist = Distance$1.dist;\nvar kinit = {\n  kmrand: function kmrand(data, k) {\n    var map = {},\n        ks = [],\n        t = k << 2;\n    var len = data.length;\n    var multi = data[0].length > 0;\n\n    while (ks.length < k && t-- > 0) {\n      var d = data[Math.floor(Math.random() * len)];\n      var key = multi ? d.join(\"_\") : \"\" + d;\n\n      if (!map[key]) {\n        map[key] = true;\n        ks.push(d);\n      }\n    }\n\n    if (ks.length < k) throw new Error(\"Error initializating clusters\");else return ks;\n  },\n\n  /**\n   * K-means++ initial centroid selection\n   */\n  kmpp: function kmpp(data, k) {\n    var distance = data[0].length ? eudist$1 : dist;\n    var ks = [],\n        len = data.length;\n    var multi = data[0].length > 0;\n    var map = {}; // First random centroid\n\n    var c = data[Math.floor(Math.random() * len)];\n    var key = multi ? c.join(\"_\") : \"\" + c;\n    ks.push(c);\n    map[key] = true; // Retrieve next centroids\n\n    while (ks.length < k) {\n      // Min Distances between current centroids and data points\n      var dists = [],\n          lk = ks.length;\n      var dsum = 0,\n          prs = [];\n\n      for (var i = 0; i < len; i++) {\n        var min = Infinity;\n\n        for (var j = 0; j < lk; j++) {\n          var _dist = distance(data[i], ks[j]);\n\n          if (_dist <= min) min = _dist;\n        }\n\n        dists[i] = min;\n      } // Sum all min distances\n\n\n      for (var _i = 0; _i < len; _i++) {\n        dsum += dists[_i];\n      } // Probabilities and cummulative prob (cumsum)\n\n\n      for (var _i2 = 0; _i2 < len; _i2++) {\n        prs[_i2] = {\n          i: _i2,\n          v: data[_i2],\n          pr: dists[_i2] / dsum,\n          cs: 0\n        };\n      } // Sort Probabilities\n\n\n      prs.sort(function (a, b) {\n        return a.pr - b.pr;\n      }); // Cummulative Probabilities\n\n      prs[0].cs = prs[0].pr;\n\n      for (var _i3 = 1; _i3 < len; _i3++) {\n        prs[_i3].cs = prs[_i3 - 1].cs + prs[_i3].pr;\n      } // Randomize\n\n\n      var rnd = Math.random(); // Gets only the items whose cumsum >= rnd\n\n      var idx = 0;\n\n      while (idx < len - 1 && prs[idx++].cs < rnd) {}\n\n      ks.push(prs[idx - 1].v);\n      /*\n      let done = false;\n      while(!done) {\n      \t// this is our new centroid\n      \tc = prs[idx-1].v\n      \tkey = multi? c.join(\"_\") : `${c}`;\n      \tif(!map[key]) {\n      \t\tmap[key] = true;\n      \t\tks.push(c);\n      \t\tdone = true;\n      \t}\n      \telse {\n      \t\tidx++;\n      \t}\n      }\n      */\n    }\n\n    return ks;\n  }\n};\n/*jshint esversion: 6 */\n\nvar Distance = distance$1,\n    ClusterInit = kinit,\n    eudist = Distance.eudist,\n    kmrand = ClusterInit.kmrand,\n    kmpp = ClusterInit.kmpp;\nvar MAX = 10000;\n/**\n * Inits an array with values\n */\n\nfunction init(len, val, v) {\n  v = v || [];\n\n  for (var i = 0; i < len; i++) {\n    v[i] = val;\n  }\n\n  return v;\n}\n\nfunction skmeans(data, k, initial, maxit) {\n  var ks = [],\n      old = [],\n      idxs = [],\n      dist = [];\n  var conv = false,\n      it = maxit || MAX;\n  var len = data.length,\n      vlen = data[0].length,\n      multi = vlen > 0;\n  var count = [];\n\n  if (!initial) {\n    var _idxs = {};\n\n    while (ks.length < k) {\n      var idx = Math.floor(Math.random() * len);\n\n      if (!_idxs[idx]) {\n        _idxs[idx] = true;\n        ks.push(data[idx]);\n      }\n    }\n  } else if (initial == \"kmrand\") {\n    ks = kmrand(data, k);\n  } else if (initial == \"kmpp\") {\n    ks = kmpp(data, k);\n  } else {\n    ks = initial;\n  }\n\n  do {\n    // Reset k count\n    init(k, 0, count); // For each value in data, find the nearest centroid\n\n    for (var i = 0; i < len; i++) {\n      var min = Infinity,\n          _idx = 0;\n\n      for (var j = 0; j < k; j++) {\n        // Multidimensional or unidimensional\n        var dist = multi ? eudist(data[i], ks[j]) : Math.abs(data[i] - ks[j]);\n\n        if (dist <= min) {\n          min = dist;\n          _idx = j;\n        }\n      }\n\n      idxs[i] = _idx; // Index of the selected centroid for that value\n\n      count[_idx]++; // Number of values for this centroid\n    } // Recalculate centroids\n\n\n    var sum = [],\n        old = [];\n\n    for (var _j = 0; _j < k; _j++) {\n      // Multidimensional or unidimensional\n      sum[_j] = multi ? init(vlen, 0, sum[_j]) : 0;\n      old[_j] = ks[_j];\n    } // If multidimensional\n\n\n    if (multi) {\n      for (var _j2 = 0; _j2 < k; _j2++) {\n        ks[_j2] = [];\n      } // Sum values and count for each centroid\n\n\n      for (var _i = 0; _i < len; _i++) {\n        var _idx2 = idxs[_i],\n            // Centroid for that item\n        vsum = sum[_idx2],\n            // Sum values for this centroid\n        vect = data[_i]; // Current vector\n        // Accumulate value on the centroid for current vector\n\n        for (var h = 0; h < vlen; h++) {\n          vsum[h] += vect[h];\n        }\n      } // Calculate the average for each centroid\n\n\n      conv = true;\n\n      for (var _j3 = 0; _j3 < k; _j3++) {\n        var ksj = ks[_j3],\n            // Current centroid\n        sumj = sum[_j3],\n            // Accumulated centroid values\n        oldj = old[_j3],\n            // Old centroid value\n        cj = count[_j3]; // Number of elements for this centroid\n        // New average\n\n        for (var _h = 0; _h < vlen; _h++) {\n          ksj[_h] = sumj[_h] / cj || 0; // New centroid\n        } // Find if centroids have moved\n\n\n        if (conv) {\n          for (var _h2 = 0; _h2 < vlen; _h2++) {\n            if (oldj[_h2] != ksj[_h2]) {\n              conv = false;\n              break;\n            }\n          }\n        }\n      }\n    } // If unidimensional\n    else {\n      // Sum values and count for each centroid\n      for (var _i2 = 0; _i2 < len; _i2++) {\n        var _idx3 = idxs[_i2];\n        sum[_idx3] += data[_i2];\n      } // Calculate the average for each centroid\n\n\n      for (var _j4 = 0; _j4 < k; _j4++) {\n        ks[_j4] = sum[_j4] / count[_j4] || 0; // New centroid\n      } // Find if centroids have moved\n\n\n      conv = true;\n\n      for (var _j5 = 0; _j5 < k; _j5++) {\n        if (old[_j5] != ks[_j5]) {\n          conv = false;\n          break;\n        }\n      }\n    }\n\n    conv = conv || --it <= 0;\n  } while (!conv);\n\n  return {\n    it: MAX - it,\n    k: k,\n    idxs: idxs,\n    centroids: ks\n  };\n}\n\nvar main = skmeans;\n/**\n * Takes a set of {@link Point|points} and partition them into clusters using the k-mean .\n * It uses the [k-means algorithm](https://en.wikipedia.org/wiki/K-means_clustering)\n *\n * @name clustersKmeans\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.numberOfClusters=Math.sqrt(numberOfPoints/2)] numberOfClusters that will be generated\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {[number, number]} centroid - Centroid of the cluster [Longitude, Latitude]\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var options = {numberOfClusters: 7};\n * var clustered = turf.clustersKmeans(points, options);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\n\nfunction clustersKmeans(points, options) {\n  if (options === void 0) {\n    options = {};\n  } // Default Params\n\n\n  var count = points.features.length;\n  options.numberOfClusters = options.numberOfClusters || Math.round(Math.sqrt(count / 2)); // numberOfClusters can't be greater than the number of points\n  // fallbacks to count\n\n  if (options.numberOfClusters > count) options.numberOfClusters = count; // Clone points to prevent any mutations (enabled by default)\n\n  if (options.mutate !== true) points = clone(points); // collect points coordinates\n\n  var data = coordAll(points); // create seed to avoid skmeans to drift\n\n  var initialCentroids = data.slice(0, options.numberOfClusters); // create skmeans clusters\n\n  var skmeansResult = main(data, options.numberOfClusters, initialCentroids); // store centroids {clusterId: [number, number]}\n\n  var centroids = {};\n  skmeansResult.centroids.forEach(function (coord, idx) {\n    centroids[idx] = coord;\n  }); // add associated cluster number\n\n  featureEach(points, function (point, index) {\n    var clusterId = skmeansResult.idxs[index];\n    point.properties.cluster = clusterId;\n    point.properties.centroid = centroids[clusterId];\n  });\n  return points;\n}\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\n\n\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return coord.geometry.coordinates;\n    }\n\n    if (coord.type === \"Point\") {\n      return coord.coordinates;\n    }\n  }\n\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return coord;\n  }\n\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n} //http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\n\n\nfunction distance(from, to, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\n\nvar lib = {\n  exports: {}\n};\nvar DBSCAN = {\n  exports: {}\n};\n/**\r\n * DBSCAN - Density based clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\n\n(function (module) {\n  /**\r\n   * DBSCAN class construcotr\r\n   * @constructor\r\n   *\r\n   * @param {Array} dataset\r\n   * @param {number} epsilon\r\n   * @param {number} minPts\r\n   * @param {function} distanceFunction\r\n   * @returns {DBSCAN}\r\n   */\n  function DBSCAN(dataset, epsilon, minPts, distanceFunction) {\n    /** @type {Array} */\n    this.dataset = [];\n    /** @type {number} */\n\n    this.epsilon = 1;\n    /** @type {number} */\n\n    this.minPts = 2;\n    /** @type {function} */\n\n    this.distance = this._euclideanDistance;\n    /** @type {Array} */\n\n    this.clusters = [];\n    /** @type {Array} */\n\n    this.noise = []; // temporary variables used during computation\n\n    /** @type {Array} */\n\n    this._visited = [];\n    /** @type {Array} */\n\n    this._assigned = [];\n    /** @type {number} */\n\n    this._datasetLength = 0;\n\n    this._init(dataset, epsilon, minPts, distanceFunction);\n  }\n  /******************************************************************************/\n  // public functions\n\n  /**\r\n   * Start clustering\r\n   *\r\n   * @param {Array} dataset\r\n   * @param {number} epsilon\r\n   * @param {number} minPts\r\n   * @param {function} distanceFunction\r\n   * @returns {undefined}\r\n   * @access public\r\n   */\n\n\n  DBSCAN.prototype.run = function (dataset, epsilon, minPts, distanceFunction) {\n    this._init(dataset, epsilon, minPts, distanceFunction);\n\n    for (var pointId = 0; pointId < this._datasetLength; pointId++) {\n      // if point is not visited, check if it forms a cluster\n      if (this._visited[pointId] !== 1) {\n        this._visited[pointId] = 1; // if closest neighborhood is too small to form a cluster, mark as noise\n\n        var neighbors = this._regionQuery(pointId);\n\n        if (neighbors.length < this.minPts) {\n          this.noise.push(pointId);\n        } else {\n          // create new cluster and add point\n          var clusterId = this.clusters.length;\n          this.clusters.push([]);\n\n          this._addToCluster(pointId, clusterId);\n\n          this._expandCluster(clusterId, neighbors);\n        }\n      }\n    }\n\n    return this.clusters;\n  };\n  /******************************************************************************/\n  // protected functions\n\n  /**\r\n   * Set object properties\r\n   *\r\n   * @param {Array} dataset\r\n   * @param {number} epsilon\r\n   * @param {number} minPts\r\n   * @param {function} distance\r\n   * @returns {undefined}\r\n   * @access protected\r\n   */\n\n\n  DBSCAN.prototype._init = function (dataset, epsilon, minPts, distance) {\n    if (dataset) {\n      if (!(dataset instanceof Array)) {\n        throw Error('Dataset must be of type array, ' + typeof dataset + ' given');\n      }\n\n      this.dataset = dataset;\n      this.clusters = [];\n      this.noise = [];\n      this._datasetLength = dataset.length;\n      this._visited = new Array(this._datasetLength);\n      this._assigned = new Array(this._datasetLength);\n    }\n\n    if (epsilon) {\n      this.epsilon = epsilon;\n    }\n\n    if (minPts) {\n      this.minPts = minPts;\n    }\n\n    if (distance) {\n      this.distance = distance;\n    }\n  };\n  /**\r\n   * Expand cluster to closest points of given neighborhood\r\n   *\r\n   * @param {number} clusterId\r\n   * @param {Array} neighbors\r\n   * @returns {undefined}\r\n   * @access protected\r\n   */\n\n\n  DBSCAN.prototype._expandCluster = function (clusterId, neighbors) {\n    /**\r\n     * It's very important to calculate length of neighbors array each time,\r\n     * as the number of elements changes over time\r\n     */\n    for (var i = 0; i < neighbors.length; i++) {\n      var pointId2 = neighbors[i];\n\n      if (this._visited[pointId2] !== 1) {\n        this._visited[pointId2] = 1;\n\n        var neighbors2 = this._regionQuery(pointId2);\n\n        if (neighbors2.length >= this.minPts) {\n          neighbors = this._mergeArrays(neighbors, neighbors2);\n        }\n      } // add to cluster\n\n\n      if (this._assigned[pointId2] !== 1) {\n        this._addToCluster(pointId2, clusterId);\n      }\n    }\n  };\n  /**\r\n   * Add new point to cluster\r\n   *\r\n   * @param {number} pointId\r\n   * @param {number} clusterId\r\n   */\n\n\n  DBSCAN.prototype._addToCluster = function (pointId, clusterId) {\n    this.clusters[clusterId].push(pointId);\n    this._assigned[pointId] = 1;\n  };\n  /**\r\n   * Find all neighbors around given point\r\n   *\r\n   * @param {number} pointId,\r\n   * @param {number} epsilon\r\n   * @returns {Array}\r\n   * @access protected\r\n   */\n\n\n  DBSCAN.prototype._regionQuery = function (pointId) {\n    var neighbors = [];\n\n    for (var id = 0; id < this._datasetLength; id++) {\n      var dist = this.distance(this.dataset[pointId], this.dataset[id]);\n\n      if (dist < this.epsilon) {\n        neighbors.push(id);\n      }\n    }\n\n    return neighbors;\n  };\n  /******************************************************************************/\n  // helpers\n\n  /**\r\n   * @param {Array} a\r\n   * @param {Array} b\r\n   * @returns {Array}\r\n   * @access protected\r\n   */\n\n\n  DBSCAN.prototype._mergeArrays = function (a, b) {\n    var len = b.length;\n\n    for (var i = 0; i < len; i++) {\n      var P = b[i];\n\n      if (a.indexOf(P) < 0) {\n        a.push(P);\n      }\n    }\n\n    return a;\n  };\n  /**\r\n   * Calculate euclidean distance in multidimensional space\r\n   *\r\n   * @param {Array} p\r\n   * @param {Array} q\r\n   * @returns {number}\r\n   * @access protected\r\n   */\n\n\n  DBSCAN.prototype._euclideanDistance = function (p, q) {\n    var sum = 0;\n    var i = Math.min(p.length, q.length);\n\n    while (i--) {\n      sum += (p[i] - q[i]) * (p[i] - q[i]);\n    }\n\n    return Math.sqrt(sum);\n  };\n\n  if (module.exports) {\n    module.exports = DBSCAN;\n  }\n})(DBSCAN);\n\nvar KMEANS = {\n  exports: {}\n};\n\n(function (module) {\n  /**\r\n   * KMEANS clustering\r\n   *\r\n   * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n   * @copyright MIT\r\n   */\n\n  /**\r\n   * KMEANS class constructor\r\n   * @constructor\r\n   *\r\n   * @param {Array} dataset\r\n   * @param {number} k - number of clusters\r\n   * @param {function} distance - distance function\r\n   * @returns {KMEANS}\r\n   */\n  function KMEANS(dataset, k, distance) {\n    this.k = 3; // number of clusters\n\n    this.dataset = []; // set of feature vectors\n\n    this.assignments = []; // set of associated clusters for each feature vector\n\n    this.centroids = []; // vectors for our clusters\n\n    this.init(dataset, k, distance);\n  }\n  /**\r\n   * @returns {undefined}\r\n   */\n\n\n  KMEANS.prototype.init = function (dataset, k, distance) {\n    this.assignments = [];\n    this.centroids = [];\n\n    if (typeof dataset !== 'undefined') {\n      this.dataset = dataset;\n    }\n\n    if (typeof k !== 'undefined') {\n      this.k = k;\n    }\n\n    if (typeof distance !== 'undefined') {\n      this.distance = distance;\n    }\n  };\n  /**\r\n   * @returns {undefined}\r\n   */\n\n\n  KMEANS.prototype.run = function (dataset, k) {\n    this.init(dataset, k);\n    var len = this.dataset.length; // initialize centroids\n\n    for (var i = 0; i < this.k; i++) {\n      this.centroids[i] = this.randomCentroid();\n    }\n\n    var change = true;\n\n    while (change) {\n      // assign feature vectors to clusters\n      change = this.assign(); // adjust location of centroids\n\n      for (var centroidId = 0; centroidId < this.k; centroidId++) {\n        var mean = new Array(maxDim);\n        var count = 0; // init mean vector\n\n        for (var dim = 0; dim < maxDim; dim++) {\n          mean[dim] = 0;\n        }\n\n        for (var j = 0; j < len; j++) {\n          var maxDim = this.dataset[j].length; // if current cluster id is assigned to point\n\n          if (centroidId === this.assignments[j]) {\n            for (var dim = 0; dim < maxDim; dim++) {\n              mean[dim] += this.dataset[j][dim];\n            }\n\n            count++;\n          }\n        }\n\n        if (count > 0) {\n          // if cluster contain points, adjust centroid position\n          for (var dim = 0; dim < maxDim; dim++) {\n            mean[dim] /= count;\n          }\n\n          this.centroids[centroidId] = mean;\n        } else {\n          // if cluster is empty, generate new random centroid\n          this.centroids[centroidId] = this.randomCentroid();\n          change = true;\n        }\n      }\n    }\n\n    return this.getClusters();\n  };\n  /**\r\n   * Generate random centroid\r\n   *\r\n   * @returns {Array}\r\n   */\n\n\n  KMEANS.prototype.randomCentroid = function () {\n    var maxId = this.dataset.length - 1;\n    var centroid;\n    var id;\n\n    do {\n      id = Math.round(Math.random() * maxId);\n      centroid = this.dataset[id];\n    } while (this.centroids.indexOf(centroid) >= 0);\n\n    return centroid;\n  };\n  /**\r\n   * Assign points to clusters\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  KMEANS.prototype.assign = function () {\n    var change = false;\n    var len = this.dataset.length;\n    var closestCentroid;\n\n    for (var i = 0; i < len; i++) {\n      closestCentroid = this.argmin(this.dataset[i], this.centroids, this.distance);\n\n      if (closestCentroid != this.assignments[i]) {\n        this.assignments[i] = closestCentroid;\n        change = true;\n      }\n    }\n\n    return change;\n  };\n  /**\r\n   * Extract information about clusters\r\n   *\r\n   * @returns {undefined}\r\n   */\n\n\n  KMEANS.prototype.getClusters = function () {\n    var clusters = new Array(this.k);\n    var centroidId;\n\n    for (var pointId = 0; pointId < this.assignments.length; pointId++) {\n      centroidId = this.assignments[pointId]; // init empty cluster\n\n      if (typeof clusters[centroidId] === 'undefined') {\n        clusters[centroidId] = [];\n      }\n\n      clusters[centroidId].push(pointId);\n    }\n\n    return clusters;\n  }; // utils\n\n  /**\r\n   * @params {Array} point\r\n   * @params {Array.<Array>} set\r\n   * @params {Function} f\r\n   * @returns {number}\r\n   */\n\n\n  KMEANS.prototype.argmin = function (point, set, f) {\n    var min = Number.MAX_VALUE;\n    var arg = 0;\n    var len = set.length;\n    var d;\n\n    for (var i = 0; i < len; i++) {\n      d = f(point, set[i]);\n\n      if (d < min) {\n        min = d;\n        arg = i;\n      }\n    }\n\n    return arg;\n  };\n  /**\r\n   * Euclidean distance\r\n   *\r\n   * @params {number} p\r\n   * @params {number} q\r\n   * @returns {number}\r\n   */\n\n\n  KMEANS.prototype.distance = function (p, q) {\n    var sum = 0;\n    var i = Math.min(p.length, q.length);\n\n    while (i--) {\n      var diff = p[i] - q[i];\n      sum += diff * diff;\n    }\n\n    return Math.sqrt(sum);\n  };\n\n  if (module.exports) {\n    module.exports = KMEANS;\n  }\n})(KMEANS);\n\nvar OPTICS = {\n  exports: {}\n};\nvar PriorityQueue = {\n  exports: {}\n};\n/**\r\n * PriorityQueue\r\n * Elements in this queue are sorted according to their value\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\n\n(function (module) {\n  /**\r\n   * PriorityQueue class construcotr\r\n   * @constructor\r\n   *\r\n   * @example\r\n   * queue: [1,2,3,4]\r\n   * priorities: [4,1,2,3]\r\n   * > result = [1,4,2,3]\r\n   *\r\n   * @param {Array} elements\r\n   * @param {Array} priorities\r\n   * @param {string} sorting - asc / desc\r\n   * @returns {PriorityQueue}\r\n   */\n  function PriorityQueue(elements, priorities, sorting) {\n    /** @type {Array} */\n    this._queue = [];\n    /** @type {Array} */\n\n    this._priorities = [];\n    /** @type {string} */\n\n    this._sorting = 'desc';\n\n    this._init(elements, priorities, sorting);\n  }\n  /**\r\n   * Insert element\r\n   *\r\n   * @param {Object} ele\r\n   * @param {Object} priority\r\n   * @returns {undefined}\r\n   * @access public\r\n   */\n\n\n  PriorityQueue.prototype.insert = function (ele, priority) {\n    var indexToInsert = this._queue.length;\n    var index = indexToInsert;\n\n    while (index--) {\n      var priority2 = this._priorities[index];\n\n      if (this._sorting === 'desc') {\n        if (priority > priority2) {\n          indexToInsert = index;\n        }\n      } else {\n        if (priority < priority2) {\n          indexToInsert = index;\n        }\n      }\n    }\n\n    this._insertAt(ele, priority, indexToInsert);\n  };\n  /**\r\n   * Remove element\r\n   *\r\n   * @param {Object} ele\r\n   * @returns {undefined}\r\n   * @access public\r\n   */\n\n\n  PriorityQueue.prototype.remove = function (ele) {\n    var index = this._queue.length;\n\n    while (index--) {\n      var ele2 = this._queue[index];\n\n      if (ele === ele2) {\n        this._queue.splice(index, 1);\n\n        this._priorities.splice(index, 1);\n\n        break;\n      }\n    }\n  };\n  /**\r\n   * For each loop wrapper\r\n   *\r\n   * @param {function} func\r\n   * @returs {undefined}\r\n   * @access public\r\n   */\n\n\n  PriorityQueue.prototype.forEach = function (func) {\n    this._queue.forEach(func);\n  };\n  /**\r\n   * @returns {Array}\r\n   * @access public\r\n   */\n\n\n  PriorityQueue.prototype.getElements = function () {\n    return this._queue;\n  };\n  /**\r\n   * @param {number} index\r\n   * @returns {Object}\r\n   * @access public\r\n   */\n\n\n  PriorityQueue.prototype.getElementPriority = function (index) {\n    return this._priorities[index];\n  };\n  /**\r\n   * @returns {Array}\r\n   * @access public\r\n   */\n\n\n  PriorityQueue.prototype.getPriorities = function () {\n    return this._priorities;\n  };\n  /**\r\n   * @returns {Array}\r\n   * @access public\r\n   */\n\n\n  PriorityQueue.prototype.getElementsWithPriorities = function () {\n    var result = [];\n\n    for (var i = 0, l = this._queue.length; i < l; i++) {\n      result.push([this._queue[i], this._priorities[i]]);\n    }\n\n    return result;\n  };\n  /**\r\n   * Set object properties\r\n   *\r\n   * @param {Array} elements\r\n   * @param {Array} priorities\r\n   * @returns {undefined}\r\n   * @access protected\r\n   */\n\n\n  PriorityQueue.prototype._init = function (elements, priorities, sorting) {\n    if (elements && priorities) {\n      this._queue = [];\n      this._priorities = [];\n\n      if (elements.length !== priorities.length) {\n        throw new Error('Arrays must have the same length');\n      }\n\n      for (var i = 0; i < elements.length; i++) {\n        this.insert(elements[i], priorities[i]);\n      }\n    }\n\n    if (sorting) {\n      this._sorting = sorting;\n    }\n  };\n  /**\r\n   * Insert element at given position\r\n   *\r\n   * @param {Object} ele\r\n   * @param {number} index\r\n   * @returns {undefined}\r\n   * @access protected\r\n   */\n\n\n  PriorityQueue.prototype._insertAt = function (ele, priority, index) {\n    if (this._queue.length === index) {\n      this._queue.push(ele);\n\n      this._priorities.push(priority);\n    } else {\n      this._queue.splice(index, 0, ele);\n\n      this._priorities.splice(index, 0, priority);\n    }\n  };\n\n  if (module.exports) {\n    module.exports = PriorityQueue;\n  }\n})(PriorityQueue);\n\n(function (module) {\n  /**\r\n   * @requires ./PriorityQueue.js\r\n   */\n  if (module.exports) {\n    var PriorityQueue$1 = PriorityQueue.exports;\n  }\n  /**\r\n   * OPTICS - Ordering points to identify the clustering structure\r\n   *\r\n   * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n   * @copyright MIT\r\n   */\n\n  /**\r\n   * OPTICS class constructor\r\n   * @constructor\r\n   *\r\n   * @param {Array} dataset\r\n   * @param {number} epsilon\r\n   * @param {number} minPts\r\n   * @param {function} distanceFunction\r\n   * @returns {OPTICS}\r\n   */\n\n\n  function OPTICS(dataset, epsilon, minPts, distanceFunction) {\n    /** @type {number} */\n    this.epsilon = 1;\n    /** @type {number} */\n\n    this.minPts = 1;\n    /** @type {function} */\n\n    this.distance = this._euclideanDistance; // temporary variables used during computation\n\n    /** @type {Array} */\n\n    this._reachability = [];\n    /** @type {Array} */\n\n    this._processed = [];\n    /** @type {number} */\n\n    this._coreDistance = 0;\n    /** @type {Array} */\n\n    this._orderedList = [];\n\n    this._init(dataset, epsilon, minPts, distanceFunction);\n  }\n  /******************************************************************************/\n  // pulic functions\n\n  /**\r\n   * Start clustering\r\n   *\r\n   * @param {Array} dataset\r\n   * @returns {undefined}\r\n   * @access public\r\n   */\n\n\n  OPTICS.prototype.run = function (dataset, epsilon, minPts, distanceFunction) {\n    this._init(dataset, epsilon, minPts, distanceFunction);\n\n    for (var pointId = 0, l = this.dataset.length; pointId < l; pointId++) {\n      if (this._processed[pointId] !== 1) {\n        this._processed[pointId] = 1;\n        this.clusters.push([pointId]);\n        var clusterId = this.clusters.length - 1;\n\n        this._orderedList.push(pointId);\n\n        var priorityQueue = new PriorityQueue$1(null, null, 'asc');\n\n        var neighbors = this._regionQuery(pointId); // using priority queue assign elements to new cluster\n\n\n        if (this._distanceToCore(pointId) !== undefined) {\n          this._updateQueue(pointId, neighbors, priorityQueue);\n\n          this._expandCluster(clusterId, priorityQueue);\n        }\n      }\n    }\n\n    return this.clusters;\n  };\n  /**\r\n   * Generate reachability plot for all points\r\n   *\r\n   * @returns {array}\r\n   * @access public\r\n   */\n\n\n  OPTICS.prototype.getReachabilityPlot = function () {\n    var reachabilityPlot = [];\n\n    for (var i = 0, l = this._orderedList.length; i < l; i++) {\n      var pointId = this._orderedList[i];\n      var distance = this._reachability[pointId];\n      reachabilityPlot.push([pointId, distance]);\n    }\n\n    return reachabilityPlot;\n  };\n  /******************************************************************************/\n  // protected functions\n\n  /**\r\n   * Set object properties\r\n   *\r\n   * @param {Array} dataset\r\n   * @param {number} epsilon\r\n   * @param {number} minPts\r\n   * @param {function} distance\r\n   * @returns {undefined}\r\n   * @access protected\r\n   */\n\n\n  OPTICS.prototype._init = function (dataset, epsilon, minPts, distance) {\n    if (dataset) {\n      if (!(dataset instanceof Array)) {\n        throw Error('Dataset must be of type array, ' + typeof dataset + ' given');\n      }\n\n      this.dataset = dataset;\n      this.clusters = [];\n      this._reachability = new Array(this.dataset.length);\n      this._processed = new Array(this.dataset.length);\n      this._coreDistance = 0;\n      this._orderedList = [];\n    }\n\n    if (epsilon) {\n      this.epsilon = epsilon;\n    }\n\n    if (minPts) {\n      this.minPts = minPts;\n    }\n\n    if (distance) {\n      this.distance = distance;\n    }\n  };\n  /**\r\n   * Update information in queue\r\n   *\r\n   * @param {number} pointId\r\n   * @param {Array} neighbors\r\n   * @param {PriorityQueue} queue\r\n   * @returns {undefined}\r\n   * @access protected\r\n   */\n\n\n  OPTICS.prototype._updateQueue = function (pointId, neighbors, queue) {\n    var self = this;\n    this._coreDistance = this._distanceToCore(pointId);\n    neighbors.forEach(function (pointId2) {\n      if (self._processed[pointId2] === undefined) {\n        var dist = self.distance(self.dataset[pointId], self.dataset[pointId2]);\n        var newReachableDistance = Math.max(self._coreDistance, dist);\n\n        if (self._reachability[pointId2] === undefined) {\n          self._reachability[pointId2] = newReachableDistance;\n          queue.insert(pointId2, newReachableDistance);\n        } else {\n          if (newReachableDistance < self._reachability[pointId2]) {\n            self._reachability[pointId2] = newReachableDistance;\n            queue.remove(pointId2);\n            queue.insert(pointId2, newReachableDistance);\n          }\n        }\n      }\n    });\n  };\n  /**\r\n   * Expand cluster\r\n   *\r\n   * @param {number} clusterId\r\n   * @param {PriorityQueue} queue\r\n   * @returns {undefined}\r\n   * @access protected\r\n   */\n\n\n  OPTICS.prototype._expandCluster = function (clusterId, queue) {\n    var queueElements = queue.getElements();\n\n    for (var p = 0, l = queueElements.length; p < l; p++) {\n      var pointId = queueElements[p];\n\n      if (this._processed[pointId] === undefined) {\n        var neighbors = this._regionQuery(pointId);\n\n        this._processed[pointId] = 1;\n        this.clusters[clusterId].push(pointId);\n\n        this._orderedList.push(pointId);\n\n        if (this._distanceToCore(pointId) !== undefined) {\n          this._updateQueue(pointId, neighbors, queue);\n\n          this._expandCluster(clusterId, queue);\n        }\n      }\n    }\n  };\n  /**\r\n   * Calculating distance to cluster core\r\n   *\r\n   * @param {number} pointId\r\n   * @returns {number}\r\n   * @access protected\r\n   */\n\n\n  OPTICS.prototype._distanceToCore = function (pointId) {\n    var l = this.epsilon;\n\n    for (var coreDistCand = 0; coreDistCand < l; coreDistCand++) {\n      var neighbors = this._regionQuery(pointId, coreDistCand);\n\n      if (neighbors.length >= this.minPts) {\n        return coreDistCand;\n      }\n    }\n\n    return;\n  };\n  /**\r\n   * Find all neighbors around given point\r\n   *\r\n   * @param {number} pointId\r\n   * @param {number} epsilon\r\n   * @returns {Array}\r\n   * @access protected\r\n   */\n\n\n  OPTICS.prototype._regionQuery = function (pointId, epsilon) {\n    epsilon = epsilon || this.epsilon;\n    var neighbors = [];\n\n    for (var id = 0, l = this.dataset.length; id < l; id++) {\n      if (this.distance(this.dataset[pointId], this.dataset[id]) < epsilon) {\n        neighbors.push(id);\n      }\n    }\n\n    return neighbors;\n  };\n  /******************************************************************************/\n  // helpers\n\n  /**\r\n   * Calculate euclidean distance in multidimensional space\r\n   *\r\n   * @param {Array} p\r\n   * @param {Array} q\r\n   * @returns {number}\r\n   * @access protected\r\n   */\n\n\n  OPTICS.prototype._euclideanDistance = function (p, q) {\n    var sum = 0;\n    var i = Math.min(p.length, q.length);\n\n    while (i--) {\n      sum += (p[i] - q[i]) * (p[i] - q[i]);\n    }\n\n    return Math.sqrt(sum);\n  };\n\n  if (module.exports) {\n    module.exports = OPTICS;\n  }\n})(OPTICS);\n\n(function (module) {\n  if (module.exports) {\n    module.exports = {\n      DBSCAN: DBSCAN.exports,\n      KMEANS: KMEANS.exports,\n      OPTICS: OPTICS.exports,\n      PriorityQueue: PriorityQueue.exports\n    };\n  }\n})(lib);\n\nvar clustering = lib.exports;\n/**\n * Takes a set of {@link Point|points} and partition them into clusters according to {@link DBSCAN's|https://en.wikipedia.org/wiki/DBSCAN} data clustering algorithm.\n *\n * @name clustersDbscan\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {number} maxDistance Maximum Distance between any point of the cluster to generate the clusters (kilometers only)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] in which `maxDistance` is expressed, can be degrees, radians, miles, or kilometers\n * @param {boolean} [options.mutate=false] Allows GeoJSON input to be mutated\n * @param {number} [options.minPoints=3] Minimum number of points to generate a single cluster,\n * points which do not meet this requirement will be classified as an 'edge' or 'noise'.\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {string} dbscan - type of point it has been classified as ('core'|'edge'|'noise')\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var maxDistance = 100;\n * var clustered = turf.clustersDbscan(points, maxDistance);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\n\nfunction clustersDbscan(points, maxDistance, options) {\n  // Input validation being handled by Typescript\n  // collectionOf(points, 'Point', 'points must consist of a FeatureCollection of only Points');\n  // if (maxDistance === null || maxDistance === undefined) throw new Error('maxDistance is required');\n  // if (!(Math.sign(maxDistance) > 0)) throw new Error('maxDistance is invalid');\n  // if (!(minPoints === undefined || minPoints === null || Math.sign(minPoints) > 0)) throw new Error('options.minPoints is invalid');\n  if (options === void 0) {\n    options = {};\n  } // Clone points to prevent any mutations\n\n\n  if (options.mutate !== true) points = clone(points); // Defaults\n\n  options.minPoints = options.minPoints || 3; // create clustered ids\n\n  var dbscan = new clustering.DBSCAN();\n  var clusteredIds = dbscan.run(coordAll(points), convertLength(maxDistance, options.units), options.minPoints, distance); // Tag points to Clusters ID\n\n  var clusterId = -1;\n  clusteredIds.forEach(function (clusterIds) {\n    clusterId++; // assign cluster ids to input points\n\n    clusterIds.forEach(function (idx) {\n      var clusterPoint = points.features[idx];\n      if (!clusterPoint.properties) clusterPoint.properties = {};\n      clusterPoint.properties.cluster = clusterId;\n      clusterPoint.properties.dbscan = \"core\";\n    });\n  }); // handle noise points, if any\n  // edges points are tagged by DBSCAN as both 'noise' and 'cluster' as they can \"reach\" less than 'minPoints' number of points\n\n  dbscan.noise.forEach(function (noiseId) {\n    var noisePoint = points.features[noiseId];\n    if (!noisePoint.properties) noisePoint.properties = {};\n    if (noisePoint.properties.cluster) noisePoint.properties.dbscan = \"edge\";else noisePoint.properties.dbscan = \"noise\";\n  });\n  return points;\n}\n\nvar supercluster = {\n  exports: {}\n};\n\n(function (module, exports) {\n  (function (global, factory) {\n    module.exports = factory();\n  })(commonjsGlobal, function () {\n    function sortKD(ids, coords, nodeSize, left, right, depth) {\n      if (right - left <= nodeSize) {\n        return;\n      }\n\n      var m = left + right >> 1;\n      select(ids, coords, m, left, right, depth % 2);\n      sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n      sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n    }\n\n    function select(ids, coords, k, left, right, inc) {\n      while (right > left) {\n        if (right - left > 600) {\n          var n = right - left + 1;\n          var m = k - left + 1;\n          var z = Math.log(n);\n          var s = 0.5 * Math.exp(2 * z / 3);\n          var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n          var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n          var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n          select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        var t = coords[2 * k + inc];\n        var i = left;\n        var j = right;\n        swapItem(ids, coords, left, k);\n\n        if (coords[2 * right + inc] > t) {\n          swapItem(ids, coords, left, right);\n        }\n\n        while (i < j) {\n          swapItem(ids, coords, i, j);\n          i++;\n          j--;\n\n          while (coords[2 * i + inc] < t) {\n            i++;\n          }\n\n          while (coords[2 * j + inc] > t) {\n            j--;\n          }\n        }\n\n        if (coords[2 * left + inc] === t) {\n          swapItem(ids, coords, left, j);\n        } else {\n          j++;\n          swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) {\n          left = j + 1;\n        }\n\n        if (k <= j) {\n          right = j - 1;\n        }\n      }\n    }\n\n    function swapItem(ids, coords, i, j) {\n      swap(ids, i, j);\n      swap(coords, 2 * i, 2 * j);\n      swap(coords, 2 * i + 1, 2 * j + 1);\n    }\n\n    function swap(arr, i, j) {\n      var tmp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = tmp;\n    }\n\n    function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n      var stack = [0, ids.length - 1, 0];\n      var result = [];\n      var x, y;\n\n      while (stack.length) {\n        var axis = stack.pop();\n        var right = stack.pop();\n        var left = stack.pop();\n\n        if (right - left <= nodeSize) {\n          for (var i = left; i <= right; i++) {\n            x = coords[2 * i];\n            y = coords[2 * i + 1];\n\n            if (x >= minX && x <= maxX && y >= minY && y <= maxY) {\n              result.push(ids[i]);\n            }\n          }\n\n          continue;\n        }\n\n        var m = Math.floor((left + right) / 2);\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) {\n          result.push(ids[m]);\n        }\n\n        var nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n          stack.push(left);\n          stack.push(m - 1);\n          stack.push(nextAxis);\n        }\n\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n          stack.push(m + 1);\n          stack.push(right);\n          stack.push(nextAxis);\n        }\n      }\n\n      return result;\n    }\n\n    function within(ids, coords, qx, qy, r, nodeSize) {\n      var stack = [0, ids.length - 1, 0];\n      var result = [];\n      var r2 = r * r;\n\n      while (stack.length) {\n        var axis = stack.pop();\n        var right = stack.pop();\n        var left = stack.pop();\n\n        if (right - left <= nodeSize) {\n          for (var i = left; i <= right; i++) {\n            if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) {\n              result.push(ids[i]);\n            }\n          }\n\n          continue;\n        }\n\n        var m = Math.floor((left + right) / 2);\n        var x = coords[2 * m];\n        var y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) {\n          result.push(ids[m]);\n        }\n\n        var nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n          stack.push(left);\n          stack.push(m - 1);\n          stack.push(nextAxis);\n        }\n\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n          stack.push(m + 1);\n          stack.push(right);\n          stack.push(nextAxis);\n        }\n      }\n\n      return result;\n    }\n\n    function sqDist(ax, ay, bx, by) {\n      var dx = ax - bx;\n      var dy = ay - by;\n      return dx * dx + dy * dy;\n    }\n\n    var defaultGetX = function (p) {\n      return p[0];\n    };\n\n    var defaultGetY = function (p) {\n      return p[1];\n    };\n\n    var KDBush = function KDBush(points, getX, getY, nodeSize, ArrayType) {\n      if (getX === void 0) getX = defaultGetX;\n      if (getY === void 0) getY = defaultGetY;\n      if (nodeSize === void 0) nodeSize = 64;\n      if (ArrayType === void 0) ArrayType = Float64Array;\n      this.nodeSize = nodeSize;\n      this.points = points;\n      var IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n      var ids = this.ids = new IndexArrayType(points.length);\n      var coords = this.coords = new ArrayType(points.length * 2);\n\n      for (var i = 0; i < points.length; i++) {\n        ids[i] = i;\n        coords[2 * i] = getX(points[i]);\n        coords[2 * i + 1] = getY(points[i]);\n      }\n\n      sortKD(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    };\n\n    KDBush.prototype.range = function range$1(minX, minY, maxX, maxY) {\n      return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    };\n\n    KDBush.prototype.within = function within$1(x, y, r) {\n      return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    };\n\n    var defaultOptions = {\n      minZoom: 0,\n      // min zoom to generate clusters on\n      maxZoom: 16,\n      // max zoom level to cluster the points on\n      minPoints: 2,\n      // minimum points to form a cluster\n      radius: 40,\n      // cluster radius in pixels\n      extent: 512,\n      // tile extent (radius is calculated relative to it)\n      nodeSize: 64,\n      // size of the KD-tree leaf node, affects performance\n      log: false,\n      // whether to log timing info\n      // whether to generate numeric ids for input features (in vector tiles)\n      generateId: false,\n      // a reduce function for calculating custom cluster properties\n      reduce: null,\n      // (accumulated, props) => { accumulated.sum += props.sum; }\n      // properties to use for individual points when running the reducer\n      map: function (props) {\n        return props;\n      } // props => ({sum: props.my_value})\n\n    };\n\n    var fround = Math.fround || function (tmp) {\n      return function (x) {\n        tmp[0] = +x;\n        return tmp[0];\n      };\n    }(new Float32Array(1));\n\n    var Supercluster = function Supercluster(options) {\n      this.options = extend(Object.create(defaultOptions), options);\n      this.trees = new Array(this.options.maxZoom + 1);\n    };\n\n    Supercluster.prototype.load = function load(points) {\n      var ref = this.options;\n      var log = ref.log;\n      var minZoom = ref.minZoom;\n      var maxZoom = ref.maxZoom;\n      var nodeSize = ref.nodeSize;\n\n      if (log) {\n        console.time('total time');\n      }\n\n      var timerId = \"prepare \" + points.length + \" points\";\n\n      if (log) {\n        console.time(timerId);\n      }\n\n      this.points = points; // generate a cluster object for each point and index input points into a KD-tree\n\n      var clusters = [];\n\n      for (var i = 0; i < points.length; i++) {\n        if (!points[i].geometry) {\n          continue;\n        }\n\n        clusters.push(createPointCluster(points[i], i));\n      }\n\n      this.trees[maxZoom + 1] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n      if (log) {\n        console.timeEnd(timerId);\n      } // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n      // results in a cluster hierarchy across zoom levels\n\n\n      for (var z = maxZoom; z >= minZoom; z--) {\n        var now = +Date.now(); // create a new set of clusters for the zoom and index them with a KD-tree\n\n        clusters = this._cluster(clusters, z);\n        this.trees[z] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n        if (log) {\n          console.log('z%d: %d clusters in %dms', z, clusters.length, +Date.now() - now);\n        }\n      }\n\n      if (log) {\n        console.timeEnd('total time');\n      }\n\n      return this;\n    };\n\n    Supercluster.prototype.getClusters = function getClusters(bbox, zoom) {\n      var minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n      var minLat = Math.max(-90, Math.min(90, bbox[1]));\n      var maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n      var maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n      if (bbox[2] - bbox[0] >= 360) {\n        minLng = -180;\n        maxLng = 180;\n      } else if (minLng > maxLng) {\n        var easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n        var westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n        return easternHem.concat(westernHem);\n      }\n\n      var tree = this.trees[this._limitZoom(zoom)];\n\n      var ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n      var clusters = [];\n\n      for (var i = 0, list = ids; i < list.length; i += 1) {\n        var id = list[i];\n        var c = tree.points[id];\n        clusters.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n      }\n\n      return clusters;\n    };\n\n    Supercluster.prototype.getChildren = function getChildren(clusterId) {\n      var originId = this._getOriginId(clusterId);\n\n      var originZoom = this._getOriginZoom(clusterId);\n\n      var errorMsg = 'No cluster with the specified id.';\n      var index = this.trees[originZoom];\n\n      if (!index) {\n        throw new Error(errorMsg);\n      }\n\n      var origin = index.points[originId];\n\n      if (!origin) {\n        throw new Error(errorMsg);\n      }\n\n      var r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n      var ids = index.within(origin.x, origin.y, r);\n      var children = [];\n\n      for (var i = 0, list = ids; i < list.length; i += 1) {\n        var id = list[i];\n        var c = index.points[id];\n\n        if (c.parentId === clusterId) {\n          children.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n        }\n      }\n\n      if (children.length === 0) {\n        throw new Error(errorMsg);\n      }\n\n      return children;\n    };\n\n    Supercluster.prototype.getLeaves = function getLeaves(clusterId, limit, offset) {\n      limit = limit || 10;\n      offset = offset || 0;\n      var leaves = [];\n\n      this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n      return leaves;\n    };\n\n    Supercluster.prototype.getTile = function getTile(z, x, y) {\n      var tree = this.trees[this._limitZoom(z)];\n\n      var z2 = Math.pow(2, z);\n      var ref = this.options;\n      var extent = ref.extent;\n      var radius = ref.radius;\n      var p = radius / extent;\n      var top = (y - p) / z2;\n      var bottom = (y + 1 + p) / z2;\n      var tile = {\n        features: []\n      };\n\n      this._addTileFeatures(tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom), tree.points, x, y, z2, tile);\n\n      if (x === 0) {\n        this._addTileFeatures(tree.range(1 - p / z2, top, 1, bottom), tree.points, z2, y, z2, tile);\n      }\n\n      if (x === z2 - 1) {\n        this._addTileFeatures(tree.range(0, top, p / z2, bottom), tree.points, -1, y, z2, tile);\n      }\n\n      return tile.features.length ? tile : null;\n    };\n\n    Supercluster.prototype.getClusterExpansionZoom = function getClusterExpansionZoom(clusterId) {\n      var expansionZoom = this._getOriginZoom(clusterId) - 1;\n\n      while (expansionZoom <= this.options.maxZoom) {\n        var children = this.getChildren(clusterId);\n        expansionZoom++;\n\n        if (children.length !== 1) {\n          break;\n        }\n\n        clusterId = children[0].properties.cluster_id;\n      }\n\n      return expansionZoom;\n    };\n\n    Supercluster.prototype._appendLeaves = function _appendLeaves(result, clusterId, limit, offset, skipped) {\n      var children = this.getChildren(clusterId);\n\n      for (var i = 0, list = children; i < list.length; i += 1) {\n        var child = list[i];\n        var props = child.properties;\n\n        if (props && props.cluster) {\n          if (skipped + props.point_count <= offset) {\n            // skip the whole cluster\n            skipped += props.point_count;\n          } else {\n            // enter the cluster\n            skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped); // exit the cluster\n          }\n        } else if (skipped < offset) {\n          // skip a single point\n          skipped++;\n        } else {\n          // add a single point\n          result.push(child);\n        }\n\n        if (result.length === limit) {\n          break;\n        }\n      }\n\n      return skipped;\n    };\n\n    Supercluster.prototype._addTileFeatures = function _addTileFeatures(ids, points, x, y, z2, tile) {\n      for (var i$1 = 0, list = ids; i$1 < list.length; i$1 += 1) {\n        var i = list[i$1];\n        var c = points[i];\n        var isCluster = c.numPoints;\n        var tags = void 0,\n            px = void 0,\n            py = void 0;\n\n        if (isCluster) {\n          tags = getClusterProperties(c);\n          px = c.x;\n          py = c.y;\n        } else {\n          var p = this.points[c.index];\n          tags = p.properties;\n          px = lngX(p.geometry.coordinates[0]);\n          py = latY(p.geometry.coordinates[1]);\n        }\n\n        var f = {\n          type: 1,\n          geometry: [[Math.round(this.options.extent * (px * z2 - x)), Math.round(this.options.extent * (py * z2 - y))]],\n          tags: tags\n        }; // assign id\n\n        var id = void 0;\n\n        if (isCluster) {\n          id = c.id;\n        } else if (this.options.generateId) {\n          // optionally generate id\n          id = c.index;\n        } else if (this.points[c.index].id) {\n          // keep id if already assigned\n          id = this.points[c.index].id;\n        }\n\n        if (id !== undefined) {\n          f.id = id;\n        }\n\n        tile.features.push(f);\n      }\n    };\n\n    Supercluster.prototype._limitZoom = function _limitZoom(z) {\n      return Math.max(this.options.minZoom, Math.min(+z, this.options.maxZoom + 1));\n    };\n\n    Supercluster.prototype._cluster = function _cluster(points, zoom) {\n      var clusters = [];\n      var ref = this.options;\n      var radius = ref.radius;\n      var extent = ref.extent;\n      var reduce = ref.reduce;\n      var minPoints = ref.minPoints;\n      var r = radius / (extent * Math.pow(2, zoom)); // loop through each point\n\n      for (var i = 0; i < points.length; i++) {\n        var p = points[i]; // if we've already visited the point at this zoom level, skip it\n\n        if (p.zoom <= zoom) {\n          continue;\n        }\n\n        p.zoom = zoom; // find all nearby points\n\n        var tree = this.trees[zoom + 1];\n        var neighborIds = tree.within(p.x, p.y, r);\n        var numPointsOrigin = p.numPoints || 1;\n        var numPoints = numPointsOrigin; // count the number of points in a potential cluster\n\n        for (var i$1 = 0, list = neighborIds; i$1 < list.length; i$1 += 1) {\n          var neighborId = list[i$1];\n          var b = tree.points[neighborId]; // filter out neighbors that are already processed\n\n          if (b.zoom > zoom) {\n            numPoints += b.numPoints || 1;\n          }\n        } // if there were neighbors to merge, and there are enough points to form a cluster\n\n\n        if (numPoints > numPointsOrigin && numPoints >= minPoints) {\n          var wx = p.x * numPointsOrigin;\n          var wy = p.y * numPointsOrigin;\n          var clusterProperties = reduce && numPointsOrigin > 1 ? this._map(p, true) : null; // encode both zoom and point index on which the cluster originated -- offset by total length of features\n\n          var id = (i << 5) + (zoom + 1) + this.points.length;\n\n          for (var i$2 = 0, list$1 = neighborIds; i$2 < list$1.length; i$2 += 1) {\n            var neighborId$1 = list$1[i$2];\n            var b$1 = tree.points[neighborId$1];\n\n            if (b$1.zoom <= zoom) {\n              continue;\n            }\n\n            b$1.zoom = zoom; // save the zoom (so it doesn't get processed twice)\n\n            var numPoints2 = b$1.numPoints || 1;\n            wx += b$1.x * numPoints2; // accumulate coordinates for calculating weighted center\n\n            wy += b$1.y * numPoints2;\n            b$1.parentId = id;\n\n            if (reduce) {\n              if (!clusterProperties) {\n                clusterProperties = this._map(p, true);\n              }\n\n              reduce(clusterProperties, this._map(b$1));\n            }\n          }\n\n          p.parentId = id;\n          clusters.push(createCluster(wx / numPoints, wy / numPoints, id, numPoints, clusterProperties));\n        } else {\n          // left points as unclustered\n          clusters.push(p);\n\n          if (numPoints > 1) {\n            for (var i$3 = 0, list$2 = neighborIds; i$3 < list$2.length; i$3 += 1) {\n              var neighborId$2 = list$2[i$3];\n              var b$2 = tree.points[neighborId$2];\n\n              if (b$2.zoom <= zoom) {\n                continue;\n              }\n\n              b$2.zoom = zoom;\n              clusters.push(b$2);\n            }\n          }\n        }\n      }\n\n      return clusters;\n    }; // get index of the point from which the cluster originated\n\n\n    Supercluster.prototype._getOriginId = function _getOriginId(clusterId) {\n      return clusterId - this.points.length >> 5;\n    }; // get zoom of the point from which the cluster originated\n\n\n    Supercluster.prototype._getOriginZoom = function _getOriginZoom(clusterId) {\n      return (clusterId - this.points.length) % 32;\n    };\n\n    Supercluster.prototype._map = function _map(point, clone) {\n      if (point.numPoints) {\n        return clone ? extend({}, point.properties) : point.properties;\n      }\n\n      var original = this.points[point.index].properties;\n      var result = this.options.map(original);\n      return clone && result === original ? extend({}, result) : result;\n    };\n\n    function createCluster(x, y, id, numPoints, properties) {\n      return {\n        x: fround(x),\n        // weighted cluster center; round for consistency with Float32Array index\n        y: fround(y),\n        zoom: Infinity,\n        // the last zoom the cluster was processed at\n        id: id,\n        // encodes index of the first child of the cluster and its zoom level\n        parentId: -1,\n        // parent cluster id\n        numPoints: numPoints,\n        properties: properties\n      };\n    }\n\n    function createPointCluster(p, id) {\n      var ref = p.geometry.coordinates;\n      var x = ref[0];\n      var y = ref[1];\n      return {\n        x: fround(lngX(x)),\n        // projected point coordinates\n        y: fround(latY(y)),\n        zoom: Infinity,\n        // the last zoom the point was processed at\n        index: id,\n        // index of the source feature in the original input array,\n        parentId: -1 // parent cluster id\n\n      };\n    }\n\n    function getClusterJSON(cluster) {\n      return {\n        type: 'Feature',\n        id: cluster.id,\n        properties: getClusterProperties(cluster),\n        geometry: {\n          type: 'Point',\n          coordinates: [xLng(cluster.x), yLat(cluster.y)]\n        }\n      };\n    }\n\n    function getClusterProperties(cluster) {\n      var count = cluster.numPoints;\n      var abbrev = count >= 10000 ? Math.round(count / 1000) + \"k\" : count >= 1000 ? Math.round(count / 100) / 10 + \"k\" : count;\n      return extend(extend({}, cluster.properties), {\n        cluster: true,\n        cluster_id: cluster.id,\n        point_count: count,\n        point_count_abbreviated: abbrev\n      });\n    } // longitude/latitude to spherical mercator in [0..1] range\n\n\n    function lngX(lng) {\n      return lng / 360 + 0.5;\n    }\n\n    function latY(lat) {\n      var sin = Math.sin(lat * Math.PI / 180);\n      var y = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n      return y < 0 ? 0 : y > 1 ? 1 : y;\n    } // spherical mercator to longitude/latitude\n\n\n    function xLng(x) {\n      return (x - 0.5) * 360;\n    }\n\n    function yLat(y) {\n      var y2 = (180 - y * 360) * Math.PI / 180;\n      return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n    }\n\n    function extend(dest, src) {\n      for (var id in src) {\n        dest[id] = src[id];\n      }\n\n      return dest;\n    }\n\n    function getX(p) {\n      return p.x;\n    }\n\n    function getY(p) {\n      return p.y;\n    }\n\n    return Supercluster;\n  });\n})(supercluster);\n\nvar SuperCluster = supercluster.exports;\n\nvar es6 = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false;\n\n      for (i of a.entries()) if (!b.has(i[0])) return false;\n\n      for (i of a.entries()) if (!equal(i[1], b.get(i[0]))) return false;\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false;\n\n      for (i of a.entries()) if (!b.has(i[0])) return false;\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (a[i] !== b[i]) return false;\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n};\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nclass Cluster {\n  constructor(_ref7) {\n    let {\n      markers,\n      position\n    } = _ref7;\n    this.markers = markers;\n\n    if (position) {\n      if (position instanceof google.maps.LatLng) {\n        this._position = position;\n      } else {\n        this._position = new google.maps.LatLng(position);\n      }\n    }\n  }\n\n  get bounds() {\n    if (this.markers.length === 0 && !this._position) {\n      return undefined;\n    }\n\n    return this.markers.reduce((bounds, marker) => {\n      return bounds.extend(marker.getPosition());\n    }, new google.maps.LatLngBounds(this._position, this._position));\n  }\n\n  get position() {\n    return this._position || this.bounds.getCenter();\n  }\n  /**\r\n   * Get the count of **visible** markers.\r\n   */\n\n\n  get count() {\n    return this.markers.filter(m => m.getVisible()).length;\n  }\n  /**\r\n   * Add a marker to the cluster.\r\n   */\n\n\n  push(marker) {\n    this.markers.push(marker);\n  }\n  /**\r\n   * Cleanup references and remove marker from map.\r\n   */\n\n\n  delete() {\n    if (this.marker) {\n      this.marker.setMap(null);\n      delete this.marker;\n    }\n\n    this.markers.length = 0;\n  }\n\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst filterMarkersToPaddedViewport = (map, mapCanvasProjection, markers, viewportPadding) => {\n  const extendedMapBounds = extendBoundsToPaddedViewport(map.getBounds(), mapCanvasProjection, viewportPadding);\n  return markers.filter(marker => extendedMapBounds.contains(marker.getPosition()));\n};\n/**\r\n * Extends a bounds by a number of pixels in each direction.\r\n */\n\n\nconst extendBoundsToPaddedViewport = (bounds, projection, pixels) => {\n  const {\n    northEast,\n    southWest\n  } = latLngBoundsToPixelBounds(bounds, projection);\n  const extendedPixelBounds = extendPixelBounds({\n    northEast,\n    southWest\n  }, pixels);\n  return pixelBoundsToLatLngBounds(extendedPixelBounds, projection);\n};\n/**\r\n * @hidden\r\n */\n\n\nconst distanceBetweenPoints = (p1, p2) => {\n  const R = 6371; // Radius of the Earth in km\n\n  const dLat = (p2.lat - p1.lat) * Math.PI / 180;\n  const dLon = (p2.lng - p1.lng) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat * Math.PI / 180) * Math.cos(p2.lat * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\n/**\r\n * @hidden\r\n */\n\n\nconst latLngBoundsToPixelBounds = (bounds, projection) => {\n  return {\n    northEast: projection.fromLatLngToDivPixel(bounds.getNorthEast()),\n    southWest: projection.fromLatLngToDivPixel(bounds.getSouthWest())\n  };\n};\n/**\r\n * @hidden\r\n */\n\n\nconst extendPixelBounds = (_ref8, pixels) => {\n  let {\n    northEast,\n    southWest\n  } = _ref8;\n  northEast.x += pixels;\n  northEast.y -= pixels;\n  southWest.x -= pixels;\n  southWest.y += pixels;\n  return {\n    northEast,\n    southWest\n  };\n};\n/**\r\n * @hidden\r\n */\n\n\nconst pixelBoundsToLatLngBounds = (_ref9, projection) => {\n  let {\n    northEast,\n    southWest\n  } = _ref9;\n  const bounds = new google.maps.LatLngBounds();\n  bounds.extend(projection.fromDivPixelToLatLng(northEast));\n  bounds.extend(projection.fromDivPixelToLatLng(southWest));\n  return bounds;\n};\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @hidden\r\n */\n\n\nclass AbstractAlgorithm {\n  constructor(_ref10) {\n    let {\n      maxZoom = 16\n    } = _ref10;\n    this.maxZoom = maxZoom;\n  }\n  /**\r\n   * Helper function to bypass clustering based upon some map state such as\r\n   * zoom, number of markers, etc.\r\n   *\r\n   * ```typescript\r\n   *  cluster({markers, map}: AlgorithmInput): Cluster[] {\r\n   *    if (shouldBypassClustering(map)) {\r\n   *      return this.noop({markers, map})\r\n   *    }\r\n   * }\r\n   * ```\r\n   */\n\n\n  noop(_ref11) {\n    let {\n      markers\n    } = _ref11;\n    return noop$1(markers);\n  }\n\n}\n/**\r\n * Abstract viewport algorithm proves a class to filter markers by a padded\r\n * viewport. This is a common optimization.\r\n *\r\n * @hidden\r\n */\n\n\nclass AbstractViewportAlgorithm extends AbstractAlgorithm {\n  constructor(_a) {\n    var {\n      viewportPadding = 60\n    } = _a,\n        options = __rest(_a, [\"viewportPadding\"]);\n\n    super(options);\n    this.viewportPadding = 60;\n    this.viewportPadding = viewportPadding;\n  }\n\n  calculate(_ref12) {\n    let {\n      markers,\n      map,\n      mapCanvasProjection\n    } = _ref12;\n\n    if (map.getZoom() >= this.maxZoom) {\n      return {\n        clusters: this.noop({\n          markers,\n          map,\n          mapCanvasProjection\n        }),\n        changed: false\n      };\n    }\n\n    return {\n      clusters: this.cluster({\n        markers: filterMarkersToPaddedViewport(map, mapCanvasProjection, markers, this.viewportPadding),\n        map,\n        mapCanvasProjection\n      })\n    };\n  }\n\n}\n/**\r\n * @hidden\r\n */\n\n\nconst noop$1 = markers => {\n  const clusters = markers.map(marker => new Cluster({\n    position: marker.getPosition(),\n    markers: [marker]\n  }));\n  return clusters;\n};\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The default Grid algorithm historically used in Google Maps marker\r\n * clustering.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n */\n\n\nclass GridAlgorithm extends AbstractViewportAlgorithm {\n  constructor(_a) {\n    var {\n      maxDistance = 40000,\n      gridSize = 40\n    } = _a,\n        options = __rest(_a, [\"maxDistance\", \"gridSize\"]);\n\n    super(options);\n    this.clusters = [];\n    this.maxDistance = maxDistance;\n    this.gridSize = gridSize;\n  }\n\n  cluster(_ref13) {\n    let {\n      markers,\n      map,\n      mapCanvasProjection\n    } = _ref13;\n    this.clusters = [];\n    markers.forEach(marker => {\n      this.addToClosestCluster(marker, map, mapCanvasProjection);\n    });\n    return this.clusters;\n  }\n\n  addToClosestCluster(marker, map, projection) {\n    let maxDistance = this.maxDistance; // Some large number\n\n    let cluster = null;\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      const candidate = this.clusters[i];\n      const distance = distanceBetweenPoints(candidate.bounds.getCenter().toJSON(), marker.getPosition().toJSON());\n\n      if (distance < maxDistance) {\n        maxDistance = distance;\n        cluster = candidate;\n      }\n    }\n\n    if (cluster && extendBoundsToPaddedViewport(cluster.bounds, projection, this.gridSize).contains(marker.getPosition())) {\n      cluster.push(marker);\n    } else {\n      const cluster = new Cluster({\n        markers: [marker]\n      });\n      this.clusters.push(cluster);\n    }\n  }\n\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Noop algorithm does not generate any clusters or filter markers by the an extended viewport.\r\n */\n\n\nclass NoopAlgorithm extends AbstractAlgorithm {\n  constructor(_a) {\n    var options = __rest(_a, []);\n\n    super(options);\n  }\n\n  calculate(_ref14) {\n    let {\n      markers,\n      map,\n      mapCanvasProjection\n    } = _ref14;\n    return {\n      clusters: this.cluster({\n        markers,\n        map,\n        mapCanvasProjection\n      }),\n      changed: false\n    };\n  }\n\n  cluster(input) {\n    return this.noop(input);\n  }\n\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Experimental algorithm using Kmeans.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n *\r\n * @see https://www.npmjs.com/package/@turf/clusters-kmeans\r\n */\n\n\nclass KmeansAlgorithm extends AbstractViewportAlgorithm {\n  constructor(_a) {\n    var {\n      numberOfClusters\n    } = _a,\n        options = __rest(_a, [\"numberOfClusters\"]);\n\n    super(options);\n    this.numberOfClusters = numberOfClusters;\n  }\n\n  cluster(_ref15) {\n    let {\n      markers,\n      map\n    } = _ref15;\n    const clusters = [];\n\n    if (markers.length === 0) {\n      return clusters;\n    }\n\n    const points = featureCollection(markers.map(marker => {\n      return point([marker.getPosition().lng(), marker.getPosition().lat()]);\n    }));\n    let numberOfClusters;\n\n    if (this.numberOfClusters instanceof Function) {\n      numberOfClusters = this.numberOfClusters(markers.length, map.getZoom());\n    } else {\n      numberOfClusters = this.numberOfClusters;\n    }\n\n    clustersKmeans(points, {\n      numberOfClusters\n    }).features.forEach((point, i) => {\n      if (!clusters[point.properties.cluster]) {\n        clusters[point.properties.cluster] = new Cluster({\n          position: {\n            lng: point.properties.centroid[0],\n            lat: point.properties.centroid[1]\n          },\n          markers: []\n        });\n      }\n\n      clusters[point.properties.cluster].push(markers[i]);\n    });\n    return clusters;\n  }\n\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst DEFAULT_INTERNAL_DBSCAN_OPTION = {\n  units: \"kilometers\",\n  mutate: false,\n  minPoints: 1\n};\n/**\r\n *\r\n * **This algorithm is not yet ready for use!**\r\n *\r\n * Experimental algorithm using DBScan.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n *\r\n * @see https://www.npmjs.com/package/@turf/clusters-dbscan\r\n */\n\nclass DBScanAlgorithm extends AbstractViewportAlgorithm {\n  constructor(_a) {\n    var {\n      maxDistance = 200,\n      minPoints = DEFAULT_INTERNAL_DBSCAN_OPTION.minPoints\n    } = _a,\n        options = __rest(_a, [\"maxDistance\", \"minPoints\"]);\n\n    super(options);\n    this.maxDistance = maxDistance;\n    this.options = Object.assign(Object.assign({}, DEFAULT_INTERNAL_DBSCAN_OPTION), {\n      minPoints\n    });\n  }\n\n  cluster(_ref16) {\n    let {\n      markers,\n      mapCanvasProjection\n    } = _ref16;\n    const points = featureCollection(markers.map(marker => {\n      const projectedPoint = mapCanvasProjection.fromLatLngToContainerPixel(marker.getPosition());\n      return point([projectedPoint.x, projectedPoint.y]);\n    }));\n    const grouped = [];\n    clustersDbscan(points, this.maxDistance, this.options).features.forEach((point, i) => {\n      if (!grouped[point.properties.cluster]) {\n        grouped[point.properties.cluster] = [];\n      }\n\n      grouped[point.properties.cluster].push(markers[i]);\n    });\n    return grouped.map(markers => new Cluster({\n      markers\n    }));\n  }\n\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A very fast JavaScript algorithm for geospatial point clustering using KD trees.\r\n *\r\n * @see https://www.npmjs.com/package/supercluster for more information on options.\r\n */\n\n\nclass SuperClusterAlgorithm extends AbstractAlgorithm {\n  constructor(_a) {\n    var {\n      maxZoom,\n      radius = 60\n    } = _a,\n        options = __rest(_a, [\"maxZoom\", \"radius\"]);\n\n    super({\n      maxZoom\n    });\n    this.superCluster = new SuperCluster(Object.assign({\n      maxZoom: this.maxZoom,\n      radius\n    }, options));\n    this.state = {\n      zoom: null\n    };\n  }\n\n  calculate(input) {\n    let changed = false;\n\n    if (!es6(input.markers, this.markers)) {\n      changed = true; // TODO use proxy to avoid copy?\n\n      this.markers = [...input.markers];\n      const points = this.markers.map(marker => {\n        return {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [marker.getPosition().lng(), marker.getPosition().lat()]\n          },\n          properties: {\n            marker\n          }\n        };\n      });\n      this.superCluster.load(points);\n    }\n\n    const state = {\n      zoom: input.map.getZoom()\n    };\n\n    if (!changed) {\n      if (this.state.zoom > this.maxZoom && state.zoom > this.maxZoom) ;else {\n        changed = changed || !es6(this.state, state);\n      }\n    }\n\n    this.state = state;\n\n    if (changed) {\n      this.clusters = this.cluster(input);\n    }\n\n    return {\n      clusters: this.clusters,\n      changed\n    };\n  }\n\n  cluster(_ref17) {\n    let {\n      map\n    } = _ref17;\n    return this.superCluster.getClusters([-180, -90, 180, 90], map.getZoom()).map(this.transformCluster.bind(this));\n  }\n\n  transformCluster(_ref18) {\n    let {\n      geometry: {\n        coordinates: [lng, lat]\n      },\n      properties\n    } = _ref18;\n\n    if (properties.cluster) {\n      return new Cluster({\n        markers: this.superCluster.getLeaves(properties.cluster_id, Infinity).map(leaf => leaf.properties.marker),\n        position: new google.maps.LatLng({\n          lat,\n          lng\n        })\n      });\n    } else {\n      const marker = properties.marker;\n      return new Cluster({\n        markers: [marker],\n        position: marker.getPosition()\n      });\n    }\n  }\n\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides statistics on all clusters in the current render cycle for use in {@link Renderer.render}.\r\n */\n\n\nclass ClusterStats {\n  constructor(markers, clusters) {\n    this.markers = {\n      sum: markers.length\n    };\n    const clusterMarkerCounts = clusters.map(a => a.count);\n    const clusterMarkerSum = clusterMarkerCounts.reduce((a, b) => a + b, 0);\n    this.clusters = {\n      count: clusters.length,\n      markers: {\n        mean: clusterMarkerSum / clusters.length,\n        sum: clusterMarkerSum,\n        min: Math.min(...clusterMarkerCounts),\n        max: Math.max(...clusterMarkerCounts)\n      }\n    };\n  }\n\n}\n\nclass DefaultRenderer {\n  /**\r\n   * The default render function for the library used by {@link MarkerClusterer}.\r\n   *\r\n   * Currently set to use the following:\r\n   *\r\n   * ```typescript\r\n   * // change color if this cluster has more markers than the mean cluster\r\n   * const color =\r\n   *   count > Math.max(10, stats.clusters.markers.mean)\r\n   *     ? \"#ff0000\"\r\n   *     : \"#0000ff\";\r\n   *\r\n   * // create svg url with fill color\r\n   * const svg = window.btoa(`\r\n   * <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\r\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\r\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\r\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\r\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".1\" r=\"130\" />\r\n   * </svg>`);\r\n   *\r\n   * // create marker using svg icon\r\n   * return new google.maps.Marker({\r\n   *   position,\r\n   *   icon: {\r\n   *     url: `data:image/svg+xml;base64,${svg}`,\r\n   *     scaledSize: new google.maps.Size(45, 45),\r\n   *   },\r\n   *   label: {\r\n   *     text: String(count),\r\n   *     color: \"rgba(255,255,255,0.9)\",\r\n   *     fontSize: \"12px\",\r\n   *   },\r\n   *   // adjust zIndex to be above other markers\r\n   *   zIndex: 1000 + count,\r\n   * });\r\n   * ```\r\n   */\n  render(_ref19, stats) {\n    let {\n      count,\n      position\n    } = _ref19;\n    // change color if this cluster has more markers than the mean cluster\n    const color = count > Math.max(10, stats.clusters.markers.mean) ? \"#ff0000\" : \"#0000ff\"; // create svg url with fill color\n\n    const svg = window.btoa(`\n  <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n    <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n  </svg>`); // create marker using svg icon\n\n    return new google.maps.Marker({\n      position,\n      icon: {\n        url: `data:image/svg+xml;base64,${svg}`,\n        scaledSize: new google.maps.Size(45, 45)\n      },\n      label: {\n        text: String(count),\n        color: \"rgba(255,255,255,0.9)\",\n        fontSize: \"12px\"\n      },\n      // adjust zIndex to be above other markers\n      zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count\n    });\n  }\n\n}\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Extends an object's prototype by another's.\r\n *\r\n * @param type1 The Type to be extended.\r\n * @param type2 The Type to extend with.\r\n * @ignore\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction extend(type1, type2) {\n  /* istanbul ignore next */\n  // eslint-disable-next-line prefer-const\n  for (let property in type2.prototype) {\n    type1.prototype[property] = type2.prototype[property];\n  }\n}\n/**\r\n * @ignore\r\n */\n\n\nclass OverlayViewSafe {\n  constructor() {\n    // MarkerClusterer implements google.maps.OverlayView interface. We use the\n    // extend function to extend MarkerClusterer with google.maps.OverlayView\n    // because it might not always be available when the code is defined so we\n    // look for it at the last possible moment. If it doesn't exist now then\n    // there is no point going ahead :)\n    extend(OverlayViewSafe, google.maps.OverlayView);\n  }\n\n}\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MarkerClustererEvents;\n\n(function (MarkerClustererEvents) {\n  MarkerClustererEvents[\"CLUSTERING_BEGIN\"] = \"clusteringbegin\";\n  MarkerClustererEvents[\"CLUSTERING_END\"] = \"clusteringend\";\n  MarkerClustererEvents[\"CLUSTER_CLICK\"] = \"click\";\n})(MarkerClustererEvents || (MarkerClustererEvents = {}));\n\nconst defaultOnClusterClickHandler = (_, cluster, map) => {\n  map.fitBounds(cluster.bounds);\n};\n/**\r\n * MarkerClusterer creates and manages per-zoom-level clusters for large amounts\r\n * of markers. See {@link MarkerClustererOptions} for more details.\r\n *\r\n * <iframe src=\"https://googlemaps.github.io/js-three/public/anchor/index.html\"></iframe>\r\n */\n\n\nclass MarkerClusterer extends OverlayViewSafe {\n  constructor(_ref20) {\n    let {\n      map,\n      markers = [],\n      algorithm = new SuperClusterAlgorithm({}),\n      renderer = new DefaultRenderer(),\n      onClusterClick = defaultOnClusterClickHandler\n    } = _ref20;\n    super();\n    this.markers = [...markers];\n    this.clusters = [];\n    this.algorithm = algorithm;\n    this.renderer = renderer;\n    this.onClusterClick = onClusterClick;\n\n    if (map) {\n      this.setMap(map);\n    }\n  }\n\n  addMarker(marker, noDraw) {\n    if (this.markers.includes(marker)) {\n      return;\n    }\n\n    this.markers.push(marker);\n\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  addMarkers(markers, noDraw) {\n    markers.forEach(marker => {\n      this.addMarker(marker, true);\n    });\n\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  removeMarker(marker, noDraw) {\n    const index = this.markers.indexOf(marker);\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n\n    if (!noDraw) {\n      this.render();\n    }\n\n    return true;\n  }\n\n  removeMarkers(markers, noDraw) {\n    let removed = false;\n    markers.forEach(marker => {\n      removed = this.removeMarker(marker, true) || removed;\n    });\n\n    if (removed && !noDraw) {\n      this.render();\n    }\n\n    return removed;\n  }\n\n  clearMarkers(noDraw) {\n    this.markers.length = 0;\n\n    if (!noDraw) {\n      this.render();\n    }\n  }\n  /**\r\n   * Recalculates and draws all the marker clusters.\r\n   */\n\n\n  render() {\n    const map = this.getMap();\n\n    if (map instanceof google.maps.Map && this.getProjection()) {\n      google.maps.event.trigger(this, MarkerClustererEvents.CLUSTERING_BEGIN, this);\n      const {\n        clusters,\n        changed\n      } = this.algorithm.calculate({\n        markers: this.markers,\n        map,\n        mapCanvasProjection: this.getProjection()\n      }); // allow algorithms to return flag on whether the clusters/markers have changed\n\n      if (changed || changed == undefined) {\n        // reset visibility of markers and clusters\n        this.reset(); // store new clusters\n\n        this.clusters = clusters;\n        this.renderClusters();\n      }\n\n      google.maps.event.trigger(this, MarkerClustererEvents.CLUSTERING_END, this);\n    }\n  }\n\n  onAdd() {\n    this.idleListener = this.getMap().addListener(\"idle\", this.render.bind(this));\n    this.render();\n  }\n\n  onRemove() {\n    google.maps.event.removeListener(this.idleListener);\n    this.reset();\n  }\n\n  reset() {\n    this.markers.forEach(marker => marker.setMap(null));\n    this.clusters.forEach(cluster => cluster.delete());\n    this.clusters = [];\n  }\n\n  renderClusters() {\n    // generate stats to pass to renderers\n    const stats = new ClusterStats(this.markers, this.clusters);\n    const map = this.getMap();\n    this.clusters.forEach(cluster => {\n      if (cluster.markers.length === 1) {\n        cluster.marker = cluster.markers[0];\n      } else {\n        cluster.marker = this.renderer.render(cluster, stats);\n\n        if (this.onClusterClick) {\n          cluster.marker.addListener(\"click\",\n          /* istanbul ignore next */\n          event => {\n            google.maps.event.trigger(this, MarkerClustererEvents.CLUSTER_CLICK, cluster);\n            this.onClusterClick(event, cluster, map);\n          });\n        }\n      }\n\n      cluster.marker.setMap(map);\n    });\n  }\n\n}\n\nvar index_esm = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AbstractAlgorithm: AbstractAlgorithm,\n  AbstractViewportAlgorithm: AbstractViewportAlgorithm,\n  Cluster: Cluster,\n  ClusterStats: ClusterStats,\n  DBScanAlgorithm: DBScanAlgorithm,\n  DefaultRenderer: DefaultRenderer,\n  GridAlgorithm: GridAlgorithm,\n  KmeansAlgorithm: KmeansAlgorithm,\n  MarkerClusterer: MarkerClusterer,\n\n  get MarkerClustererEvents() {\n    return MarkerClustererEvents;\n  },\n\n  NoopAlgorithm: NoopAlgorithm,\n  SuperClusterAlgorithm: SuperClusterAlgorithm,\n  defaultOnClusterClickHandler: defaultOnClusterClickHandler,\n  distanceBetweenPoints: distanceBetweenPoints,\n  extendBoundsToPaddedViewport: extendBoundsToPaddedViewport,\n  extendPixelBounds: extendPixelBounds,\n  filterMarkersToPaddedViewport: filterMarkersToPaddedViewport,\n  noop: noop$1,\n  pixelBoundsToLatLngBounds: pixelBoundsToLatLngBounds\n});\n\nconst useGoogleMarkerClusterer = options => {\n  const map = useGoogleMap();\n  const [markerClusterer, setMarkerClusterer] = useState(null);\n  useEffect(() => {\n    if (map && markerClusterer === null) {\n      const markerCluster = new MarkerClusterer(Object.assign(Object.assign({}, options), {\n        map\n      }));\n      setMarkerClusterer(markerCluster);\n    }\n  }, [map]);\n  return markerClusterer;\n};\n/** Wrapper around [@googlemaps/markerclusterer](https://github.com/googlemaps/js-markerclusterer)\n *\n * Accepts {@link  MarkerClustererOptionsSubset} which is a subset of  {@link MarkerClustererOptions}\n */\n\n\nconst GoogleMarkerClusterer = _ref21 => {\n  let {\n    children,\n    options\n  } = _ref21;\n  const markerClusterer = useGoogleMarkerClusterer(options);\n  return markerClusterer !== null ? children(markerClusterer) : null;\n};\n/* global google */\n\n\nconst eventMap$c = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed'\n};\nconst updaterMap$c = {\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  position(instance, position) {\n    instance.setPosition(position);\n  },\n\n  zIndex(instance, zIndex) {\n    instance.setZIndex(zIndex);\n  }\n\n};\n\nclass InfoWindow extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.containerElement = null;\n    this.state = {\n      infoWindow: null\n    };\n\n    this.open = (infoWindow, anchor) => {\n      if (anchor) {\n        infoWindow.open(this.context, anchor);\n      } else if (infoWindow.getPosition()) {\n        infoWindow.open(this.context);\n      } else {\n        invariant_1(false, `You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.`);\n      }\n    };\n\n    this.setInfoWindowCallback = () => {\n      if (this.state.infoWindow !== null && this.containerElement !== null) {\n        this.state.infoWindow.setContent(this.containerElement);\n        this.open(this.state.infoWindow, this.props.anchor);\n\n        if (this.props.onLoad) {\n          this.props.onLoad(this.state.infoWindow);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const infoWindow = new google.maps.InfoWindow(Object.assign({}, this.props.options || {}));\n    this.containerElement = document.createElement('div');\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$c,\n      eventMap: eventMap$c,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoWindow\n    });\n    this.setState(function setInfoWindow() {\n      return {\n        infoWindow\n      };\n    }, this.setInfoWindowCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$c,\n        eventMap: eventMap$c,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.infoWindow\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.state.infoWindow.close();\n    }\n  }\n\n  render() {\n    return this.containerElement ? ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement) : React.createElement(React.Fragment, null);\n  }\n\n}\n\nInfoWindow.contextType = MapContext;\nconst eventMap$b = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nconst updaterMap$b = {\n  draggable(instance, draggable) {\n    instance.setDraggable(draggable);\n  },\n\n  editable(instance, editable) {\n    instance.setEditable(editable);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  path(instance, path) {\n    instance.setPath(path);\n  },\n\n  visible(instance, visible) {\n    instance.setVisible(visible);\n  }\n\n};\n\nclass Polyline extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      polyline: null\n    };\n\n    this.setPolylineCallback = () => {\n      if (this.state.polyline !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.polyline);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const polyline = new google.maps.Polyline(Object.assign(Object.assign({}, this.props.options || {}), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$b,\n      eventMap: eventMap$b,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polyline\n    });\n    this.setState(function setPolyline() {\n      return {\n        polyline\n      };\n    }, this.setPolylineCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.polyline !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$b,\n        eventMap: eventMap$b,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polyline\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.polyline !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polyline);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.polyline.setMap(null);\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nPolyline.contextType = MapContext;\n/* global google */\n\nconst eventMap$a = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nconst updaterMap$a = {\n  draggable(instance, draggable) {\n    instance.setDraggable(draggable);\n  },\n\n  editable(instance, editable) {\n    instance.setEditable(editable);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  path(instance, path) {\n    instance.setPath(path);\n  },\n\n  paths(instance, paths) {\n    instance.setPaths(paths);\n  },\n\n  visible(instance, visible) {\n    instance.setVisible(visible);\n  }\n\n};\n\nclass Polygon extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      polygon: null\n    };\n\n    this.setPolygonCallback = () => {\n      if (this.state.polygon !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.polygon);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const polygon = new google.maps.Polygon(Object.assign(Object.assign({}, this.props.options || {}), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$a,\n      eventMap: eventMap$a,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polygon\n    });\n    this.setState(function setPolygon() {\n      return {\n        polygon\n      };\n    }, this.setPolygonCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.polygon !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$a,\n        eventMap: eventMap$a,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polygon\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.polygon !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polygon);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.polygon && this.state.polygon.setMap(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nPolygon.contextType = MapContext;\nconst eventMap$9 = {\n  onBoundsChanged: 'bounds_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nconst updaterMap$9 = {\n  bounds(instance, bounds) {\n    instance.setBounds(bounds);\n  },\n\n  draggable(instance, draggable) {\n    instance.setDraggable(draggable);\n  },\n\n  editable(instance, editable) {\n    instance.setEditable(editable);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  visible(instance, visible) {\n    instance.setVisible(visible);\n  }\n\n};\n\nclass Rectangle extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      rectangle: null\n    };\n\n    this.setRectangleCallback = () => {\n      if (this.state.rectangle !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.rectangle);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const rectangle = new google.maps.Rectangle(Object.assign(Object.assign({}, this.props.options || {}), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$9,\n      eventMap: eventMap$9,\n      prevProps: {},\n      nextProps: this.props,\n      instance: rectangle\n    });\n    this.setState(function setRectangle() {\n      return {\n        rectangle\n      };\n    }, this.setRectangleCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.rectangle !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$9,\n        eventMap: eventMap$9,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.rectangle\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.rectangle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.rectangle);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.rectangle.setMap(null);\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nRectangle.contextType = MapContext;\nconst eventMap$8 = {\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRadiusChanged: 'radius_changed',\n  onRightClick: 'rightclick'\n};\nconst updaterMap$8 = {\n  center(instance, center) {\n    instance.setCenter(center);\n  },\n\n  draggable(instance, draggable) {\n    instance.setDraggable(draggable);\n  },\n\n  editable(instance, editable) {\n    instance.setEditable(editable);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  radius(instance, radius) {\n    instance.setRadius(radius);\n  },\n\n  visible(instance, visible) {\n    instance.setVisible(visible);\n  }\n\n};\n\nclass Circle extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      circle: null\n    };\n\n    this.setCircleCallback = () => {\n      if (this.state.circle !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.circle);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const circle = new google.maps.Circle(Object.assign(Object.assign({}, this.props.options || {}), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$8,\n      eventMap: eventMap$8,\n      prevProps: {},\n      nextProps: this.props,\n      instance: circle\n    });\n    this.setState(function setCircle() {\n      return {\n        circle\n      };\n    }, this.setCircleCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.circle !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$8,\n        eventMap: eventMap$8,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.circle\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.circle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.circle);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.circle && this.state.circle.setMap(null);\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nCircle.contextType = MapContext;\nconst eventMap$7 = {\n  onAddFeature: 'addfeature',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRemoveFeature: 'removefeature',\n  onRemoveProperty: 'removeproperty',\n  onRightClick: 'rightclick',\n  onSetGeometry: 'setgeometry',\n  onSetProperty: 'setproperty'\n};\nconst updaterMap$7 = {\n  add(instance, features) {\n    instance.add(features);\n  },\n\n  addgeojson(instance, geojson, options) {\n    instance.addGeoJson(geojson, options);\n  },\n\n  contains(instance, feature) {\n    instance.contains(feature);\n  },\n\n  foreach(instance, callback) {\n    instance.forEach(callback);\n  },\n\n  loadgeojson(instance, url, options, callback) {\n    instance.loadGeoJson(url, options, callback);\n  },\n\n  overridestyle(instance, feature, style) {\n    instance.overrideStyle(feature, style);\n  },\n\n  remove(instance, feature) {\n    instance.remove(feature);\n  },\n\n  revertstyle(instance, feature) {\n    instance.revertStyle(feature);\n  },\n\n  controlposition(instance, controlPosition) {\n    instance.setControlPosition(controlPosition);\n  },\n\n  controls(instance, controls) {\n    instance.setControls(controls);\n  },\n\n  drawingmode(instance, mode) {\n    instance.setDrawingMode(mode);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  style(instance, style) {\n    instance.setStyle(style);\n  },\n\n  togeojson(instance, callback) {\n    instance.toGeoJson(callback);\n  }\n\n};\n\nclass Data extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      data: null\n    };\n\n    this.setDataCallback = () => {\n      if (this.state.data !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.data);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const data = new google.maps.Data(Object.assign(Object.assign({}, this.props.options || {}), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$7,\n      eventMap: eventMap$7,\n      prevProps: {},\n      nextProps: this.props,\n      instance: data\n    });\n    this.setState(function setData() {\n      return {\n        data\n      };\n    }, this.setDataCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.data !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$7,\n        eventMap: eventMap$7,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.data\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.data !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.data);\n      }\n\n      unregisterEvents(this.registeredEvents);\n\n      if (this.state.data) {\n        this.state.data.setMap(null);\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nData.contextType = MapContext;\nconst eventMap$6 = {\n  onClick: 'click',\n  onDefaultViewportChanged: 'defaultviewport_changed',\n  onStatusChanged: 'status_changed'\n};\nconst updaterMap$6 = {\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  url(instance, url) {\n    instance.setUrl(url);\n  },\n\n  zIndex(instance, zIndex) {\n    instance.setZIndex(zIndex);\n  }\n\n};\n\nclass KmlLayer extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      kmlLayer: null\n    };\n\n    this.setKmlLayerCallback = () => {\n      if (this.state.kmlLayer !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.kmlLayer);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const kmlLayer = new google.maps.KmlLayer(Object.assign(Object.assign({}, this.props.options), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$6,\n      eventMap: eventMap$6,\n      prevProps: {},\n      nextProps: this.props,\n      instance: kmlLayer\n    });\n    this.setState(function setLmlLayer() {\n      return {\n        kmlLayer\n      };\n    }, this.setKmlLayerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.kmlLayer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$6,\n        eventMap: eventMap$6,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.kmlLayer\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.kmlLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.kmlLayer);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.kmlLayer.setMap(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nKmlLayer.contextType = MapContext;\n/* eslint-disable filenames/match-regex */\n\nfunction getOffsetOverride(containerElement, getPixelPositionOffset) {\n  return typeof getPixelPositionOffset === 'function' ? getPixelPositionOffset(containerElement.offsetWidth, containerElement.offsetHeight) : {};\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst createLatLng = (inst, Type) => new Type(inst.lat, inst.lng); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst createLatLngBounds = (inst, Type) => new Type(new google.maps.LatLng(inst.ne.lat, inst.ne.lng), new google.maps.LatLng(inst.sw.lat, inst.sw.lng)); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst ensureOfType = (inst, type, factory) => {\n  return inst instanceof type ? inst : factory(inst, type);\n};\n\nconst getLayoutStylesByBounds = (mapCanvasProjection, offset, bounds) => {\n  const ne = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast());\n  const sw = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest());\n\n  if (ne && sw) {\n    return {\n      left: `${sw.x + offset.x}px`,\n      top: `${ne.y + offset.y}px`,\n      width: `${ne.x - sw.x - offset.x}px`,\n      height: `${sw.y - ne.y - offset.y}px`\n    };\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px'\n  };\n};\n\nconst getLayoutStylesByPosition = (mapCanvasProjection, offset, position) => {\n  const point = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(position);\n\n  if (point) {\n    const {\n      x,\n      y\n    } = point;\n    return {\n      left: `${x + offset.x}px`,\n      top: `${y + offset.y}px`\n    };\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px'\n  };\n};\n\nconst getLayoutStyles = (mapCanvasProjection, offset, bounds, position) => {\n  return bounds !== undefined ? getLayoutStylesByBounds(mapCanvasProjection, offset, ensureOfType(bounds, google.maps.LatLngBounds, createLatLngBounds)) : getLayoutStylesByPosition(mapCanvasProjection, offset, ensureOfType(position, google.maps.LatLng, createLatLng));\n};\n\nconst arePositionsEqual = (currentPosition, previousPosition) => {\n  return currentPosition.left === previousPosition.left && currentPosition.top === previousPosition.top && currentPosition.width === previousPosition.height && currentPosition.height === previousPosition.height;\n};\n\nfunction convertToLatLngString(latLngLike) {\n  if (!latLngLike) {\n    return '';\n  }\n\n  const latLng = latLngLike instanceof google.maps.LatLng ? latLngLike : new google.maps.LatLng(latLngLike.lat, latLngLike.lng);\n  return latLng + '';\n}\n\nfunction convertToLatLngBoundsString(latLngBoundsLike) {\n  if (!latLngBoundsLike) {\n    return '';\n  }\n\n  const latLngBounds = latLngBoundsLike instanceof google.maps.LatLngBounds ? latLngBoundsLike : new google.maps.LatLngBounds(new google.maps.LatLng(latLngBoundsLike.south, latLngBoundsLike.east), new google.maps.LatLng(latLngBoundsLike.north, latLngBoundsLike.west));\n  return latLngBounds + '';\n}\n\nclass OverlayView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paneEl: null,\n      containerStyle: {\n        // set initial position\n        position: 'absolute'\n      }\n    };\n\n    this.updatePane = () => {\n      const mapPaneName = this.props.mapPaneName; // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapPanes\n\n      const mapPanes = this.overlayView.getPanes();\n      invariant_1(!!mapPaneName, `OverlayView requires props.mapPaneName but got %s`, mapPaneName);\n\n      if (mapPanes) {\n        this.setState({\n          paneEl: mapPanes[mapPaneName]\n        });\n      } else {\n        this.setState({\n          paneEl: null\n        });\n      }\n    };\n\n    this.onAdd = () => {\n      var _a, _b;\n\n      this.updatePane();\n      (_b = (_a = this.props).onLoad) === null || _b === void 0 ? void 0 : _b.call(_a, this.overlayView);\n    };\n\n    this.onPositionElement = () => {\n      const mapCanvasProjection = this.overlayView.getProjection();\n      const offset = Object.assign({\n        x: 0,\n        y: 0\n      }, this.containerRef.current ? getOffsetOverride(this.containerRef.current, this.props.getPixelPositionOffset) : {});\n      const layoutStyles = getLayoutStyles(mapCanvasProjection, offset, this.props.bounds, this.props.position);\n      const {\n        left,\n        top,\n        width,\n        height\n      } = this.state.containerStyle;\n\n      if (!arePositionsEqual(layoutStyles, {\n        left,\n        top,\n        width,\n        height\n      })) {\n        this.setState({\n          containerStyle: Object.assign(Object.assign({}, layoutStyles), {\n            position: 'absolute'\n          })\n        });\n      }\n    };\n\n    this.draw = () => {\n      this.onPositionElement();\n    };\n\n    this.onRemove = () => {\n      var _a, _b;\n\n      this.setState(() => ({\n        paneEl: null\n      })); // this.mapPaneEl = null\n\n      (_b = (_a = this.props).onUnmount) === null || _b === void 0 ? void 0 : _b.call(_a, this.overlayView);\n    };\n\n    this.containerRef = React.createRef(); // You must implement three methods: onAdd(), draw(), and onRemove().\n\n    const overlayView = new google.maps.OverlayView();\n    overlayView.onAdd = this.onAdd;\n    overlayView.draw = this.draw;\n    overlayView.onRemove = this.onRemove;\n    this.overlayView = overlayView;\n  }\n\n  componentDidMount() {\n    // You must call setMap() with a valid Map object to trigger the call to\n    // the onAdd() method and setMap(null) in order to trigger the onRemove() method.\n    this.overlayView.setMap(this.context);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevPositionString = convertToLatLngString(prevProps.position);\n    const positionString = convertToLatLngString(this.props.position);\n    const prevBoundsString = convertToLatLngBoundsString(prevProps.bounds);\n    const boundsString = convertToLatLngBoundsString(this.props.bounds);\n\n    if (prevPositionString !== positionString || prevBoundsString !== boundsString) {\n      this.overlayView.draw();\n    }\n\n    if (prevProps.mapPaneName !== this.props.mapPaneName) {\n      this.updatePane();\n    }\n  }\n\n  componentWillUnmount() {\n    this.overlayView.setMap(null);\n  }\n\n  render() {\n    const paneEl = this.state.paneEl;\n\n    if (paneEl) {\n      return ReactDOM.createPortal(React.createElement(\"div\", {\n        ref: this.containerRef,\n        style: this.state.containerStyle\n      }, React.Children.only(this.props.children)), paneEl);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nOverlayView.FLOAT_PANE = `floatPane`;\nOverlayView.MAP_PANE = `mapPane`;\nOverlayView.MARKER_LAYER = `markerLayer`;\nOverlayView.OVERLAY_LAYER = `overlayLayer`;\nOverlayView.OVERLAY_MOUSE_TARGET = `overlayMouseTarget`;\nOverlayView.contextType = MapContext;\n\nfunction noop() {}\n\nconst eventMap$5 = {\n  onDblClick: 'dblclick',\n  onClick: 'click'\n};\nconst updaterMap$5 = {\n  opacity(instance, opacity) {\n    instance.setOpacity(opacity);\n  }\n\n};\n\nclass GroundOverlay extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      groundOverlay: null\n    };\n\n    this.setGroundOverlayCallback = () => {\n      if (this.state.groundOverlay !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.groundOverlay);\n      }\n    };\n  }\n\n  componentDidMount() {\n    invariant_1(!!this.props.url || !!this.props.bounds, `For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by \\`react-google-maps-api\\`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just \\`key={url}\\` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655`);\n    const groundOverlay = new google.maps.GroundOverlay(this.props.url, this.props.bounds, Object.assign(Object.assign({}, this.props.options), {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$5,\n      eventMap: eventMap$5,\n      prevProps: {},\n      nextProps: this.props,\n      instance: groundOverlay\n    });\n    this.setState(function setGroundOverlay() {\n      return {\n        groundOverlay\n      };\n    }, this.setGroundOverlayCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.groundOverlay !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$5,\n        eventMap: eventMap$5,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.groundOverlay\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.groundOverlay) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.groundOverlay);\n      }\n\n      this.state.groundOverlay.setMap(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nGroundOverlay.defaultProps = {\n  onLoad: noop\n};\nGroundOverlay.contextType = MapContext;\nconst eventMap$4 = {};\nconst updaterMap$4 = {\n  data(instance, data) {\n    instance.setData(data);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  }\n\n};\n\nclass HeatmapLayer extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      heatmapLayer: null\n    };\n\n    this.setHeatmapLayerCallback = () => {\n      if (this.state.heatmapLayer !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.heatmapLayer);\n      }\n    };\n  }\n\n  componentDidMount() {\n    invariant_1(!!google.maps.visualization, 'Did you include prop libraries={[\"visualization\"]} to <LoadScript />? %s', google.maps.visualization);\n    invariant_1(!!this.props.data, 'data property is required in HeatmapLayer %s', this.props.data);\n    const heatmapLayer = new google.maps.visualization.HeatmapLayer(Object.assign(Object.assign({}, this.props.options || {}), {\n      data: this.props.data,\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$4,\n      eventMap: eventMap$4,\n      prevProps: {},\n      nextProps: this.props,\n      instance: heatmapLayer\n    });\n    this.setState(function setHeatmapLayer() {\n      return {\n        heatmapLayer\n      };\n    }, this.setHeatmapLayerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    unregisterEvents(this.registeredEvents);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$4,\n      eventMap: eventMap$4,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.heatmapLayer\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.state.heatmapLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.heatmapLayer);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.heatmapLayer.setMap(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nHeatmapLayer.contextType = MapContext;\nconst eventMap$3 = {\n  onCloseClick: 'closeclick',\n  onPanoChanged: 'pano_changed',\n  onPositionChanged: 'position_changed',\n  onPovChanged: 'pov_changed',\n  onResize: 'resize',\n  onStatusChanged: 'status_changed',\n  onVisibleChanged: 'visible_changed',\n  onZoomChanged: 'zoom_changed'\n};\nconst updaterMap$3 = {\n  register(instance, provider, options) {\n    instance.registerPanoProvider(provider, options);\n  },\n\n  links(instance, links) {\n    instance.setLinks(links);\n  },\n\n  motionTracking(instance, motionTracking) {\n    instance.setMotionTracking(motionTracking);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  pano(instance, pano) {\n    instance.setPano(pano);\n  },\n\n  position(instance, position) {\n    instance.setPosition(position);\n  },\n\n  pov(instance, pov) {\n    instance.setPov(pov);\n  },\n\n  visible(instance, visible) {\n    instance.setVisible(visible);\n  },\n\n  zoom(instance, zoom) {\n    instance.setZoom(zoom);\n  }\n\n};\n\nclass StreetViewPanorama extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      streetViewPanorama: null\n    };\n\n    this.setStreetViewPanoramaCallback = () => {\n      if (this.state.streetViewPanorama !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.streetViewPanorama);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const streetViewPanorama = this.context.getStreetView();\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$3,\n      eventMap: eventMap$3,\n      prevProps: {},\n      nextProps: this.props,\n      instance: streetViewPanorama\n    });\n    this.setState(function setStreetViewPanorama() {\n      return {\n        streetViewPanorama\n      };\n    }, this.setStreetViewPanoramaCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.streetViewPanorama !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$3,\n        eventMap: eventMap$3,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.streetViewPanorama\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.streetViewPanorama !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewPanorama);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.streetViewPanorama.setVisible(false);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nStreetViewPanorama.contextType = MapContext;\n\nclass StreetViewService extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      streetViewService: null\n    };\n\n    this.setStreetViewServiceCallback = () => {\n      if (this.state.streetViewService !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.streetViewService);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const streetViewService = new google.maps.StreetViewService();\n    this.setState(function setStreetViewService() {\n      return {\n        streetViewService\n      };\n    }, this.setStreetViewServiceCallback);\n  }\n\n  componentWillUnmount() {\n    if (this.state.streetViewService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewService);\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nStreetViewService.contextType = MapContext;\n\nclass DirectionsService extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      directionsService: null\n    };\n\n    this.setDirectionsServiceCallback = () => {\n      if (this.state.directionsService !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.directionsService);\n      }\n    };\n  }\n\n  componentDidMount() {\n    invariant_1(!!this.props.options, 'DirectionsService expected options object as parameter, but got %s', this.props.options);\n    const directionsService = new google.maps.DirectionsService();\n    this.setState(function setDirectionsService() {\n      return {\n        directionsService\n      };\n    }, this.setDirectionsServiceCallback);\n  }\n\n  componentDidUpdate() {\n    if (this.state.directionsService !== null) {\n      this.state.directionsService.route(this.props.options, this.props.callback);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.directionsService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsService);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nconst eventMap$2 = {\n  onDirectionsChanged: 'directions_changed'\n};\nconst updaterMap$2 = {\n  directions(instance, directions) {\n    instance.setDirections(directions);\n  },\n\n  map(instance, map) {\n    instance.setMap(map);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  panel(instance, panel) {\n    instance.setPanel(panel);\n  },\n\n  routeIndex(instance, routeIndex) {\n    instance.setRouteIndex(routeIndex);\n  }\n\n};\n\nclass DirectionsRenderer extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.state = {\n      directionsRenderer: null\n    };\n\n    this.setDirectionsRendererCallback = () => {\n      if (this.state.directionsRenderer !== null) {\n        this.state.directionsRenderer.setMap(this.context);\n\n        if (this.props.onLoad) {\n          this.props.onLoad(this.state.directionsRenderer);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const directionsRenderer = new google.maps.DirectionsRenderer(this.props.options);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$2,\n      eventMap: eventMap$2,\n      prevProps: {},\n      nextProps: this.props,\n      instance: directionsRenderer\n    });\n    this.setState(function setDirectionsRenderer() {\n      return {\n        directionsRenderer\n      };\n    }, this.setDirectionsRendererCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.directionsRenderer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$2,\n        eventMap: eventMap$2,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.directionsRenderer\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.directionsRenderer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsRenderer);\n      }\n\n      unregisterEvents(this.registeredEvents);\n\n      if (this.state.directionsRenderer) {\n        this.state.directionsRenderer.setMap(null);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nDirectionsRenderer.contextType = MapContext;\n\nclass DistanceMatrixService extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      distanceMatrixService: null\n    };\n\n    this.setDistanceMatrixServiceCallback = () => {\n      if (this.state.distanceMatrixService !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.distanceMatrixService);\n      }\n    };\n  }\n\n  componentDidMount() {\n    invariant_1(!!this.props.options, 'DistanceMatrixService expected options object as parameter, but go %s', this.props.options);\n    const distanceMatrixService = new google.maps.DistanceMatrixService();\n    this.setState(function setDistanceMatrixService() {\n      return {\n        distanceMatrixService\n      };\n    }, this.setDistanceMatrixServiceCallback);\n  }\n\n  componentDidUpdate() {\n    if (this.state.distanceMatrixService !== null) {\n      this.state.distanceMatrixService.getDistanceMatrix(this.props.options, this.props.callback);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.distanceMatrixService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.distanceMatrixService);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}\n\nconst eventMap$1 = {\n  onPlacesChanged: 'places_changed'\n};\nconst updaterMap$1 = {\n  bounds(instance, bounds) {\n    instance.setBounds(bounds);\n  }\n\n};\n\nclass StandaloneSearchBox extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.containerElement = React.createRef();\n    this.state = {\n      searchBox: null\n    };\n\n    this.setSearchBoxCallback = () => {\n      if (this.state.searchBox !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.searchBox);\n      }\n    };\n  }\n\n  componentDidMount() {\n    invariant_1(!!google.maps.places, 'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s', google.maps.places);\n\n    if (this.containerElement !== null && this.containerElement.current !== null) {\n      const input = this.containerElement.current.querySelector('input');\n\n      if (input !== null) {\n        const searchBox = new google.maps.places.SearchBox(input, this.props.options);\n        this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n          updaterMap: updaterMap$1,\n          eventMap: eventMap$1,\n          prevProps: {},\n          nextProps: this.props,\n          instance: searchBox\n        });\n        this.setState(function setSearchBox() {\n          return {\n            searchBox\n          };\n        }, this.setSearchBoxCallback);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.searchBox !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$1,\n        eventMap: eventMap$1,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.searchBox\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.searchBox !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.searchBox);\n      }\n\n      unregisterEvents(this.registeredEvents);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.containerElement\n    }, React.Children.only(this.props.children));\n  }\n\n}\n\nStandaloneSearchBox.contextType = MapContext;\nconst eventMap = {\n  onPlaceChanged: 'place_changed'\n};\nconst updaterMap = {\n  bounds(instance, bounds) {\n    instance.setBounds(bounds);\n  },\n\n  restrictions(instance, restrictions) {\n    instance.setComponentRestrictions(restrictions);\n  },\n\n  fields(instance, fields) {\n    instance.setFields(fields);\n  },\n\n  options(instance, options) {\n    instance.setOptions(options);\n  },\n\n  types(instance, types) {\n    instance.setTypes(types);\n  }\n\n};\n\nclass Autocomplete extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.registeredEvents = [];\n    this.containerElement = React.createRef();\n    this.state = {\n      autocomplete: null\n    };\n\n    this.setAutocompleteCallback = () => {\n      if (this.state.autocomplete !== null && this.props.onLoad) {\n        this.props.onLoad(this.state.autocomplete);\n      }\n    };\n  }\n\n  componentDidMount() {\n    invariant_1(!!google.maps.places, 'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s', google.maps.places); // TODO: why current could be equal null?\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    const input = this.containerElement.current.querySelector('input');\n\n    if (input) {\n      const autocomplete = new google.maps.places.Autocomplete(input, this.props.options);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps: {},\n        nextProps: this.props,\n        instance: autocomplete\n      });\n      this.setState(function setAutocomplete() {\n        return {\n          autocomplete\n        };\n      }, this.setAutocompleteCallback);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    unregisterEvents(this.registeredEvents);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.autocomplete\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.state.autocomplete !== null) {\n      unregisterEvents(this.registeredEvents);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.containerElement,\n      className: this.props.className || ''\n    }, React.Children.only(this.props.children));\n  }\n\n}\n\nAutocomplete.contextType = MapContext;\nexport { Autocomplete, BicyclingLayer, Circle, Data, DirectionsRenderer, DirectionsService, DistanceMatrixService, DrawingManager, GoogleMap, index_esm as GoogleMapsMarkerClusterer, GoogleMarkerClusterer, GroundOverlay, HeatmapLayer, InfoBoxComponent as InfoBox, InfoWindow, KmlLayer, LoadScript, LoadScriptNext$1 as LoadScriptNext, MapContext, Marker, ClustererComponent as MarkerClusterer, OverlayView, Polygon, Polyline, Rectangle, StandaloneSearchBox, StreetViewPanorama, StreetViewService, TrafficLayer, TransitLayer, useGoogleMap, useJsApiLoader, useLoadScript };","map":{"version":3,"sources":["/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/invariant/invariant.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/map-context.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/reduce.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/foreach.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/helper.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/GoogleMap.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/tslib/tslib.es6.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/isbrowser.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/injectscript.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/prevent-google-fonts.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/make-load-script-url.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/LoadScript.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/useLoadScript.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/LoadScriptNext.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@googlemaps/js-api-loader/dist/index.esm.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/useJsApiLoader.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/maps/TrafficLayer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/maps/BicyclingLayer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/maps/TransitLayer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/DrawingManager.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/Marker.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@react-google-maps/marker-clusterer/dist/esm.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/addons/MarkerClusterer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@react-google-maps/infobox/dist/esm.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/addons/InfoBox.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@turf/helpers/dist/es/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@turf/clone/dist/es/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@turf/meta/dist/es/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/skmeans/dist/node/distance.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/skmeans/dist/node/kinit.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/skmeans/dist/node/main.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@turf/clusters-kmeans/dist/es/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@turf/invariant/dist/es/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@turf/distance/dist/es/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/density-clustering/lib/DBSCAN.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/density-clustering/lib/KMEANS.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/density-clustering/lib/PriorityQueue.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/density-clustering/lib/OPTICS.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/density-clustering/lib/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@turf/clusters-dbscan/dist/es/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/supercluster/dist/supercluster.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/fast-deep-equal/es6/index.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/node_modules/@googlemaps/markerclusterer/dist/index.esm.js","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/addons/GoogleMarkerClusterer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/InfoWindow.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/Polyline.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/Polygon.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/Rectangle.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/Circle.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/drawing/Data.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/kml/KmlLayer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/dom/dom-helper.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/dom/OverlayView.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/utils/noop.ts","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/overlays/GroundOverlay.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/heatmap/HeatmapLayer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/streetview/StreetViewPanorama.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/streetview/StreetViewService.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/directions/DirectionsService.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/directions/DirectionsRenderer.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/distance-matrix/DistanceMatrixService.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/places/StandaloneSearchBox.tsx","/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/node_modules/@react-google-maps/api/src/components/places/Autocomplete.tsx"],"names":["invariant","eventMap","updaterMap","__rest","Cluster","GoogleMapsInfoBox","distance","Distance","require$$0","eudist","require$$1","skmeans","PriorityQueue","require$$2","require$$3","this","noop","equal"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { useContext, createContext } from 'react'\nimport invariant from 'invariant'\n\nconst MapContext = createContext<google.maps.Map | null>(null)\n\nexport function useGoogleMap(): google.maps.Map | null {\n  invariant(!!useContext, 'useGoogleMap is React hook and requires React version 16.8+')\n\n  const map = useContext(MapContext)\n\n  invariant(!!map, 'useGoogleMap needs a GoogleMap available up in the tree')\n\n  return map\n}\n\nexport default MapContext\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const reduce = (obj: any, fn: any, acc: any): any => {\n  return Object.keys(obj).reduce(function reducer(newAcc, key) {\n    return fn(newAcc, obj[key], key)\n  }, acc)\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function forEach(obj: any, fn: any): any {\n  Object.keys(obj).forEach(function iterator(key) {\n    return fn(obj[key], key)\n  })\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { reduce } from './reduce'\nimport { forEach } from './foreach'\n\nexport const applyUpdaterToNextProps = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updaterMap: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  prevProps: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  nextProps: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const map: any = {}\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const iter = (fn: any, key: string): void => {\n    const nextValue = nextProps[key]\n\n    if (nextValue !== prevProps[key]) {\n      map[key] = nextValue\n      fn(instance, nextValue)\n    }\n  }\n\n  forEach(updaterMap, iter)\n\n  return map\n}\n\nexport function registerEvents(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any,\n  eventMap: Record<string, string>\n): google.maps.MapsEventListener[] {\n  const registeredList = reduce(\n    eventMap,\n    function reducer(\n      acc: google.maps.MapsEventListener[],\n      googleEventName: string,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onEventName: any\n    ): google.maps.MapsEventListener[] {\n      if (typeof props[onEventName] === 'function') {\n        acc.push(google.maps.event.addListener(instance, googleEventName, props[onEventName]))\n      }\n\n      return acc\n    },\n    []\n  )\n\n  return registeredList\n}\nfunction unregisterEvent(registered: google.maps.MapsEventListener): void {\n  google.maps.event.removeListener(registered)\n}\n\nexport function unregisterEvents(events: google.maps.MapsEventListener[] = []): void {\n  events.forEach(unregisterEvent)\n}\n\nexport function applyUpdatersToPropsAndRegisterEvents({\n  updaterMap,\n  eventMap,\n  prevProps,\n  nextProps,\n  instance,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updaterMap: any\n  eventMap: Record<string, string>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  prevProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  nextProps: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  instance: any\n}): google.maps.MapsEventListener[] {\n  const registeredEvents = registerEvents(nextProps, instance, eventMap)\n  applyUpdaterToNextProps(updaterMap, prevProps, nextProps, instance)\n  return registeredEvents\n}\n","import * as React from 'react'\n\nimport MapContext from './map-context'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from './utils/helper'\n\nconst eventMap = {\n  onDblClick: 'dblclick',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseDown: 'mousedown',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n  onTilesLoaded: 'tilesloaded',\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDrag: 'drag',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onProjectionChanged: 'projection_changed',\n  onResize: 'resize',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n}\n\nconst updaterMap = {\n  extraMapTypes(map: google.maps.Map, extra: google.maps.MapType[]): void {\n    extra.forEach(function forEachExtra(it, i) {\n      map.mapTypes.set(String(i), it)\n    })\n  },\n  center(map: google.maps.Map, center: google.maps.LatLng | google.maps.LatLngLiteral): void {\n    map.setCenter(center)\n  },\n  clickableIcons(map: google.maps.Map, clickable: boolean): void {\n    map.setClickableIcons(clickable)\n  },\n  heading(map: google.maps.Map, heading: number): void {\n    map.setHeading(heading)\n  },\n  mapTypeId(map: google.maps.Map, mapTypeId: string): void {\n    map.setMapTypeId(mapTypeId)\n  },\n  options(map: google.maps.Map, options: google.maps.MapOptions): void {\n    map.setOptions(options)\n  },\n  streetView(map: google.maps.Map, streetView: google.maps.StreetViewPanorama): void {\n    map.setStreetView(streetView)\n  },\n  tilt(map: google.maps.Map, tilt: number): void {\n    map.setTilt(tilt)\n  },\n  zoom(map: google.maps.Map, zoom: number): void {\n    map.setZoom(zoom)\n  },\n}\n\ninterface GoogleMapState {\n  map: google.maps.Map | null\n}\n\nexport interface GoogleMapProps {\n  children?: React.ReactNode\n  id?: string\n  mapContainerStyle?: React.CSSProperties\n  mapContainerClassName?: string\n  options?: google.maps.MapOptions\n  /** Additional map types to overlay. Overlay map types will display on top of the base map they are attached to, in the order in which they appear in the overlayMapTypes array (overlays with higher index values are displayed in front of overlays with lower index values). */\n  extraMapTypes?: google.maps.MapType[]\n  /** The initial Map center. */\n  center?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** When false, map icons are not clickable. A map icon represents a point of interest, also known as a POI. By default map icons are clickable. */\n  clickableIcons?: boolean\n  /** The heading for aerial imagery in degrees measured clockwise from cardinal direction North. Headings are snapped to the nearest available angle for which imagery is available. */\n  heading?: number\n  /** The initial Map mapTypeId. Defaults to ROADMAP. */\n  mapTypeId?: string\n  /** A StreetViewPanorama to display when the Street View pegman is dropped on the map. If no panorama is specified, a default StreetViewPanorama will be displayed in the map's div when the pegman is dropped. */\n  streetView?: google.maps.StreetViewPanorama\n  /** Controls the automatic switching behavior for the angle of incidence of the map. The only allowed values are 0 and 45. The value 0 causes the map to always use a 0° overhead view regardless of the zoom level and viewport. The value 45 causes the tilt angle to automatically switch to 45 whenever 45° imagery is available for the current zoom level and viewport, and switch back to 0 whenever 45° imagery is not available (this is the default behavior). 45° imagery is only available for satellite and hybrid map types, within some locations, and at some zoom levels. Note: getTilt returns the current tilt angle, not the value specified by this option. Because getTilt and this option refer to different things, do not bind() the tilt property; doing so may yield unpredictable effects. */\n  tilt?: number\n  /** The initial Map zoom level. Required. Valid values: Integers between zero, and up to the supported maximum zoom level. */\n  zoom?: number\n  /** This event is fired when the user clicks on the map. An ApiMouseEvent with properties for the clicked location is returned unless a place icon was clicked, in which case an IconMouseEvent with a placeId is returned. IconMouseEvent and ApiMouseEvent are identical, except that IconMouseEvent has the placeId field. The event can always be treated as an ApiMouseEvent when the placeId is not important. The click event is not fired if a Marker or InfoWindow was clicked. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user double-clicks on the map. Note that the click event will also fire, right before this one. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the map. */\n  onDrag?: () => void\n  /** This event is fired when the user stops dragging the map. */\n  onDragEnd?: () => void\n  /** This event is fired when the user starts dragging the map. */\n  onDragStart?: () => void\n  /** This event is fired when the mapTypeId property changes. */\n  onMapTypeIdChanged?: () => void\n  /** This event is fired whenever the user's mouse moves over the map container. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user's mouse exits the map container. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user's mouse enters the map container. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM contextmenu event is fired on the map container. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the visible tiles have finished loading. */\n  onTilesLoaded?: () => void\n  /** This event is fired when the viewport bounds have changed. */\n  onBoundsChanged?: () => void\n  /** This event is fired when the map center property changes. */\n  onCenterChanged?: () => void\n  /** This event is fired when the map heading property changes. */\n  onHeadingChanged?: () => void\n  /** This event is fired when the map becomes idle after panning or zooming. */\n  onIdle?: () => void\n  /** This event is fired when the projection has changed. */\n  onProjectionChanged?: () => void\n  /** This event is fired when the map size has changed. */\n  onResize?: () => void\n  /** This event is fired when the map tilt property changes. */\n  onTiltChanged?: () => void\n  /** This event is fired when the map zoom property changes. */\n  onZoomChanged?: () => void\n  /** This callback is called when the map instance has loaded. It is called with the map instance. */\n  onLoad?: (map: google.maps.Map) => void | Promise<void>\n  /** This callback is called when the component unmounts. It is called with the map instance. */\n  onUnmount?: (map: google.maps.Map) => void | Promise<void>\n}\n\n// function GoogleMapFunctional({ children, options, id, mapContainerStyle, center, clickableIcons, extraMapTypes, heading, mapContainerClassName, mapTypeId, onBoundsChanged, onCenterChanged, onClick, onDblClick, onDrag, onDragEnd, onDragStart, onHeadingChanged, onIdle, onProjectionChanged, onResize, onTiltChanged, onLoad }: GoogleMapProps): JSX.Element {\n//   const [map, setMap] = React.useState<google.maps.Map | null>(null)\n//   const ref = React.useRef<HTMLDivElement | null>(null)\n\n//   const getInstance = React.useCallback(() => {\n//     if (ref.current === null) {\n//       return null\n//     }\n\n//     return new google.maps.Map(ref.current, options)\n//   }, [options])\n\n//   React.useEffect(() => {\n\n//   }, [])\n\n//   const panTo = React.useCallback((latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n//     const map = getInstance()\n//     if (map) {\n//       map.panTo(latLng)\n//     }\n//   }, [])\n\n//   React.useEffect(() => {\n//     const map = getInstance()\n\n\n\n//   }, [])\n\n//   return (\n//     <div\n//         id={id}\n//         ref={ref}\n//         style={mapContainerStyle}\n//         className={mapContainerClassName}\n//       >\n//         <MapContext.Provider value={map}>\n//           {map !== null ? children : <></>}\n//         </MapContext.Provider>\n//       </div>\n//   )\n// }\n\nexport class GoogleMap extends React.PureComponent<GoogleMapProps, GoogleMapState> {\n  state: GoogleMapState = {\n    map: null,\n  }\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  mapRef: Element | null = null\n\n  getInstance = (): google.maps.Map | null => {\n    if (this.mapRef === null) {\n      return null\n    }\n\n    return new google.maps.Map(this.mapRef, this.props.options)\n  }\n\n  panTo = (latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n    const map = this.getInstance()\n    if (map) {\n      map.panTo(latLng)\n    }\n  }\n\n  setMapCallback = (): void => {\n    if (this.state.map !== null) {\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.map)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const map = this.getInstance()\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: map,\n    })\n\n    this.setState(function setMap() {\n      return {\n        map,\n      }\n    }, this.setMapCallback)\n  }\n\n  componentDidUpdate(prevProps: GoogleMapProps): void {\n    if (this.state.map !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.map,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.map !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.map)\n      }\n\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  getRef = (ref: HTMLDivElement | null): void => {\n    this.mapRef = ref\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div\n        id={this.props.id}\n        ref={this.getRef}\n        style={this.props.mapContainerStyle}\n        className={this.props.mapContainerClassName}\n      >\n        <MapContext.Provider value={this.state.map}>\n          {this.state.map !== null ? this.props.children : <></>}\n        </MapContext.Provider>\n      </div>\n    )\n  }\n}\n\nexport default GoogleMap\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export const isBrowser: boolean = typeof document !== 'undefined'\n","import { isBrowser } from './isbrowser'\n\ninterface WindowWithGoogleMap extends Window {\n  initMap?: () => void\n}\n\ninterface InjectScriptArg {\n  url: string\n  id: string\n  nonce?: string\n}\n\nexport const injectScript = ({ url, id, nonce }: InjectScriptArg): Promise<any> => {\n  if (!isBrowser) {\n    return Promise.reject(new Error('document is undefined'))\n  }\n\n  return new Promise(function injectScriptCallback(resolve, reject) {\n    const existingScript = document.getElementById(id) as HTMLScriptElement | undefined\n    const windowWithGoogleMap: WindowWithGoogleMap = window\n    if (existingScript) {\n      // Same script id/url: keep same script\n      const dataStateAttribute = existingScript.getAttribute('data-state')\n      if (existingScript.src === url && dataStateAttribute !== 'error') {\n        if (dataStateAttribute === 'ready') {\n          return resolve(id)\n        } else {\n          const originalInitMap = windowWithGoogleMap.initMap\n          const originalErrorCallback = existingScript.onerror\n\n          windowWithGoogleMap.initMap = function initMap(): void {\n            if (originalInitMap) {\n              originalInitMap()\n            }\n            resolve(id)\n          }\n\n          existingScript.onerror = function(err): void {\n            if (originalErrorCallback) {\n              originalErrorCallback(err)\n            }\n            reject(err)\n          }\n\n          return\n        }\n      }\n      // Same script id, but either\n      // 1. requested URL is different\n      // 2. script failed to load\n      else {\n        existingScript.remove()\n      }\n    }\n\n    const script = document.createElement('script')\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.id = id\n    script.async = true\n    script.nonce = nonce\n    script.onerror = function onerror(err): void {\n      script.setAttribute('data-state', 'error')\n      reject(err)\n    }\n\n    windowWithGoogleMap.initMap = function onload(): void {\n      script.setAttribute('data-state', 'ready')\n      resolve(id)\n    }\n\n    document.head.appendChild(script)\n  }).catch(err => {\n    console.error('injectScript error: ', err)\n    throw err\n  })\n}\n","const isRobotoStyle = (element: HTMLElement): boolean => {\n  // roboto font download\n  if (\n    (element as HTMLLinkElement).href &&\n    (element as HTMLLinkElement).href.indexOf('https://fonts.googleapis.com/css?family=Roboto') ===\n      0\n  ) {\n    return true\n  }\n  // roboto style elements\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText.replace('\\r\\n', '').indexOf('.gm-style') === 0\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText = ''\n    return true\n  }\n  // roboto style elements for other browsers\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    element.innerHTML &&\n    element.innerHTML.replace('\\r\\n', '').indexOf('.gm-style') === 0\n  ) {\n    element.innerHTML = ''\n    return true\n  }\n  // when google tries to add empty style\n  if (\n    element.tagName.toLowerCase() === 'style' &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    !element.styleSheet &&\n    !element.innerHTML\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// Preventing the Google Maps library from downloading an extra font\nexport const preventGoogleFonts = (): void => {\n  // we override these methods only for one particular head element\n  // default methods for other elements are not affected\n  const head = document.getElementsByTagName('head')[0]\n\n  const trueInsertBefore = head.insertBefore.bind(head)\n\n  // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  head.insertBefore = function insertBefore(\n    newElement: HTMLElement,\n    referenceElement: HTMLElement\n  ): void {\n    if (!isRobotoStyle(newElement)) {\n      Reflect.apply(trueInsertBefore, head, [newElement, referenceElement])\n    }\n  }\n\n  const trueAppend = head.appendChild.bind(head)\n\n  // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  head.appendChild = function appendChild(textNode: HTMLElement): void {\n    if (!isRobotoStyle(textNode)) {\n      Reflect.apply(trueAppend, head, [textNode])\n    }\n  }\n}\n","import invariant from 'invariant'\n\nexport type Libraries = (\"drawing\" | \"geometry\" | \"localContext\" | \"places\" | \"visualization\")[]\n\nexport interface LoadScriptUrlOptions {\n  googleMapsApiKey: string | \"\"\n  googleMapsClientId?: string\n  version?: string\n  language?: string\n  region?: string\n  libraries?: Libraries\n  channel?: string\n  mapIds?: string[]\n}\n\nexport function makeLoadScriptUrl({\n  googleMapsApiKey,\n  googleMapsClientId,\n  version = 'weekly',\n  language,\n  region,\n  libraries,\n  channel,\n  mapIds\n}: LoadScriptUrlOptions): string {\n  const params = []\n\n  invariant(\n    (googleMapsApiKey && googleMapsClientId) || !(googleMapsApiKey && googleMapsClientId),\n    'You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time.'\n  )\n\n  if (googleMapsApiKey) {\n    params.push(`key=${googleMapsApiKey}`)\n  } else if (googleMapsClientId) {\n    params.push(`client=${googleMapsClientId}`)\n  }\n\n  if (version) {\n    params.push(`v=${version}`)\n  }\n\n  if (language) {\n    params.push(`language=${language}`)\n  }\n\n  if (region) {\n    params.push(`region=${region}`)\n  }\n\n  if (libraries && libraries.length) {\n    params.push(`libraries=${libraries.sort().join(',')}`)\n  }\n\n  if (channel) {\n    params.push(`channel=${channel}`)\n  }\n\n  if (mapIds && mapIds.length) {\n    params.push(`map_ids=${mapIds.join(',')}`)\n  }\n\n  params.push('callback=initMap')\n\n  return `https://maps.googleapis.com/maps/api/js?${params.join('&')}`\n}\n","import * as React from 'react'\nimport invariant from 'invariant'\n\nimport { injectScript } from './utils/injectscript'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { LoadScriptUrlOptions, makeLoadScriptUrl } from './utils/make-load-script-url'\n\nlet cleaningUp = false\n\ninterface LoadScriptState {\n  loaded: boolean\n}\n\nexport interface LoadScriptProps extends LoadScriptUrlOptions {\n  id: string\n  nonce?: string\n  loadingElement?: React.ReactNode\n  onLoad?: () => void\n  onError?: (error: Error) => void\n  onUnmount?: () => void\n  preventGoogleFontsLoading?: boolean\n}\n\nexport function DefaultLoadingElement(): JSX.Element {\n  return <div>{`Loading...`}</div>\n}\n\nexport const defaultLoadScriptProps = {\n  id: 'script-loader',\n  version: 'weekly',\n}\n\nclass LoadScript extends React.PureComponent<LoadScriptProps, LoadScriptState> {\n  public static defaultProps = defaultLoadScriptProps\n\n  check: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state = {\n    loaded: false,\n  }\n\n  cleanupCallback = (): void => {\n    // @ts-ignore\n    delete window.google.maps\n\n    this.injectScript()\n  }\n\n  componentDidMount(): void {\n    if (isBrowser) {\n      if (window.google && window.google.maps && !cleaningUp) {\n        console.error('google api is already presented')\n\n        return\n      }\n\n      this.isCleaningUp()\n        .then(this.injectScript)\n        .catch(function error(err) {\n          console.error('Error at injecting script after cleaning up: ', err)\n        })\n    }\n  }\n\n  componentDidUpdate(prevProps: LoadScriptProps): void {\n    if (this.props.libraries !== prevProps.libraries) {\n      console.warn(\n        'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n      )\n    }\n\n    if (isBrowser && prevProps.language !== this.props.language) {\n      this.cleanup()\n      // TODO: refactor to use gDSFP maybe... wait for hooks refactoring.\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState(function setLoaded() {\n        return {\n          loaded: false,\n        }\n      }, this.cleanupCallback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (isBrowser) {\n      this.cleanup()\n\n      const timeoutCallback = (): void => {\n        if (!this.check.current) {\n          // @ts-ignore\n          delete window.google\n          cleaningUp = false\n        }\n      }\n\n      window.setTimeout(timeoutCallback, 1)\n\n      if (this.props.onUnmount) {\n        this.props.onUnmount()\n      }\n    }\n  }\n\n  isCleaningUp = async (): Promise<void> => {\n    function promiseCallback(resolve: () => void): void {\n      if (!cleaningUp) {\n        resolve()\n      } else {\n        if (isBrowser) {\n          const timer = window.setInterval(function interval() {\n            if (!cleaningUp) {\n              window.clearInterval(timer)\n\n              resolve()\n            }\n          }, 1)\n        }\n      }\n\n      return\n    }\n\n    return new Promise(promiseCallback)\n  }\n\n  cleanup = (): void => {\n    cleaningUp = true\n    const script = document.getElementById(this.props.id)\n\n    if (script && script.parentNode) {\n      script.parentNode.removeChild(script)\n    }\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('script'))\n      .filter(function filter(script: HTMLScriptElement): boolean {\n        return typeof script.src === 'string' && script.src.includes('maps.googleapis')\n      })\n      .forEach(function forEach(script: HTMLScriptElement): void {\n        if (script.parentNode) {\n          script.parentNode.removeChild(script)\n        }\n      })\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('link'))\n      .filter(function filter(link: HTMLLinkElement): boolean {\n        return (\n          link.href === 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans'\n        )\n      })\n      .forEach(function forEach(link: HTMLLinkElement) {\n        if (link.parentNode) {\n          link.parentNode.removeChild(link)\n        }\n      })\n\n    Array.prototype.slice\n      .call(document.getElementsByTagName('style'))\n      .filter(function filter(style: HTMLStyleElement): boolean {\n        return (\n          style.innerText !== undefined &&\n          style.innerText.length > 0 &&\n          style.innerText.includes('.gm-')\n        )\n      })\n      .forEach(function forEach(style: HTMLStyleElement) {\n        if (style.parentNode) {\n          style.parentNode.removeChild(style)\n        }\n      })\n  }\n\n  injectScript = (): void => {\n    if (this.props.preventGoogleFontsLoading) {\n      preventGoogleFonts()\n    }\n\n    invariant(!!this.props.id, 'LoadScript requires \"id\" prop to be a string: %s', this.props.id)\n\n    const injectScriptOptions = {\n      id: this.props.id,\n      nonce: this.props.nonce,\n      url: makeLoadScriptUrl(this.props),\n    }\n\n    injectScript(injectScriptOptions)\n      .then(() => {\n        if (this.props.onLoad) {\n          this.props.onLoad()\n        }\n\n        this.setState(function setLoaded() {\n          return {\n            loaded: true,\n          }\n        })\n\n        return\n      })\n      .catch(err => {\n        if (this.props.onError) {\n          this.props.onError(err)\n        }\n\n        console.error(`\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${this\n            .props.googleMapsApiKey || '-'}) or Client ID (${this.props.googleMapsClientId ||\n            '-'}) to <LoadScript />\n          Otherwise it is a Network issue.\n        `)\n      })\n  }\n\n  render(): React.ReactNode {\n    return (\n      <>\n        <div ref={this.check} />\n\n        {this.state.loaded\n          ? this.props.children\n          : this.props.loadingElement || <DefaultLoadingElement />}\n      </>\n    )\n  }\n}\n\nexport default LoadScript\n","/* eslint-disable filenames/match-regex */\nimport * as React from 'react'\nimport invariant from 'invariant'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { injectScript } from './utils/injectscript'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\nimport { makeLoadScriptUrl, LoadScriptUrlOptions } from './utils/make-load-script-url'\n\nimport { defaultLoadScriptProps } from './LoadScript'\n\nexport interface UseLoadScriptOptions extends LoadScriptUrlOptions {\n  id?: string\n  nonce?: string\n  preventGoogleFontsLoading?: boolean\n}\n\nlet previouslyLoadedUrl: string\n\nexport function useLoadScript({\n  id = defaultLoadScriptProps.id,\n  version = defaultLoadScriptProps.version,\n  nonce,\n  googleMapsApiKey,\n  googleMapsClientId,\n  language,\n  region,\n  libraries,\n  preventGoogleFontsLoading,\n  channel,\n  mapIds,\n}: UseLoadScriptOptions): {\n  isLoaded: boolean\n  loadError: Error | undefined\n  url: string\n} {\n  const isMounted = React.useRef(false)\n  const [isLoaded, setLoaded] = React.useState(false)\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined)\n\n  React.useEffect(function trackMountedState() {\n    isMounted.current = true\n    return (): void => {\n      isMounted.current = false\n    }\n  }, [])\n\n  React.useEffect(\n    function applyPreventGoogleFonts() {\n      if (isBrowser && preventGoogleFontsLoading) {\n        preventGoogleFonts()\n      }\n    },\n    [preventGoogleFontsLoading]\n  )\n\n  React.useEffect(\n    function validateLoadedState() {\n      if (isLoaded) {\n        invariant(\n          !!window.google,\n          'useLoadScript was marked as loaded, but window.google is not present. Something went wrong.'\n        )\n      }\n    },\n    [isLoaded]\n  )\n\n  const url = makeLoadScriptUrl({\n    version,\n    googleMapsApiKey,\n    googleMapsClientId,\n    language,\n    region,\n    libraries,\n    channel,\n    mapIds\n  })\n\n  React.useEffect(\n    function loadScriptAndModifyLoadedState() {\n      if (!isBrowser) {\n        return\n      }\n\n      function setLoadedIfMounted(): void {\n        if (isMounted.current) {\n          setLoaded(true)\n          previouslyLoadedUrl = url\n        }\n      }\n\n      if (window.google && window.google.maps && previouslyLoadedUrl === url) {\n        setLoadedIfMounted()\n        return\n      }\n\n      injectScript({ id, url, nonce })\n        .then(setLoadedIfMounted)\n        .catch(function handleInjectError(err) {\n          if (isMounted.current) {\n            setLoadError(err)\n          }\n          console.warn(`\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${googleMapsApiKey ||\n          '-'}) or Client ID (${googleMapsClientId || '-'})\n        Otherwise it is a Network issue.\n      `)\n          console.error(err)\n        })\n    },\n    [id, url, nonce]\n  )\n\n  const prevLibraries = React.useRef<undefined | string[]>()\n\n  React.useEffect(\n    function checkPerformance() {\n      if (prevLibraries.current && libraries !== prevLibraries.current) {\n        console.warn(\n          'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n        )\n      }\n      prevLibraries.current = libraries\n    },\n    [libraries]\n  )\n\n  return { isLoaded, loadError, url }\n}\n","import * as React from 'react'\n\nimport { DefaultLoadingElement } from './LoadScript'\nimport { useLoadScript, UseLoadScriptOptions } from './useLoadScript'\n\nexport interface LoadScriptNextProps extends UseLoadScriptOptions {\n  loadingElement?: React.ReactElement\n  onLoad?: () => void\n  onError?: (error: Error) => void\n  onUnmount?: () => void\n  children: React.ReactElement\n}\n\nconst defaultLoadingElement = <DefaultLoadingElement />\n\nfunction LoadScriptNext({\n  loadingElement,\n  onLoad,\n  onError,\n  onUnmount,\n  children,\n  ...hookOptions\n}: LoadScriptNextProps): JSX.Element {\n  const { isLoaded, loadError } = useLoadScript(hookOptions)\n\n  React.useEffect(\n    function handleOnLoad() {\n      if (isLoaded && typeof onLoad === 'function') {\n        onLoad()\n      }\n    },\n    [isLoaded, onLoad]\n  )\n\n  React.useEffect(\n    function handleOnError() {\n      if (loadError && typeof onError === 'function') {\n        onError(loadError)\n      }\n    },\n    [loadError, onError]\n  )\n\n  React.useEffect(\n    function handleOnUnmount() {\n      return () => {\n        if (onUnmount) {\n          onUnmount()\n        }\n      }\n    },\n    [onUnmount]\n  )\n\n  return isLoaded ? children : loadingElement || defaultLoadingElement\n}\n\nexport default React.memo(LoadScriptNext)\n","// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at.\r\n *\r\n *      Http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ID = \"__googleMapsScriptId\";\r\n/**\r\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\r\n * dynamically using\r\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\r\n * It works by dynamically creating and appending a script node to the the\r\n * document head and wrapping the callback function so as to return a promise.\r\n *\r\n * ```\r\n * const loader = new Loader({\r\n *   apiKey: \"\",\r\n *   version: \"weekly\",\r\n *   libraries: [\"places\"]\r\n * });\r\n *\r\n * loader.load().then((google) => {\r\n *   const map = new google.maps.Map(...)\r\n * })\r\n * ```\r\n */\r\nclass Loader {\r\n    /**\r\n     * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\r\n     * using this library, instead the defaults are set by the Google Maps\r\n     * JavaScript API server.\r\n     *\r\n     * ```\r\n     * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\r\n     * ```\r\n     */\r\n    constructor({ apiKey, channel, client, id = DEFAULT_ID, libraries = [], language, region, version, mapIds, nonce, retries = 3, url = \"https://maps.googleapis.com/maps/api/js\", }) {\r\n        this.CALLBACK = \"__googleMapsCallback\";\r\n        this.callbacks = [];\r\n        this.done = false;\r\n        this.loading = false;\r\n        this.errors = [];\r\n        this.version = version;\r\n        this.apiKey = apiKey;\r\n        this.channel = channel;\r\n        this.client = client;\r\n        this.id = id || DEFAULT_ID; // Do not allow empty string\r\n        this.libraries = libraries;\r\n        this.language = language;\r\n        this.region = region;\r\n        this.mapIds = mapIds;\r\n        this.nonce = nonce;\r\n        this.retries = retries;\r\n        this.url = url;\r\n        if (Loader.instance) {\r\n            if (!fastDeepEqual(this.options, Loader.instance.options)) {\r\n                throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\r\n            }\r\n            return Loader.instance;\r\n        }\r\n        Loader.instance = this;\r\n    }\r\n    get options() {\r\n        return {\r\n            version: this.version,\r\n            apiKey: this.apiKey,\r\n            channel: this.channel,\r\n            client: this.client,\r\n            id: this.id,\r\n            libraries: this.libraries,\r\n            language: this.language,\r\n            region: this.region,\r\n            mapIds: this.mapIds,\r\n            nonce: this.nonce,\r\n            url: this.url,\r\n        };\r\n    }\r\n    get failed() {\r\n        return this.done && !this.loading && this.errors.length >= this.retries + 1;\r\n    }\r\n    /**\r\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\r\n     *\r\n     * @ignore\r\n     */\r\n    createUrl() {\r\n        let url = this.url;\r\n        url += `?callback=${this.CALLBACK}`;\r\n        if (this.apiKey) {\r\n            url += `&key=${this.apiKey}`;\r\n        }\r\n        if (this.channel) {\r\n            url += `&channel=${this.channel}`;\r\n        }\r\n        if (this.client) {\r\n            url += `&client=${this.client}`;\r\n        }\r\n        if (this.libraries.length > 0) {\r\n            url += `&libraries=${this.libraries.join(\",\")}`;\r\n        }\r\n        if (this.language) {\r\n            url += `&language=${this.language}`;\r\n        }\r\n        if (this.region) {\r\n            url += `&region=${this.region}`;\r\n        }\r\n        if (this.version) {\r\n            url += `&v=${this.version}`;\r\n        }\r\n        if (this.mapIds) {\r\n            url += `&map_ids=${this.mapIds.join(\",\")}`;\r\n        }\r\n        return url;\r\n    }\r\n    deleteScript() {\r\n        const script = document.getElementById(this.id);\r\n        if (script) {\r\n            script.remove();\r\n        }\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     */\r\n    load() {\r\n        return this.loadPromise();\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     *\r\n     * @ignore\r\n     */\r\n    loadPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadCallback((err) => {\r\n                if (!err) {\r\n                    resolve(window.google);\r\n                }\r\n                else {\r\n                    reject(err.error);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script with a callback.\r\n     */\r\n    loadCallback(fn) {\r\n        this.callbacks.push(fn);\r\n        this.execute();\r\n    }\r\n    /**\r\n     * Set the script on document.\r\n     */\r\n    setScript() {\r\n        if (document.getElementById(this.id)) {\r\n            // TODO wrap onerror callback for cases where the script was loaded elsewhere\r\n            this.callback();\r\n            return;\r\n        }\r\n        const url = this.createUrl();\r\n        const script = document.createElement(\"script\");\r\n        script.id = this.id;\r\n        script.type = \"text/javascript\";\r\n        script.src = url;\r\n        script.onerror = this.loadErrorCallback.bind(this);\r\n        script.defer = true;\r\n        script.async = true;\r\n        if (this.nonce) {\r\n            script.nonce = this.nonce;\r\n        }\r\n        document.head.appendChild(script);\r\n    }\r\n    /**\r\n     * Reset the loader state.\r\n     */\r\n    reset() {\r\n        this.deleteScript();\r\n        this.done = false;\r\n        this.loading = false;\r\n        this.errors = [];\r\n        this.onerrorEvent = null;\r\n    }\r\n    resetIfRetryingFailed() {\r\n        if (this.failed) {\r\n            this.reset();\r\n        }\r\n    }\r\n    loadErrorCallback(e) {\r\n        this.errors.push(e);\r\n        if (this.errors.length <= this.retries) {\r\n            const delay = this.errors.length * Math.pow(2, this.errors.length);\r\n            console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\r\n            setTimeout(() => {\r\n                this.deleteScript();\r\n                this.setScript();\r\n            }, delay);\r\n        }\r\n        else {\r\n            this.onerrorEvent = e;\r\n            this.callback();\r\n        }\r\n    }\r\n    setCallback() {\r\n        window.__googleMapsCallback = this.callback.bind(this);\r\n    }\r\n    callback() {\r\n        this.done = true;\r\n        this.loading = false;\r\n        this.callbacks.forEach((cb) => {\r\n            cb(this.onerrorEvent);\r\n        });\r\n        this.callbacks = [];\r\n    }\r\n    execute() {\r\n        this.resetIfRetryingFailed();\r\n        if (this.done) {\r\n            this.callback();\r\n        }\r\n        else {\r\n            // short circuit and warn if google.maps is already loaded\r\n            if (window.google && window.google.maps && window.google.maps.version) {\r\n                console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\r\n                    \"This may result in undesirable behavior as options and script parameters may not match.\");\r\n                this.callback();\r\n                return;\r\n            }\r\n            if (this.loading) ;\r\n            else {\r\n                this.loading = true;\r\n                this.setCallback();\r\n                this.setScript();\r\n            }\r\n        }\r\n    }\r\n}\n\nexport { DEFAULT_ID, Loader };\n//# sourceMappingURL=index.esm.js.map\n","/* eslint-disable filenames/match-regex */\nimport * as React from 'react'\nimport { Loader } from '@googlemaps/js-api-loader'\n\nimport { isBrowser } from './utils/isbrowser'\nimport { preventGoogleFonts } from './utils/prevent-google-fonts'\nimport { LoadScriptUrlOptions, Libraries } from './utils/make-load-script-url'\n\nimport { defaultLoadScriptProps } from './LoadScript'\n\nexport interface UseLoadScriptOptions extends LoadScriptUrlOptions {\n  id?: string\n  nonce?: string\n  preventGoogleFontsLoading?: boolean\n}\n\nexport function useJsApiLoader({\n  id = defaultLoadScriptProps.id,\n  version = defaultLoadScriptProps.version,\n  nonce,\n  googleMapsApiKey,\n  // googleMapsClientId,\n  language,\n  region,\n  libraries,\n  preventGoogleFontsLoading,\n  // channel,\n  mapIds,\n}: UseLoadScriptOptions): {\n  isLoaded: boolean\n  loadError: Error | undefined\n} {\n  const isMounted = React.useRef(false)\n  const [isLoaded, setLoaded] = React.useState(false)\n  const [loadError, setLoadError] = React.useState<Error | undefined>(undefined)\n\n  React.useEffect(function trackMountedState() {\n    isMounted.current = true\n    return (): void => {\n      isMounted.current = false\n    }\n  }, [])\n\n  const loader = React.useMemo(function memo() {\n    return new Loader({\n      id,\n      apiKey: googleMapsApiKey,\n      version,\n      libraries,\n      language,\n      region,\n      mapIds,\n      nonce,\n    })\n  }, [id, googleMapsApiKey, version, libraries, language, region, mapIds, nonce])\n\n  React.useEffect(function effect() {\n    if (isLoaded) {\n      return\n    } else {\n      loader.load().then(function then() {\n        if (isMounted.current) setLoaded(true)\n      })\n      .catch(function onrejected(error) {\n        setLoadError(error)\n      })\n    }\n  }, [])\n\n\n  React.useEffect(\n    function applyPreventGoogleFonts() {\n      if (isBrowser && preventGoogleFontsLoading) {\n        preventGoogleFonts()\n      }\n    },\n    [preventGoogleFontsLoading]\n  )\n\n  const prevLibraries = React.useRef<undefined | Libraries>()\n\n  React.useEffect(\n    function effect() {\n      if (prevLibraries.current && libraries !== prevLibraries.current) {\n        console.warn(\n          'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n        )\n      }\n      prevLibraries.current = libraries\n    },\n    [libraries]\n  )\n\n  return { isLoaded, loadError }\n}\n","import { PureComponent } from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {}\n\nconst updaterMap = {\n  options(instance: google.maps.TrafficLayer, options: google.maps.TrafficLayerOptions): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface TrafficLayerState {\n  trafficLayer: google.maps.TrafficLayer | null\n}\n\nexport interface TrafficLayerProps {\n  options?: google.maps.TrafficLayerOptions\n  /** This callback is called when the trafficLayer instance has loaded. It is called with the trafficLayer instance. */\n  onLoad?: (trafficLayer: google.maps.TrafficLayer) => void\n  /** This callback is called when the component unmounts. It is called with the trafficLayer instance. */\n  onUnmount?: (trafficLayer: google.maps.TrafficLayer) => void\n}\n\nexport class TrafficLayer extends PureComponent<TrafficLayerProps, TrafficLayerState> {\n  static contextType = MapContext\n\n  state = {\n    trafficLayer: null,\n  }\n\n  setTrafficLayerCallback = () => {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.trafficLayer)\n      }\n    }\n  }\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  componentDidMount(): void {\n    const trafficLayer = new google.maps.TrafficLayer({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: trafficLayer,\n    })\n\n    this.setState(function setTrafficLayer() {\n      return {\n        trafficLayer,\n      }\n    }, this.setTrafficLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: TrafficLayerProps): void {\n    if (this.state.trafficLayer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.trafficLayer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.trafficLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.trafficLayer.setMap(null)\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default TrafficLayer\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\ninterface BicyclingLayerState {\n  bicyclingLayer: google.maps.BicyclingLayer | null\n}\n\nexport interface BicyclingLayerProps {\n  /** This callback is called when the bicyclingLayer instance has loaded. It is called with the bicyclingLayer instance. */\n  onLoad?: (bicyclingLayer: google.maps.BicyclingLayer) => void\n  /** This callback is called when the component unmounts. It is called with the bicyclingLayer instance. */\n  onUnmount?: (bicyclingLayer: google.maps.BicyclingLayer) => void\n}\n\nexport class BicyclingLayer extends React.PureComponent<BicyclingLayerProps, BicyclingLayerState> {\n  static contextType = MapContext\n\n  state = {\n    bicyclingLayer: null,\n  }\n\n  setBicyclingLayerCallback = (): void => {\n    if (this.state.bicyclingLayer !== null) {\n      // TODO: how is this possibly null if we're doing a null check\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.bicyclingLayer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.bicyclingLayer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const bicyclingLayer = new google.maps.BicyclingLayer()\n\n    this.setState(function setBicyclingLayer() {\n      return {\n        bicyclingLayer,\n      }\n    }, this.setBicyclingLayerCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.bicyclingLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.bicyclingLayer)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.bicyclingLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default BicyclingLayer\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\ninterface TransitLayerState {\n  transitLayer: google.maps.TransitLayer | null\n}\n\nexport interface TransitLayerProps {\n  /** This callback is called when the transitLayer instance has loaded. It is called with the transitLayer instance. */\n  onLoad?: (transitLayer: google.maps.TransitLayer) => void\n  /** This callback is called when the component unmounts. It is called with the transitLayer instance. */\n  onUnmount?: (transitLayer: google.maps.TransitLayer) => void\n}\n\nexport class TransitLayer extends React.PureComponent<TransitLayerProps, TransitLayerState> {\n  static contextType = MapContext\n\n  state = {\n    transitLayer: null,\n  }\n\n  setTransitLayerCallback = (): void => {\n    if (this.state.transitLayer !== null) {\n      // TODO: how is this possibly null if we're doing a null check\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.transitLayer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onLoad(this.state.transitLayer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const transitLayer = new google.maps.TransitLayer()\n\n    this.setState(function setTransitLayer() {\n      return {\n        transitLayer,\n      }\n    }, this.setTransitLayerCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.transitLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.transitLayer)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.transitLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default TransitLayer\n","/* globals google */\nimport * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCircleComplete: 'circlecomplete',\n  onMarkerComplete: 'markercomplete',\n  onOverlayComplete: 'overlaycomplete',\n  onPolygonComplete: 'polygoncomplete',\n  onPolylineComplete: 'polylinecomplete',\n  onRectangleComplete: 'rectanglecomplete',\n}\n\nconst updaterMap = {\n  drawingMode(\n    instance: google.maps.drawing.DrawingManager,\n    drawingMode: google.maps.drawing.OverlayType | null\n  ): void {\n    instance.setDrawingMode(drawingMode)\n  },\n  options(\n    instance: google.maps.drawing.DrawingManager,\n    options: google.maps.drawing.DrawingManagerOptions\n  ): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface DrawingManagerState {\n  drawingManager: google.maps.drawing.DrawingManager | null\n}\n\nexport interface DrawingManagerProps {\n  options?: google.maps.drawing.DrawingManagerOptions\n  /** Changes the DrawingManager's drawing mode, which defines the type of overlay to be added on the map. Accepted values are 'marker', 'polygon', 'polyline', 'rectangle', 'circle', or null. A drawing mode of null means that the user can interact with the map as normal, and clicks do not draw anything. */\n  drawingMode?: google.maps.drawing.OverlayType | null\n  /** This event is fired when the user has finished drawing a circle. */\n  onCircleComplete?: (circle: google.maps.Circle) => void\n  /** This event is fired when the user has finished drawing a marker. */\n  onMarkerComplete?: (marker: google.maps.Marker) => void\n  /** This event is fired when the user has finished drawing an overlay of any type. */\n  onOverlayComplete?: (e: google.maps.drawing.OverlayCompleteEvent) => void\n  /** This event is fired when the user has finished drawing a polygon. */\n  onPolygonComplete?: (polygon: google.maps.Polygon) => void\n  /** This event is fired when the user has finished drawing a polyline. */\n  onPolylineComplete?: (polyline: google.maps.Polyline) => void\n  /** This event is fired when the user has finished drawing a rectangle. */\n  onRectangleComplete?: (rectangle: google.maps.Rectangle) => void\n  /** This callback is called when the drawingManager instance has loaded. It is called with the drawingManager instance. */\n  onLoad?: (drawingManager: google.maps.drawing.DrawingManager) => void\n  /** This callback is called when the component unmounts. It is called with the drawingManager instance. */\n  onUnmount?: (drawingManager: google.maps.drawing.DrawingManager) => void\n}\n\nexport class DrawingManager extends React.PureComponent<DrawingManagerProps, DrawingManagerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DrawingManagerState = {\n    drawingManager: null,\n  }\n\n  constructor(props: DrawingManagerProps) {\n    super(props)\n\n    invariant(\n      !!google.maps.drawing,\n      `Did you include prop libraries={['drawing']} in the URL? %s`,\n      google.maps.drawing\n    )\n  }\n\n  setDrawingManagerCallback = (): void => {\n    if (this.state.drawingManager !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.drawingManager)\n    }\n  }\n\n  componentDidMount(): void {\n    const drawingManager = new google.maps.drawing.DrawingManager({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: drawingManager,\n    })\n\n    this.setState(function setDrawingManager() {\n      return {\n        drawingManager,\n      }\n    }, this.setDrawingManagerCallback)\n  }\n\n  componentDidUpdate(prevProps: DrawingManagerProps): void {\n    if (this.state.drawingManager !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.drawingManager,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.drawingManager !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.drawingManager)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.drawingManager.setMap(null)\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DrawingManager\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport { HasMarkerAnchor } from '../../types'\n\nimport { Clusterer } from '@react-google-maps/marker-clusterer'\nimport { MarkerClusterer as GoogleClusterer} from '@googlemaps/markerclusterer'\nimport { ReactNode } from 'react'\n\nconst eventMap = {\n  onAnimationChanged: 'animation_changed',\n  onClick: 'click',\n  onClickableChanged: 'clickable_changed',\n  onCursorChanged: 'cursor_changed',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDraggableChanged: 'draggable_changed',\n  onDragStart: 'dragstart',\n  onFlatChanged: 'flat_changed',\n  onIconChanged: 'icon_changed',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onPositionChanged: 'position_changed',\n  onRightClick: 'rightclick',\n  onShapeChanged: 'shape_changed',\n  onTitleChanged: 'title_changed',\n  onVisibleChanged: 'visible_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  animation(instance: google.maps.Marker, animation: google.maps.Animation): void {\n    instance.setAnimation(animation)\n  },\n  clickable(instance: google.maps.Marker, clickable: boolean): void {\n    instance.setClickable(clickable)\n  },\n  cursor(instance: google.maps.Marker, cursor: string): void {\n    instance.setCursor(cursor)\n  },\n  draggable(instance: google.maps.Marker, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  icon(instance: google.maps.Marker, icon: string | google.maps.Icon | google.maps.Symbol): void {\n    instance.setIcon(icon)\n  },\n  label(instance: google.maps.Marker, label: string | google.maps.MarkerLabel): void {\n    instance.setLabel(label)\n  },\n  map(instance: google.maps.Marker, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  opacity(instance: google.maps.Marker, opacity: number): void {\n    instance.setOpacity(opacity)\n  },\n  options(instance: google.maps.Marker, options: google.maps.MarkerOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: google.maps.Marker,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  shape(instance: google.maps.Marker, shape: google.maps.MarkerShape): void {\n    instance.setShape(shape)\n  },\n  title(instance: google.maps.Marker, title: string): void {\n    instance.setTitle(title)\n  },\n  visible(instance: google.maps.Marker, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zIndex(instance: google.maps.Marker, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\nexport interface MarkerProps {\n  options?: google.maps.MarkerOptions\n  /** Start an animation. Any ongoing animation will be cancelled. Currently supported animations are: BOUNCE, DROP. Passing in null will cause any animation to stop. */\n  animation?: google.maps.Animation\n  /** If true, the marker receives mouse and touch events. Default value is true. */\n  clickable?: boolean\n  /** Mouse cursor to show on hover */\n  cursor?: string\n  /** If true, the marker can be dragged. Default value is false. */\n  draggable?: boolean\n  /** Icon for the foreground. If a string is provided, it is treated as though it were an Icon with the string as url. */\n  icon?: string | google.maps.Icon | google.maps.Symbol\n  /** Adds a label to the marker. The label can either be a string, or a MarkerLabel object. */\n  label?: string | google.maps.MarkerLabel\n  /** The marker's opacity between 0.0 and 1.0. */\n  opacity?: number\n\n  // required\n  /** Marker position. */\n  position: google.maps.LatLng | google.maps.LatLngLiteral\n  /** Image map region definition used for drag/click. */\n  shape?: google.maps.MarkerShape\n  /** Rollover text */\n  title?: string\n  /** If true, the marker is visible */\n  visible?: boolean\n  /** All markers are displayed on the map in order of their zIndex, with higher values displaying in front of markers with lower values. By default, markers are displayed according to their vertical position on screen, with lower markers appearing in front of markers further up the screen. */\n  zIndex?: number\n  /** Render prop that handles clustering markers */\n  clusterer?: Clusterer | GoogleClusterer\n  /** Clusters are redrawn when a Marker is added unless noClustererRedraw? is set to true. */\n  noClustererRedraw?: boolean\n  /** This event is fired when the marker icon was clicked. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's clickable property changes. */\n  onClickableChanged?: () => void\n  /** This event is fired when the marker's cursor property changes. */\n  onCursorChanged?: () => void\n  /** This event is fired when the marker's animation property changes. */\n  onAnimationChanged?: () => void\n  /** This event is fired when the marker icon was double clicked. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the marker. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the marker. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's draggable property changes. */\n  onDraggableChanged?: () => void\n  /** This event is fired when the user starts dragging the marker. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's flat property changes. */\n  onFlatChanged?: () => void\n  /** This event is fired when the marker icon property changes. */\n  onIconChanged?: () => void\n  /** This event is fired for a mousedown on the marker. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the mouse leaves the area of the marker icon. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the mouse enters the area of the marker icon. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired for a mouseup on the marker. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired for a rightclick on the marker. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the marker's shape property changes. */\n  onShapeChanged?: () => void\n  /** This event is fired when the marker title property changes. */\n  onTitleChanged?: () => void\n  /** This event is fired when the marker's visible property changes. */\n  onVisibleChanged?: () => void\n  /** This event is fired when the marker's zIndex property changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the marker instance has loaded. It is called with the marker instance. */\n  onLoad?: (marker: google.maps.Marker) => void\n  /** This callback is called when the component unmounts. It is called with the marker instance. */\n  onUnmount?: (marker: google.maps.Marker) => void\n}\n\nexport class Marker extends React.PureComponent<MarkerProps> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  marker: google.maps.Marker | undefined\n\n  componentDidMount(): void {\n    const markerOptions = {\n      ...(this.props.options || {}),\n      ...(this.props.clusterer ? {} : { map: this.context }),\n      position: this.props.position,\n    }\n\n    // Unfortunately we can't just do this in the contstructor, because the\n    // `MapContext` might not be filled in yet.\n    this.marker = new google.maps.Marker(markerOptions)\n\n    if (this.props.clusterer) {\n      this.props.clusterer.addMarker(this.marker, !!this.props.noClustererRedraw)\n    } else {\n      this.marker.setMap(this.context)\n    }\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: this.marker,\n    })\n\n    if (this.props.onLoad) {\n      this.props.onLoad(this.marker)\n    }\n  }\n\n  componentDidUpdate(prevProps: MarkerProps): void {\n    if (this.marker) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.marker,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.marker) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.marker)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.props.clusterer) {\n        this.props.clusterer.removeMarker(this.marker, !!this.props.noClustererRedraw)\n      } else {\n        this.marker && this.marker.setMap(null)\n      }\n    }\n  }\n\n  render(): React.ReactNode {\n    let children: ReactNode | null = null\n    if (this.props.children) {\n      children = React.Children.map(this.props.children, child => {\n        if (!React.isValidElement<HasMarkerAnchor>(child)) {\n          return child\n        }\n\n        let elementChild: React.ReactElement<HasMarkerAnchor> = child\n        return React.cloneElement(elementChild, { anchor: this.marker })\n      })\n    }\n    return children || null\n  }\n}\n\nexport default Marker\n","var ClusterIcon = /** @class */ (function () {\n    function ClusterIcon(cluster, styles) {\n        cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView);\n        this.cluster = cluster;\n        this.clusterClassName = this.cluster.getClusterer().getClusterClass();\n        this.className = this.clusterClassName;\n        this.styles = styles;\n        this.center = undefined;\n        this.div = null;\n        this.sums = null;\n        this.visible = false;\n        this.boundsChangedListener = null;\n        this.url = '';\n        this.height = 0;\n        this.width = 0;\n        this.anchorText = [0, 0];\n        this.anchorIcon = [0, 0];\n        this.textColor = 'black';\n        this.textSize = 11;\n        this.textDecoration = 'none';\n        this.fontWeight = 'bold';\n        this.fontStyle = 'normal';\n        this.fontFamily = 'Arial,sans-serif';\n        this.backgroundPosition = '0 0';\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n    }\n    ClusterIcon.prototype.onAdd = function () {\n        var _this = this;\n        var cMouseDownInCluster;\n        var cDraggingMapByCluster;\n        this.div = document.createElement('div');\n        this.div.className = this.className;\n        if (this.visible) {\n            this.show();\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getPanes().overlayMouseTarget.appendChild(this.div);\n        // Fix for Issue 157\n        this.boundsChangedListener = google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap(), 'boundschanged', function boundsChanged() {\n            cDraggingMapByCluster = cMouseDownInCluster;\n        });\n        google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n            cMouseDownInCluster = true;\n            cDraggingMapByCluster = false;\n        });\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        google.maps.event.addDomListener(this.div, 'click', \n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        function (event) {\n            cMouseDownInCluster = false;\n            if (!cDraggingMapByCluster) {\n                var markerClusterer_1 = _this.cluster.getClusterer();\n                /**\n                 * This event is fired when a cluster marker is clicked.\n                 * @name MarkerClusterer#click\n                 * @param {Cluster} c The cluster that was clicked.\n                 * @event\n                 */\n                google.maps.event.trigger(markerClusterer_1, 'click', _this.cluster);\n                google.maps.event.trigger(markerClusterer_1, 'clusterclick', _this.cluster); // deprecated name\n                // The default click handler follows. Disable it by setting\n                // the zoomOnClick property to false.\n                if (markerClusterer_1.getZoomOnClick()) {\n                    // Zoom into the cluster.\n                    var maxZoom_1 = markerClusterer_1.getMaxZoom();\n                    var bounds_1 = _this.cluster.getBounds();\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                    // @ts-ignore\n                    markerClusterer_1.getMap().fitBounds(bounds_1);\n                    // There is a fix for Issue 170 here:\n                    setTimeout(function timeout() {\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                        // @ts-ignore\n                        markerClusterer_1.getMap().fitBounds(bounds_1);\n                        // Don't zoom beyond the max zoom level\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                        // @ts-ignore\n                        if (maxZoom_1 !== null && markerClusterer_1.getMap().getZoom() > maxZoom_1) {\n                            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                            // @ts-ignore\n                            markerClusterer_1.getMap().setZoom(maxZoom_1 + 1);\n                        }\n                    }, 100);\n                }\n                // Prevent event propagation to the map:\n                event.cancelBubble = true;\n                if (event.stopPropagation) {\n                    event.stopPropagation();\n                }\n            }\n        });\n        google.maps.event.addDomListener(this.div, 'mouseover', \n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        function () {\n            /**\n             * This event is fired when the mouse moves over a cluster marker.\n             * @name MarkerClusterer#mouseover\n             * @param {Cluster} c The cluster that the mouse moved over.\n             * @event\n             */\n            google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseover', _this.cluster);\n        });\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        google.maps.event.addDomListener(this.div, 'mouseout', \n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        function () {\n            /**\n             * This event is fired when the mouse moves out of a cluster marker.\n             * @name MarkerClusterer#mouseout\n             * @param {Cluster} c The cluster that the mouse moved out of.\n             * @event\n             */\n            google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseout', _this.cluster);\n        });\n    };\n    ClusterIcon.prototype.onRemove = function () {\n        if (this.div && this.div.parentNode) {\n            this.hide();\n            if (this.boundsChangedListener !== null) {\n                google.maps.event.removeListener(this.boundsChangedListener);\n            }\n            google.maps.event.clearInstanceListeners(this.div);\n            this.div.parentNode.removeChild(this.div);\n            this.div = null;\n        }\n    };\n    ClusterIcon.prototype.draw = function () {\n        if (this.visible && this.div !== null && this.center) {\n            var _a = this.getPosFromLatLng(this.center), x = _a.x, y = _a.y;\n            this.div.style.top = y + 'px';\n            this.div.style.left = x + 'px';\n        }\n    };\n    ClusterIcon.prototype.hide = function () {\n        if (this.div) {\n            this.div.style.display = 'none';\n        }\n        this.visible = false;\n    };\n    ClusterIcon.prototype.show = function () {\n        if (this.div && this.center) {\n            var img = '', divTitle = '';\n            // NOTE: values must be specified in px units\n            var bp = this.backgroundPosition.split(' ');\n            var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10);\n            var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10);\n            var pos = this.getPosFromLatLng(this.center);\n            if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n                divTitle = this.cluster.getClusterer().getTitle();\n            }\n            else {\n                divTitle = this.sums.title;\n            }\n            this.div.style.cssText = this.createCss(pos);\n            img =\n                \"<img alt='\" +\n                    divTitle +\n                    \"' src='\" +\n                    this.url +\n                    \"' style='position: absolute; top: \" +\n                    spriteV +\n                    'px; left: ' +\n                    spriteH +\n                    'px; ';\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            //@ts-ignore\n            if (!this.cluster.getClusterer().enableRetinaIcons) {\n                img +=\n                    'clip: rect(' +\n                        -1 * spriteV +\n                        'px, ' +\n                        (-1 * spriteH + this.width) +\n                        'px, ' +\n                        (-1 * spriteV + this.height) +\n                        'px, ' +\n                        -1 * spriteH +\n                        'px);';\n            }\n            img += \"'>\";\n            this.div.innerHTML =\n                img +\n                    \"<div style='\" +\n                    'position: absolute;' +\n                    'top: ' +\n                    this.anchorText[0] +\n                    'px;' +\n                    'left: ' +\n                    this.anchorText[1] +\n                    'px;' +\n                    'color: ' +\n                    this.textColor +\n                    ';' +\n                    'font-size: ' +\n                    this.textSize +\n                    'px;' +\n                    'font-family: ' +\n                    this.fontFamily +\n                    ';' +\n                    'font-weight: ' +\n                    this.fontWeight +\n                    ';' +\n                    'font-style: ' +\n                    this.fontStyle +\n                    ';' +\n                    'text-decoration: ' +\n                    this.textDecoration +\n                    ';' +\n                    'text-align: center;' +\n                    'width: ' +\n                    this.width +\n                    'px;' +\n                    'line-height:' +\n                    this.height +\n                    'px;' +\n                    \"'>\" +\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                    // @ts-ignore\n                    this.sums.text +\n                    '</div>';\n            this.div.title = divTitle;\n            this.div.style.display = '';\n        }\n        this.visible = true;\n    };\n    ClusterIcon.prototype.useStyle = function (sums) {\n        this.sums = sums;\n        var styles = this.cluster.getClusterer().getStyles();\n        var style = styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))];\n        this.url = style.url;\n        this.height = style.height;\n        this.width = style.width;\n        if (style.className)\n            this.className = this.clusterClassName + \" \" + style.className;\n        this.anchorText = style.anchorText || [0, 0];\n        this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2];\n        this.textColor = style.textColor || 'black';\n        this.textSize = style.textSize || 11;\n        this.textDecoration = style.textDecoration || 'none';\n        this.fontWeight = style.fontWeight || 'bold';\n        this.fontStyle = style.fontStyle || 'normal';\n        this.fontFamily = style.fontFamily || 'Arial,sans-serif';\n        this.backgroundPosition = style.backgroundPosition || '0 0';\n    };\n    ClusterIcon.prototype.setCenter = function (center) {\n        this.center = center;\n    };\n    ClusterIcon.prototype.createCss = function (pos) {\n        var style = [];\n        style.push('cursor: pointer;');\n        style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;');\n        style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;');\n        return style.join('');\n    };\n    ClusterIcon.prototype.getPosFromLatLng = function (latlng) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n        pos.x -= this.anchorIcon[1];\n        pos.y -= this.anchorIcon[0];\n        // pos.x = pos.x\n        // pos.y = pos.y\n        return pos;\n    };\n    return ClusterIcon;\n}());\n\nvar Cluster = /** @class */ (function () {\n    function Cluster(markerClusterer) {\n        this.markerClusterer = markerClusterer;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.map = this.markerClusterer.getMap();\n        this.gridSize = this.markerClusterer.getGridSize();\n        this.minClusterSize = this.markerClusterer.getMinimumClusterSize();\n        this.averageCenter = this.markerClusterer.getAverageCenter();\n        this.markers = [];\n        this.center = undefined;\n        this.bounds = null;\n        this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles());\n    }\n    Cluster.prototype.getSize = function () {\n        return this.markers.length;\n    };\n    Cluster.prototype.getMarkers = function () {\n        return this.markers;\n    };\n    Cluster.prototype.getCenter = function () {\n        return this.center;\n    };\n    Cluster.prototype.getMap = function () {\n        return this.map;\n    };\n    Cluster.prototype.getClusterer = function () {\n        return this.markerClusterer;\n    };\n    Cluster.prototype.getBounds = function () {\n        var bounds = new google.maps.LatLngBounds(this.center, this.center);\n        var markers = this.getMarkers();\n        for (var i = 0; i < markers.length; i++) {\n            var position = markers[i].getPosition();\n            if (position) {\n                bounds.extend(position);\n            }\n        }\n        return bounds;\n    };\n    Cluster.prototype.remove = function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.clusterIcon.setMap(null);\n        this.markers = [];\n        // @ts-ignore\n        delete this.markers;\n    };\n    Cluster.prototype.addMarker = function (marker) {\n        if (this.isMarkerAlreadyAdded(marker)) {\n            return false;\n        }\n        if (!this.center) {\n            var position = marker.getPosition();\n            if (position) {\n                this.center = position;\n                this.calculateBounds();\n            }\n        }\n        else {\n            if (this.averageCenter) {\n                var position = marker.getPosition();\n                if (position) {\n                    var length_1 = this.markers.length + 1;\n                    this.center = new google.maps.LatLng((this.center.lat() * (length_1 - 1) + position.lat()) / length_1, (this.center.lng() * (length_1 - 1) + position.lng()) / length_1);\n                    this.calculateBounds();\n                }\n            }\n        }\n        marker.isAdded = true;\n        this.markers.push(marker);\n        var mCount = this.markers.length;\n        var maxZoom = this.markerClusterer.getMaxZoom();\n        var zoom = this.map.getZoom();\n        if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n            // Zoomed in past max zoom, so show the marker.\n            if (marker.getMap() !== this.map) {\n                marker.setMap(this.map);\n            }\n        }\n        else if (mCount < this.minClusterSize) {\n            // Min cluster size not reached so show the marker.\n            if (marker.getMap() !== this.map) {\n                marker.setMap(this.map);\n            }\n        }\n        else if (mCount === this.minClusterSize) {\n            // Hide the markers that were showing.\n            for (var i = 0; i < mCount; i++) {\n                this.markers[i].setMap(null);\n            }\n        }\n        else {\n            marker.setMap(null);\n        }\n        return true;\n    };\n    Cluster.prototype.isMarkerInClusterBounds = function (marker) {\n        if (this.bounds !== null) {\n            var position = marker.getPosition();\n            if (position) {\n                return this.bounds.contains(position);\n            }\n        }\n        return false;\n    };\n    Cluster.prototype.calculateBounds = function () {\n        this.bounds = this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center, this.center));\n    };\n    Cluster.prototype.updateIcon = function () {\n        var mCount = this.markers.length;\n        var maxZoom = this.markerClusterer.getMaxZoom();\n        var zoom = this.map.getZoom();\n        if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n            this.clusterIcon.hide();\n            return;\n        }\n        if (mCount < this.minClusterSize) {\n            // Min cluster size not yet reached.\n            this.clusterIcon.hide();\n            return;\n        }\n        if (this.center) {\n            this.clusterIcon.setCenter(this.center);\n        }\n        this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length));\n        this.clusterIcon.show();\n    };\n    Cluster.prototype.isMarkerAlreadyAdded = function (marker) {\n        if (this.markers.includes) {\n            return this.markers.includes(marker);\n        }\n        else {\n            for (var i = 0; i < this.markers.length; i++) {\n                if (marker === this.markers[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    return Cluster;\n}());\n\n/* global google */\n/**\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\n * which is not a problem as max array length is 4294967296 (2**32)\n */\nvar CALCULATOR = function CALCULATOR(markers, numStyles) {\n    var count = markers.length;\n    var numberOfDigits = count.toString().length;\n    var index = Math.min(numberOfDigits, numStyles);\n    return {\n        text: count.toString(),\n        index: index,\n        title: '',\n    };\n};\nvar BATCH_SIZE = 2000;\nvar BATCH_SIZE_IE = 500;\nvar IMAGE_PATH = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m';\nvar IMAGE_EXTENSION = 'png';\nvar IMAGE_SIZES = [53, 56, 66, 78, 90];\nvar CLUSTERER_CLASS = 'cluster';\nvar Clusterer = /** @class */ (function () {\n    function Clusterer(map, optMarkers, optOptions) {\n        if (optMarkers === void 0) { optMarkers = []; }\n        if (optOptions === void 0) { optOptions = {}; }\n        this.extend(Clusterer, google.maps.OverlayView);\n        this.markers = [];\n        this.clusters = [];\n        this.listeners = [];\n        this.activeMap = null;\n        this.ready = false;\n        this.gridSize = optOptions.gridSize || 60;\n        this.minClusterSize = optOptions.minimumClusterSize || 2;\n        this.maxZoom = optOptions.maxZoom || null;\n        this.styles = optOptions.styles || [];\n        this.title = optOptions.title || '';\n        this.zoomOnClick = true;\n        if (optOptions.zoomOnClick !== undefined) {\n            this.zoomOnClick = optOptions.zoomOnClick;\n        }\n        this.averageCenter = false;\n        if (optOptions.averageCenter !== undefined) {\n            this.averageCenter = optOptions.averageCenter;\n        }\n        this.ignoreHidden = false;\n        if (optOptions.ignoreHidden !== undefined) {\n            this.ignoreHidden = optOptions.ignoreHidden;\n        }\n        this.enableRetinaIcons = false;\n        if (optOptions.enableRetinaIcons !== undefined) {\n            this.enableRetinaIcons = optOptions.enableRetinaIcons;\n        }\n        this.imagePath = optOptions.imagePath || IMAGE_PATH;\n        this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION;\n        this.imageSizes = optOptions.imageSizes || IMAGE_SIZES;\n        this.calculator = optOptions.calculator || CALCULATOR;\n        this.batchSize = optOptions.batchSize || BATCH_SIZE;\n        this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE;\n        this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS;\n        if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n            // Try to avoid IE timeout when processing a huge number of markers:\n            this.batchSize = this.batchSizeIE;\n        }\n        this.timerRefStatic = null;\n        this.setupStyles();\n        this.addMarkers(optMarkers, true);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.setMap(map); // Note: this causes onAdd to be called\n    }\n    Clusterer.prototype.onAdd = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.activeMap = this.getMap();\n        this.ready = true;\n        this.repaint();\n        // Add the map event listeners\n        this.listeners = [\n            google.maps.event.addListener(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap(), 'zoom_changed', \n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            function () {\n                _this.resetViewport(false);\n                // Workaround for this Google bug: when map is at level 0 and \"-\" of\n                // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n                // the map doesn't zoom out any further. In this situation, no \"idle\"\n                // event is triggered so the cluster markers that have been removed\n                // do not get redrawn. Same goes for a zoom in at maxZoom.\n                if (\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                _this.getMap().getZoom() === (_this.get('minZoom') || 0) ||\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                    // @ts-ignore\n                    _this.getMap().getZoom() === _this.get('maxZoom')) {\n                    google.maps.event.trigger(_this, 'idle');\n                }\n            }),\n            google.maps.event.addListener(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap(), 'idle', \n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            function () {\n                _this.redraw();\n            }),\n        ];\n    };\n    // eslint-disable-next-line @getify/proper-arrows/this\n    Clusterer.prototype.onRemove = function () {\n        // Put all the managed markers back on the map:\n        for (var i = 0; i < this.markers.length; i++) {\n            if (this.markers[i].getMap() !== this.activeMap) {\n                this.markers[i].setMap(this.activeMap);\n            }\n        }\n        // Remove all clusters:\n        for (var i = 0; i < this.clusters.length; i++) {\n            this.clusters[i].remove();\n        }\n        this.clusters = [];\n        // Remove map event listeners:\n        for (var i = 0; i < this.listeners.length; i++) {\n            google.maps.event.removeListener(this.listeners[i]);\n        }\n        this.listeners = [];\n        this.activeMap = null;\n        this.ready = false;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Clusterer.prototype.draw = function () { };\n    Clusterer.prototype.setupStyles = function () {\n        if (this.styles.length > 0) {\n            return;\n        }\n        for (var i = 0; i < this.imageSizes.length; i++) {\n            this.styles.push({\n                url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n                height: this.imageSizes[i],\n                width: this.imageSizes[i],\n            });\n        }\n    };\n    Clusterer.prototype.fitMapToMarkers = function () {\n        var markers = this.getMarkers();\n        var bounds = new google.maps.LatLngBounds();\n        for (var i = 0; i < markers.length; i++) {\n            var position = markers[i].getPosition();\n            if (position) {\n                bounds.extend(position);\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap().fitBounds(bounds);\n    };\n    Clusterer.prototype.getGridSize = function () {\n        return this.gridSize;\n    };\n    Clusterer.prototype.setGridSize = function (gridSize) {\n        this.gridSize = gridSize;\n    };\n    Clusterer.prototype.getMinimumClusterSize = function () {\n        return this.minClusterSize;\n    };\n    Clusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n        this.minClusterSize = minimumClusterSize;\n    };\n    Clusterer.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    Clusterer.prototype.setMaxZoom = function (maxZoom) {\n        this.maxZoom = maxZoom;\n    };\n    Clusterer.prototype.getStyles = function () {\n        return this.styles;\n    };\n    Clusterer.prototype.setStyles = function (styles) {\n        this.styles = styles;\n    };\n    Clusterer.prototype.getTitle = function () {\n        return this.title;\n    };\n    Clusterer.prototype.setTitle = function (title) {\n        this.title = title;\n    };\n    Clusterer.prototype.getZoomOnClick = function () {\n        return this.zoomOnClick;\n    };\n    Clusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n        this.zoomOnClick = zoomOnClick;\n    };\n    Clusterer.prototype.getAverageCenter = function () {\n        return this.averageCenter;\n    };\n    Clusterer.prototype.setAverageCenter = function (averageCenter) {\n        this.averageCenter = averageCenter;\n    };\n    Clusterer.prototype.getIgnoreHidden = function () {\n        return this.ignoreHidden;\n    };\n    Clusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n        this.ignoreHidden = ignoreHidden;\n    };\n    Clusterer.prototype.getEnableRetinaIcons = function () {\n        return this.enableRetinaIcons;\n    };\n    Clusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n        this.enableRetinaIcons = enableRetinaIcons;\n    };\n    Clusterer.prototype.getImageExtension = function () {\n        return this.imageExtension;\n    };\n    Clusterer.prototype.setImageExtension = function (imageExtension) {\n        this.imageExtension = imageExtension;\n    };\n    Clusterer.prototype.getImagePath = function () {\n        return this.imagePath;\n    };\n    Clusterer.prototype.setImagePath = function (imagePath) {\n        this.imagePath = imagePath;\n    };\n    Clusterer.prototype.getImageSizes = function () {\n        return this.imageSizes;\n    };\n    Clusterer.prototype.setImageSizes = function (imageSizes) {\n        this.imageSizes = imageSizes;\n    };\n    Clusterer.prototype.getCalculator = function () {\n        return this.calculator;\n    };\n    Clusterer.prototype.setCalculator = function (calculator) {\n        this.calculator = calculator;\n    };\n    Clusterer.prototype.getBatchSizeIE = function () {\n        return this.batchSizeIE;\n    };\n    Clusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n        this.batchSizeIE = batchSizeIE;\n    };\n    Clusterer.prototype.getClusterClass = function () {\n        return this.clusterClass;\n    };\n    Clusterer.prototype.setClusterClass = function (clusterClass) {\n        this.clusterClass = clusterClass;\n    };\n    Clusterer.prototype.getMarkers = function () {\n        return this.markers;\n    };\n    Clusterer.prototype.getTotalMarkers = function () {\n        return this.markers.length;\n    };\n    Clusterer.prototype.getClusters = function () {\n        return this.clusters;\n    };\n    Clusterer.prototype.getTotalClusters = function () {\n        return this.clusters.length;\n    };\n    Clusterer.prototype.addMarker = function (marker, optNoDraw) {\n        this.pushMarkerTo(marker);\n        if (!optNoDraw) {\n            this.redraw();\n        }\n    };\n    Clusterer.prototype.addMarkers = function (markers, optNoDraw) {\n        for (var key in markers) {\n            if (markers.hasOwnProperty(key)) {\n                this.pushMarkerTo(markers[key]);\n            }\n        }\n        if (!optNoDraw) {\n            this.redraw();\n        }\n    };\n    Clusterer.prototype.pushMarkerTo = function (marker) {\n        var _this = this;\n        // If the marker is draggable add a listener so we can update the clusters on the dragend:\n        if (marker.getDraggable()) {\n            // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n            google.maps.event.addListener(marker, 'dragend', function () {\n                if (_this.ready) {\n                    marker.isAdded = false;\n                    _this.repaint();\n                }\n            });\n        }\n        marker.isAdded = false;\n        this.markers.push(marker);\n    };\n    Clusterer.prototype.removeMarker_ = function (marker) {\n        var index = -1;\n        if (this.markers.indexOf) {\n            index = this.markers.indexOf(marker);\n        }\n        else {\n            for (var i = 0; i < this.markers.length; i++) {\n                if (marker === this.markers[i]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        if (index === -1) {\n            // Marker is not in our list of markers, so do nothing:\n            return false;\n        }\n        marker.setMap(null);\n        this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n        return true;\n    };\n    Clusterer.prototype.removeMarker = function (marker, optNoDraw) {\n        var removed = this.removeMarker_(marker);\n        if (!optNoDraw && removed) {\n            this.repaint();\n        }\n        return removed;\n    };\n    Clusterer.prototype.removeMarkers = function (markers, optNoDraw) {\n        var removed = false;\n        for (var i = 0; i < markers.length; i++) {\n            removed = removed || this.removeMarker_(markers[i]);\n        }\n        if (!optNoDraw && removed) {\n            this.repaint();\n        }\n        return removed;\n    };\n    Clusterer.prototype.clearMarkers = function () {\n        this.resetViewport(true);\n        this.markers = [];\n    };\n    Clusterer.prototype.repaint = function () {\n        var oldClusters = this.clusters.slice();\n        this.clusters = [];\n        this.resetViewport(false);\n        this.redraw();\n        // Remove the old clusters.\n        // Do it in a timeout to prevent blinking effect.\n        setTimeout(function timeout() {\n            for (var i = 0; i < oldClusters.length; i++) {\n                oldClusters[i].remove();\n            }\n        }, 0);\n    };\n    Clusterer.prototype.getExtendedBounds = function (bounds) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var projection = this.getProjection();\n        // Convert the points to pixels and the extend out by the grid size.\n        var trPix = projection.fromLatLngToDivPixel(\n        // Turn the bounds into latlng.\n        new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng()));\n        trPix.x += this.gridSize;\n        trPix.y -= this.gridSize;\n        var blPix = projection.fromLatLngToDivPixel(\n        // Turn the bounds into latlng.\n        new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()));\n        blPix.x -= this.gridSize;\n        blPix.y += this.gridSize;\n        // Extend the bounds to contain the new bounds.\n        bounds.extend(\n        // Convert the pixel points back to LatLng nw\n        projection.fromDivPixelToLatLng(trPix));\n        bounds.extend(\n        // Convert the pixel points back to LatLng sw\n        projection.fromDivPixelToLatLng(blPix));\n        return bounds;\n    };\n    Clusterer.prototype.redraw = function () {\n        // Redraws all the clusters.\n        this.createClusters(0);\n    };\n    Clusterer.prototype.resetViewport = function (optHide) {\n        // Remove all the clusters\n        for (var i = 0; i < this.clusters.length; i++) {\n            this.clusters[i].remove();\n        }\n        this.clusters = [];\n        // Reset the markers to not be added and to be removed from the map.\n        for (var i = 0; i < this.markers.length; i++) {\n            var marker = this.markers[i];\n            marker.isAdded = false;\n            if (optHide) {\n                marker.setMap(null);\n            }\n        }\n    };\n    Clusterer.prototype.distanceBetweenPoints = function (p1, p2) {\n        var R = 6371; // Radius of the Earth in km\n        var dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180;\n        var dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180;\n        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos((p1.lat() * Math.PI) / 180) *\n                Math.cos((p2.lat() * Math.PI) / 180) *\n                Math.sin(dLon / 2) *\n                Math.sin(dLon / 2);\n        return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n    };\n    Clusterer.prototype.isMarkerInBounds = function (marker, bounds) {\n        var position = marker.getPosition();\n        if (position) {\n            return bounds.contains(position);\n        }\n        return false;\n    };\n    Clusterer.prototype.addToClosestCluster = function (marker) {\n        var cluster;\n        var distance = 40000; // Some large number\n        var clusterToAddTo = null;\n        for (var i = 0; i < this.clusters.length; i++) {\n            cluster = this.clusters[i];\n            var center = cluster.getCenter();\n            var position = marker.getPosition();\n            if (center && position) {\n                var d = this.distanceBetweenPoints(center, position);\n                if (d < distance) {\n                    distance = d;\n                    clusterToAddTo = cluster;\n                }\n            }\n        }\n        if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n            clusterToAddTo.addMarker(marker);\n        }\n        else {\n            cluster = new Cluster(this);\n            cluster.addMarker(marker);\n            this.clusters.push(cluster);\n        }\n    };\n    Clusterer.prototype.createClusters = function (iFirst) {\n        var _this = this;\n        if (!this.ready) {\n            return;\n        }\n        // Cancel previous batch processing if we're working on the first batch:\n        if (iFirst === 0) {\n            /**\n             * This event is fired when the <code>Clusterer</code> begins\n             *  clustering markers.\n             * @name Clusterer#clusteringbegin\n             * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n             * @event\n             */\n            google.maps.event.trigger(this, 'clusteringbegin', this);\n            if (this.timerRefStatic !== null) {\n                window.clearTimeout(this.timerRefStatic);\n                // @ts-ignore\n                delete this.timerRefStatic;\n            }\n        }\n        // Get our current map view bounds.\n        // Create a new bounds object so we don't affect the map.\n        //\n        // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n        var mapBounds = \n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap().getZoom() > 3\n            ? new google.maps.LatLngBounds(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n                .getBounds()\n                .getSouthWest(), \n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n                .getBounds()\n                .getNorthEast())\n            : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n        var bounds = this.getExtendedBounds(mapBounds);\n        var iLast = Math.min(iFirst + this.batchSize, this.markers.length);\n        for (var i = iFirst; i < iLast; i++) {\n            var marker = this.markers[i];\n            if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n                if (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible())) {\n                    this.addToClosestCluster(marker);\n                }\n            }\n        }\n        if (iLast < this.markers.length) {\n            this.timerRefStatic = window.setTimeout(\n            // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n            function () {\n                _this.createClusters(iLast);\n            }, 0);\n        }\n        else {\n            this.timerRefStatic = null;\n            /**\n             * This event is fired when the <code>Clusterer</code> stops\n             *  clustering markers.\n             * @name Clusterer#clusteringend\n             * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n             * @event\n             */\n            google.maps.event.trigger(this, 'clusteringend', this);\n            for (var i = 0; i < this.clusters.length; i++) {\n                this.clusters[i].updateIcon();\n            }\n        }\n    };\n    Clusterer.prototype.extend = function (obj1, obj2) {\n        return function applyExtend(object) {\n            // eslint-disable-next-line guard-for-in\n            for (var property in object.prototype) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                this.prototype[property] = object.prototype[property];\n            }\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            return this;\n        }.apply(obj1, [obj2]);\n    };\n    return Clusterer;\n}());\n\nexport { Cluster, ClusterIcon, Clusterer };\n//# sourceMappingURL=esm.js.map\n","/* eslint-disable filenames/match-exported */\nimport * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nimport {\n  Clusterer,\n  ClusterIconStyle,\n  Cluster,\n  ClustererOptions,\n  TCalculator,\n} from '@react-google-maps/marker-clusterer'\n\nconst eventMap = {\n  onClick: 'click',\n  onClusteringBegin: 'clusteringbegin',\n  onClusteringEnd: 'clusteringend',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n}\n\nconst updaterMap = {\n  averageCenter(instance: Clusterer, averageCenter: boolean): void {\n    instance.setAverageCenter(averageCenter)\n  },\n\n  batchSizeIE(instance: Clusterer, batchSizeIE: number): void {\n    instance.setBatchSizeIE(batchSizeIE)\n  },\n\n  calculator(instance: Clusterer, calculator: any): void {\n    instance.setCalculator(calculator)\n  },\n\n  clusterClass(instance: Clusterer, clusterClass: string): void {\n    instance.setClusterClass(clusterClass)\n  },\n\n  enableRetinaIcons(instance: Clusterer, enableRetinaIcons: boolean): void {\n    instance.setEnableRetinaIcons(enableRetinaIcons)\n  },\n\n  gridSize(instance: Clusterer, gridSize: number): void {\n    instance.setGridSize(gridSize)\n  },\n\n  ignoreHidden(instance: Clusterer, ignoreHidden: boolean): void {\n    instance.setIgnoreHidden(ignoreHidden)\n  },\n\n  imageExtension(instance: Clusterer, imageExtension: string): void {\n    instance.setImageExtension(imageExtension)\n  },\n\n  imagePath(instance: Clusterer, imagePath: string): void {\n    instance.setImagePath(imagePath)\n  },\n\n  imageSizes(instance: Clusterer, imageSizes: number[]): void {\n    instance.setImageSizes(imageSizes)\n  },\n\n  maxZoom(instance: Clusterer, maxZoom: number): void {\n    instance.setMaxZoom(maxZoom)\n  },\n\n  minimumClusterSize(instance: Clusterer, minimumClusterSize: number): void {\n    instance.setMinimumClusterSize(minimumClusterSize)\n  },\n\n  styles(instance: Clusterer, styles: ClusterIconStyle[]): void {\n    instance.setStyles(styles)\n  },\n\n  title(instance: Clusterer, title: string): void {\n    instance.setTitle(title)\n  },\n\n  zoomOnClick(instance: Clusterer, zoomOnClick: boolean): void {\n    instance.setZoomOnClick(zoomOnClick)\n  },\n}\n\ninterface ClustererState {\n  markerClusterer: Clusterer | null\n}\n\nexport interface ClustererProps {\n  // required\n  children: (markerClusterer: Clusterer) => React.ReactNode\n\n  options?: ClustererOptions // TODO: it could be undefined\n  /** Whether the position of a cluster marker should be the average position of all markers in the cluster. If set to false, the cluster marker is positioned at the location of the first marker added to the cluster. The default value is false. */\n  averageCenter?: boolean\n  /** When Internet Explorer is being used, markers are processed in several batches with a small delay inserted between each batch in an attempt to avoid Javascript timeout errors. Set this property to the number of markers to be processed in a single batch; select as high a number as you can without causing a timeout error in the browser. This number might need to be as low as 100 if 15,000 markers are being managed, for example. The default value is MarkerClusterer.BATCH_SIZE_IE. */\n  batchSizeIE?: number\n  /** The function used to determine the text to be displayed on a cluster marker and the index indicating which style to use for the cluster marker. The input parameters for the function are (1) the array of markers represented by a cluster marker and (2) the number of cluster icon styles. It returns a ClusterIconInfo object. The default calculator returns a text property which is the number of markers in the cluster and an index property which is one higher than the lowest integer such that 10^i exceeds the number of markers in the cluster, or the size of the styles array, whichever is less. The styles array element used has an index of index minus 1. For example, the default calculator returns a text value of \"125\" and an index of 3 for a cluster icon representing 125 markers so the element used in the styles array is 2. A calculator may also return a title property that contains the text of the tooltip to be used for the cluster marker. If title is not defined, the tooltip is set to the value of the title property for the MarkerClusterer. The default value is MarkerClusterer.CALCULATOR. */\n  calculator?: TCalculator\n  /** The name of the CSS class defining general styles for the cluster markers. Use this class to define CSS styles that are not set up by the code that processes the styles array. The default value is \"cluster\". */\n  clusterClass?: string\n  /** Whether to allow the use of cluster icons that have sizes that are some multiple (typically double) of their actual display size. Icons such as these look better when viewed on high-resolution monitors such as Apple's Retina displays. Note: if this property is true, sprites cannot be used as cluster icons. The default value is false. */\n  enableRetinaIcons?: boolean\n  /** The grid size of a cluster in pixels. The grid is a square. The default value is 60. */\n  gridSize?: number\n  /** Whether to ignore hidden markers in clusters. You may want to set this to true to ensure that hidden markers are not included in the marker count that appears on a cluster marker (this count is the value of the text property of the result returned by the default calculator). If set to true and you change the visibility of a marker being clustered, be sure to also call MarkerClusterer.repaint(). The default value is false. */\n  ignoreHidden?: boolean\n  /** The extension name for the cluster icon image files (e.g., \"png\" or \"jpg\"). The default value is MarkerClusterer.IMAGE_EXTENSION. */\n  imageExtension?: string\n  /** The full URL of the root name of the group of image files to use for cluster icons. The complete file name is of the form imagePath.imageExtension where n is the image file number (1, 2, etc.). The default value is MarkerClusterer.IMAGE_PATH. */\n  imagePath?: string\n  /** An array of numbers containing the widths of the group of imagePath.imageExtension image files. (The images are assumed to be square.) The default value is MarkerClusterer.IMAGE_SIZES. */\n  imageSizes?: number[]\n  /** The maximum zoom level at which clustering is enabled or null if clustering is to be enabled at all zoom levels. The default value is null. */\n  maxZoom?: number\n  /** The minimum number of markers needed in a cluster before the markers are hidden and a cluster marker appears. The default value is 2. */\n  minimumClusterSize?: number\n  /** An array of ClusterIconStyle elements defining the styles of the cluster markers to be used. The element to be used to style a given cluster marker is determined by the function defined by the calculator property. The default is an array of ClusterIconStyle elements whose properties are derived from the values for imagePath, imageExtension, and imageSizes. */\n  styles?: ClusterIconStyle[]\n  /** The tooltip to display when the mouse moves over a cluster marker. (Alternatively, you can use a custom calculator function to specify a different tooltip for each cluster marker.) The default value is \"\". */\n  title?: string\n  /** Whether to zoom the map when a cluster marker is clicked. You may want to set this to false if you have installed a handler for the click event and it deals with zooming on its own. The default value is true. */\n  zoomOnClick?: boolean\n  /** This event is fired when a cluster marker is clicked. */\n  onClick?: (cluster: Cluster) => void\n  /** This event is fired when the MarkerClusterer begins clustering markers. */\n  onClusteringBegin?: (markerClusterer: Clusterer) => void\n  /** This event is fired when the MarkerClusterer stops clustering markers. */\n  onClusteringEnd?: (markerClusterer: Clusterer) => void\n  /** \tThis event is fired when the mouse moves over a cluster marker. */\n  onMouseOver?: (cluster: Cluster) => void\n  /** This event is fired when the mouse moves out of a cluster marker. */\n  onMouseOut?: (cluster: Cluster) => void\n  /** This callback is called when the markerClusterer instance has loaded. It is called with the markerClusterer instance. */\n  onLoad?: (markerClusterer: Clusterer) => void\n  /** This callback is called when the component unmounts. It is called with the markerClusterer instance. */\n  onUnmount?: (markerClusterer: Clusterer) => void\n}\n\nexport class ClustererComponent extends React.PureComponent<ClustererProps, ClustererState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: ClustererState = {\n    markerClusterer: null,\n  }\n\n  setClustererCallback = (): void => {\n    if (this.state.markerClusterer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.markerClusterer)\n    }\n  }\n\n  componentDidMount(): void {\n    if (this.context) {\n      const markerClusterer = new Clusterer(this.context, [], this.props.options)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps: {},\n        nextProps: this.props,\n        instance: markerClusterer,\n      })\n\n      this.setState(function setClusterer(): ClustererState {\n        return {\n          markerClusterer,\n        }\n      }, this.setClustererCallback)\n    }\n  }\n\n  componentDidUpdate(prevProps: ClustererProps): void {\n    if (this.state.markerClusterer) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.markerClusterer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.markerClusterer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.markerClusterer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.state.markerClusterer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return this.state.markerClusterer !== null\n      ? this.props.children(this.state.markerClusterer)\n      : null\n  }\n}\n\nexport default ClustererComponent\n","var InfoBox = /** @class */ (function () {\n    function InfoBox(options) {\n        if (options === void 0) { options = {}; }\n        this.extend(InfoBox, google.maps.OverlayView);\n        // Standard options (in common with google.maps.InfoWindow):\n        this.content = options.content || '';\n        this.disableAutoPan = options.disableAutoPan || false;\n        this.maxWidth = options.maxWidth || 0;\n        this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0);\n        this.position = options.position || new google.maps.LatLng(0, 0);\n        this.zIndex = options.zIndex || null;\n        // Additional options (unique to InfoBox):\n        this.boxClass = options.boxClass || 'infoBox';\n        this.boxStyle = options.boxStyle || {};\n        this.closeBoxMargin = options.closeBoxMargin || '2px';\n        this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif';\n        if (options.closeBoxURL === '') {\n            this.closeBoxURL = '';\n        }\n        this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1);\n        if (typeof options.visible === 'undefined') {\n            if (typeof options.isHidden === 'undefined') {\n                options.visible = true;\n            }\n            else {\n                options.visible = !options.isHidden;\n            }\n        }\n        this.isHidden = !options.visible;\n        this.alignBottom = options.alignBottom || false;\n        this.pane = options.pane || 'floatPane';\n        this.enableEventPropagation = options.enableEventPropagation || false;\n        this.div = null;\n        this.closeListener = null;\n        this.moveListener = null;\n        this.mapListener = null;\n        this.contextListener = null;\n        this.eventListeners = null;\n        this.fixedWidthSet = null;\n    }\n    InfoBox.prototype.createInfoBoxDiv = function () {\n        var _this = this;\n        // This handler prevents an event in the InfoBox from being passed on to the map.\n        function cancelHandler(event) {\n            event.cancelBubble = true;\n            if (event.stopPropagation) {\n                event.stopPropagation();\n            }\n        }\n        // This handler ignores the current event in the InfoBox and conditionally prevents\n        // the event from being passed on to the map. It is used for the contextmenu event.\n        // eslint-disable-next-line  @getify/proper-arrows/this\n        var ignoreHandler = function (event) {\n            event.returnValue = false;\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            if (!_this.enableEventPropagation) {\n                cancelHandler(event);\n            }\n        };\n        if (!this.div) {\n            this.div = document.createElement('div');\n            this.setBoxStyle();\n            if (typeof this.content === 'string') {\n                this.div.innerHTML = this.getCloseBoxImg() + this.content;\n            }\n            else {\n                this.div.innerHTML = this.getCloseBoxImg();\n                this.div.appendChild(this.content);\n            }\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            var panes = this.getPanes();\n            panes[this.pane].appendChild(this.div); // Add the InfoBox div to the DOM\n            this.addClickHandler();\n            if (this.div.style.width) {\n                this.fixedWidthSet = true;\n            }\n            else {\n                if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n                    this.div.style.width = this.maxWidth + 'px';\n                    this.fixedWidthSet = true;\n                }\n                else {\n                    // The following code is needed to overcome problems with MSIE\n                    var bw = this.getBoxWidths();\n                    this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px';\n                    this.fixedWidthSet = false;\n                }\n            }\n            this.panBox(this.disableAutoPan);\n            if (!this.enableEventPropagation) {\n                this.eventListeners = [];\n                // Cancel event propagation.\n                // Note: mousemove not included (to resolve Issue 152)\n                var events = [\n                    'mousedown',\n                    'mouseover',\n                    'mouseout',\n                    'mouseup',\n                    'click',\n                    'dblclick',\n                    'touchstart',\n                    'touchend',\n                    'touchmove',\n                ];\n                for (var i = 0; i < events.length; i++) {\n                    this.eventListeners.push(google.maps.event.addDomListener(this.div, events[i], cancelHandler));\n                }\n                // Workaround for Google bug that causes the cursor to change to a pointer\n                // when the mouse moves over a marker underneath InfoBox.\n                this.eventListeners.push(google.maps.event.addDomListener(this.div, 'mouseover', \n                // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n                function () {\n                    if (_this.div) {\n                        _this.div.style.cursor = 'default';\n                    }\n                }));\n            }\n            this.contextListener = google.maps.event.addDomListener(this.div, 'contextmenu', ignoreHandler);\n            /**\n             * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n             * @name InfoBox#domready\n             * @event\n             */\n            google.maps.event.trigger(this, 'domready');\n        }\n    };\n    InfoBox.prototype.getCloseBoxImg = function () {\n        var img = '';\n        if (this.closeBoxURL !== '') {\n            img = '<img alt=\"\"';\n            img += ' aria-hidden=\"true\"';\n            img += \" src='\" + this.closeBoxURL + \"'\";\n            img += ' align=right'; // Do this because Opera chokes on style='float: right;'\n            img += \" style='\";\n            img += ' position: relative;'; // Required by MSIE\n            img += ' cursor: pointer;';\n            img += ' margin: ' + this.closeBoxMargin + ';';\n            img += \"'>\";\n        }\n        return img;\n    };\n    InfoBox.prototype.addClickHandler = function () {\n        if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n            var closeBox = this.div.firstChild;\n            this.closeListener = google.maps.event.addDomListener(closeBox, 'click', this.getCloseClickHandler());\n        }\n        else {\n            this.closeListener = null;\n        }\n    };\n    InfoBox.prototype.getCloseClickHandler = function () {\n        var _this = this;\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        return function (event) {\n            // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n            event.cancelBubble = true;\n            if (event.stopPropagation) {\n                event.stopPropagation();\n            }\n            /**\n             * This event is fired when the InfoBox's close box is clicked.\n             * @name InfoBox#closeclick\n             * @event\n             */\n            google.maps.event.trigger(_this, 'closeclick');\n            _this.close();\n        };\n    };\n    InfoBox.prototype.panBox = function (disablePan) {\n        if (this.div && !disablePan) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            var map = this.getMap();\n            // Only pan if attached to map, not panorama\n            if (map instanceof google.maps.Map) {\n                var xOffset = 0;\n                var yOffset = 0;\n                var bounds = map.getBounds();\n                if (bounds && !bounds.contains(this.position)) {\n                    // Marker not in visible area of map, so set center\n                    // of map to the marker position first.\n                    map.setCenter(this.position);\n                }\n                var mapDiv = map.getDiv();\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                var mapWidth = mapDiv.offsetWidth;\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                var mapHeight = mapDiv.offsetHeight;\n                var iwOffsetX = this.pixelOffset.width;\n                var iwOffsetY = this.pixelOffset.height;\n                var iwWidth = this.div.offsetWidth;\n                var iwHeight = this.div.offsetHeight;\n                var padX = this.infoBoxClearance.width;\n                var padY = this.infoBoxClearance.height;\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                var projection = this.getProjection();\n                var pixPosition = projection.fromLatLngToContainerPixel(this.position);\n                if (pixPosition !== null) {\n                    if (pixPosition.x < -iwOffsetX + padX) {\n                        xOffset = pixPosition.x + iwOffsetX - padX;\n                    }\n                    else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n                        xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;\n                    }\n                    if (this.alignBottom) {\n                        if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n                            yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;\n                        }\n                        else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n                            yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;\n                        }\n                    }\n                    else {\n                        if (pixPosition.y < -iwOffsetY + padY) {\n                            yOffset = pixPosition.y + iwOffsetY - padY;\n                        }\n                        else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n                            yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;\n                        }\n                    }\n                }\n                if (!(xOffset === 0 && yOffset === 0)) {\n                    // Move the map to the shifted center.\n                    map.panBy(xOffset, yOffset);\n                }\n            }\n        }\n    };\n    InfoBox.prototype.setBoxStyle = function () {\n        if (this.div) {\n            // Apply style values from the style sheet defined in the boxClass parameter:\n            this.div.className = this.boxClass;\n            // Clear existing inline style values:\n            this.div.style.cssText = '';\n            // Apply style values defined in the boxStyle parameter:\n            var boxStyle = this.boxStyle;\n            for (var i in boxStyle) {\n                if (boxStyle.hasOwnProperty(i)) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                    // @ts-ignore\n                    this.div.style[i] = boxStyle[i];\n                }\n            }\n            // Fix for iOS disappearing InfoBox problem\n            // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n            this.div.style.webkitTransform = 'translateZ(0)';\n            // Fix up opacity style for benefit of MSIE\n            if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n                // See http://www.quirksmode.org/css/opacity.html\n                var opacity = parseFloat(this.div.style.opacity || '');\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                this.div.style.msFilter =\n                    '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"';\n                this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\n            }\n            // Apply required styles\n            this.div.style.position = 'absolute';\n            this.div.style.visibility = 'hidden';\n            if (this.zIndex !== null) {\n                this.div.style.zIndex = this.zIndex + '';\n            }\n            if (!this.div.style.overflow) {\n                this.div.style.overflow = 'auto';\n            }\n        }\n    };\n    InfoBox.prototype.getBoxWidths = function () {\n        var bw = { top: 0, bottom: 0, left: 0, right: 0 };\n        if (!this.div) {\n            return bw;\n        }\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var ownerDocument = this.div.ownerDocument;\n            var computedStyle = ownerDocument && ownerDocument.defaultView\n                ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n                : null;\n            if (computedStyle) {\n                // The computed styles are always in pixel units (good!)\n                bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0;\n                bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0;\n                bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0;\n                bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0;\n            }\n        }\n        else if (\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        document.documentElement.currentStyle // MSIE\n        ) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            var currentStyle = this.div.currentStyle;\n            if (currentStyle) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // The current styles may not be in pixel units, but assume they are (bad!)\n                bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0;\n                bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0;\n                bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0;\n                bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0;\n            }\n        }\n        return bw;\n    };\n    InfoBox.prototype.onRemove = function () {\n        if (this.div && this.div.parentNode) {\n            this.div.parentNode.removeChild(this.div);\n            this.div = null;\n        }\n    };\n    InfoBox.prototype.draw = function () {\n        this.createInfoBoxDiv();\n        if (this.div) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            var projection = this.getProjection();\n            var pixPosition = projection.fromLatLngToDivPixel(this.position);\n            if (pixPosition !== null) {\n                this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px';\n                if (this.alignBottom) {\n                    this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px';\n                }\n                else {\n                    this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px';\n                }\n            }\n            if (this.isHidden) {\n                this.div.style.visibility = 'hidden';\n            }\n            else {\n                this.div.style.visibility = 'visible';\n            }\n        }\n    };\n    InfoBox.prototype.setOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        if (typeof options.boxClass !== 'undefined') {\n            // Must be first\n            this.boxClass = options.boxClass;\n            this.setBoxStyle();\n        }\n        if (typeof options.boxStyle !== 'undefined') {\n            // Must be second\n            this.boxStyle = options.boxStyle;\n            this.setBoxStyle();\n        }\n        if (typeof options.content !== 'undefined') {\n            this.setContent(options.content);\n        }\n        if (typeof options.disableAutoPan !== 'undefined') {\n            this.disableAutoPan = options.disableAutoPan;\n        }\n        if (typeof options.maxWidth !== 'undefined') {\n            this.maxWidth = options.maxWidth;\n        }\n        if (typeof options.pixelOffset !== 'undefined') {\n            this.pixelOffset = options.pixelOffset;\n        }\n        if (typeof options.alignBottom !== 'undefined') {\n            this.alignBottom = options.alignBottom;\n        }\n        if (typeof options.position !== 'undefined') {\n            this.setPosition(options.position);\n        }\n        if (typeof options.zIndex !== 'undefined') {\n            this.setZIndex(options.zIndex);\n        }\n        if (typeof options.closeBoxMargin !== 'undefined') {\n            this.closeBoxMargin = options.closeBoxMargin;\n        }\n        if (typeof options.closeBoxURL !== 'undefined') {\n            this.closeBoxURL = options.closeBoxURL;\n        }\n        if (typeof options.infoBoxClearance !== 'undefined') {\n            this.infoBoxClearance = options.infoBoxClearance;\n        }\n        if (typeof options.isHidden !== 'undefined') {\n            this.isHidden = options.isHidden;\n        }\n        if (typeof options.visible !== 'undefined') {\n            this.isHidden = !options.visible;\n        }\n        if (typeof options.enableEventPropagation !== 'undefined') {\n            this.enableEventPropagation = options.enableEventPropagation;\n        }\n        if (this.div) {\n            this.draw();\n        }\n    };\n    InfoBox.prototype.setContent = function (content) {\n        this.content = content;\n        if (this.div) {\n            if (this.closeListener) {\n                google.maps.event.removeListener(this.closeListener);\n                this.closeListener = null;\n            }\n            // Odd code required to make things work with MSIE.\n            if (!this.fixedWidthSet) {\n                this.div.style.width = '';\n            }\n            if (typeof content === 'string') {\n                this.div.innerHTML = this.getCloseBoxImg() + content;\n            }\n            else {\n                this.div.innerHTML = this.getCloseBoxImg();\n                this.div.appendChild(content);\n            }\n            // Perverse code required to make things work with MSIE.\n            // (Ensures the close box does, in fact, float to the right.)\n            if (!this.fixedWidthSet) {\n                this.div.style.width = this.div.offsetWidth + 'px';\n                if (typeof content === 'string') {\n                    this.div.innerHTML = this.getCloseBoxImg() + content;\n                }\n                else {\n                    this.div.innerHTML = this.getCloseBoxImg();\n                    this.div.appendChild(content);\n                }\n            }\n            this.addClickHandler();\n        }\n        /**\n         * This event is fired when the content of the InfoBox changes.\n         * @name InfoBox#content_changed\n         * @event\n         */\n        google.maps.event.trigger(this, 'content_changed');\n    };\n    InfoBox.prototype.setPosition = function (latLng) {\n        this.position = latLng;\n        if (this.div) {\n            this.draw();\n        }\n        /**\n         * This event is fired when the position of the InfoBox changes.\n         * @name InfoBox#position_changed\n         * @event\n         */\n        google.maps.event.trigger(this, 'position_changed');\n    };\n    InfoBox.prototype.setVisible = function (isVisible) {\n        this.isHidden = !isVisible;\n        if (this.div) {\n            this.div.style.visibility = this.isHidden ? 'hidden' : 'visible';\n        }\n    };\n    InfoBox.prototype.setZIndex = function (index) {\n        this.zIndex = index;\n        if (this.div) {\n            this.div.style.zIndex = index + '';\n        }\n        /**\n         * This event is fired when the zIndex of the InfoBox changes.\n         * @name InfoBox#zindex_changed\n         * @event\n         */\n        google.maps.event.trigger(this, 'zindex_changed');\n    };\n    InfoBox.prototype.getContent = function () {\n        return this.content;\n    };\n    InfoBox.prototype.getPosition = function () {\n        return this.position;\n    };\n    InfoBox.prototype.getZIndex = function () {\n        return this.zIndex;\n    };\n    InfoBox.prototype.getVisible = function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var map = this.getMap();\n        var isVisible;\n        if (typeof map === 'undefined' || map === null) {\n            isVisible = false;\n        }\n        else {\n            isVisible = !this.isHidden;\n        }\n        return isVisible;\n    };\n    InfoBox.prototype.show = function () {\n        this.isHidden = false;\n        if (this.div) {\n            this.div.style.visibility = 'visible';\n        }\n    };\n    InfoBox.prototype.hide = function () {\n        this.isHidden = true;\n        if (this.div) {\n            this.div.style.visibility = 'hidden';\n        }\n    };\n    InfoBox.prototype.open = function (map, anchor) {\n        var _this = this;\n        if (anchor) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.position = anchor.getPosition();\n            this.moveListener = google.maps.event.addListener(anchor, 'position_changed', \n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            function () {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                var position = anchor.getPosition();\n                _this.setPosition(position);\n            });\n            this.mapListener = google.maps.event.addListener(anchor, 'map_changed', \n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            function () {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                _this.setMap(anchor.map);\n            });\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.setMap(map);\n        if (this.div) {\n            this.panBox();\n        }\n    };\n    InfoBox.prototype.close = function () {\n        if (this.closeListener) {\n            google.maps.event.removeListener(this.closeListener);\n            this.closeListener = null;\n        }\n        if (this.eventListeners) {\n            for (var i = 0; i < this.eventListeners.length; i++) {\n                google.maps.event.removeListener(this.eventListeners[i]);\n            }\n            this.eventListeners = null;\n        }\n        if (this.moveListener) {\n            google.maps.event.removeListener(this.moveListener);\n            this.moveListener = null;\n        }\n        if (this.mapListener) {\n            google.maps.event.removeListener(this.mapListener);\n            this.mapListener = null;\n        }\n        if (this.contextListener) {\n            google.maps.event.removeListener(this.contextListener);\n            this.contextListener = null;\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.setMap(null);\n    };\n    InfoBox.prototype.extend = function (obj1, obj2) {\n        return function applyExtend(object) {\n            // eslint-disable-next-line guard-for-in\n            for (var property in object.prototype) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                if (!this.prototype.hasOwnProperty(property)) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                    // @ts-ignore\n                    this.prototype[property] = object.prototype[property];\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            return this;\n        }.apply(obj1, [obj2]);\n    };\n    return InfoBox;\n}());\n\nexport { InfoBox };\n//# sourceMappingURL=esm.js.map\n","/* global google */\n/* eslint-disable filenames/match-exported */\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport invariant from 'invariant'\nimport {\n  InfoBox as GoogleMapsInfoBox,\n  InfoBoxOptions as GoogleMapsInfoBoxOptions,\n} from '@react-google-maps/infobox'\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  options(instance: GoogleMapsInfoBox, options: GoogleMapsInfoBoxOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: GoogleMapsInfoBox,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    if (position instanceof google.maps.LatLng) {\n      instance.setPosition(position)\n    } else {\n      instance.setPosition(new google.maps.LatLng(position.lat, position.lng))\n    }\n  },\n  visible(instance: GoogleMapsInfoBox, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zIndex(instance: GoogleMapsInfoBox, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ntype InfoBoxOptions = Omit<GoogleMapsInfoBoxOptions, 'position'> & {\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n}\n\ninterface InfoBoxState {\n  infoBox: GoogleMapsInfoBox | null\n}\n\nexport interface InfoBoxProps {\n  /** Can be any MVCObject that exposes a LatLng position property and optionally a Point anchorPoint property for calculating the pixelOffset. The anchorPoint is the offset from the anchor's position to the tip of the InfoBox. */\n  anchor?: google.maps.MVCObject\n  options?: InfoBoxOptions\n  /** The LatLng at which to display this InfoBox. If the InfoBox is opened with an anchor, the anchor's position will be used instead. */\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** All InfoBoxes are displayed on the map in order of their zIndex, with higher values displaying in front of InfoBoxes with lower values. By default, InfoBoxes are displayed according to their latitude, with InfoBoxes of lower latitudes appearing in front of InfoBoxes at higher latitudes. InfoBoxes are always displayed in front of markers. */\n  zIndex?: number\n  /** This event is fired when the close button was clicked. */\n  onCloseClick?: () => void\n  /** This event is fired when the <div> containing the InfoBox's content is attached to the DOM. You may wish to monitor this event if you are building out your info window content dynamically. */\n  onDomReady?: () => void\n  /** This event is fired when the content property changes. */\n  onContentChanged?: () => void\n  /** This event is fired when the position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired when the InfoBox's zIndex changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the infoBox instance has loaded. It is called with the infoBox instance. */\n  onLoad?: (infoBox: GoogleMapsInfoBox) => void\n  /** This callback is called when the component unmounts. It is called with the infoBox instance. */\n  onUnmount?: (infoBox: GoogleMapsInfoBox) => void\n}\n\nexport class InfoBoxComponent extends React.PureComponent<InfoBoxProps, InfoBoxState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: HTMLElement | null = null\n\n  state: InfoBoxState = {\n    infoBox: null,\n  }\n\n  open = (infoBox: GoogleMapsInfoBox, anchor?: google.maps.MVCObject): void => {\n    if (anchor) {\n      infoBox.open(this.context, anchor)\n    } else if (infoBox.getPosition()) {\n      infoBox.open(this.context)\n    } else {\n      invariant(false, 'You must provide either an anchor or a position prop for <InfoBox>.')\n    }\n  }\n\n  setInfoBoxCallback = (): void => {\n    const { anchor, onLoad } = this.props\n    const { infoBox } = this.state\n\n    if (infoBox !== null && this.containerElement !== null) {\n      infoBox.setContent(this.containerElement)\n      this.open(infoBox, anchor)\n\n      if (onLoad) {\n        onLoad(infoBox)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const { options } = this.props\n    const { position, ...infoBoxOptions }: InfoBoxOptions = options || {}\n\n    let positionLatLng: google.maps.LatLng | undefined\n    if (position && !(position instanceof google.maps.LatLng)) {\n      positionLatLng = new google.maps.LatLng(position.lat, position.lng)\n    }\n\n    const infoBox = new GoogleMapsInfoBox({\n      ...infoBoxOptions,\n      ...(positionLatLng ? { position: positionLatLng } : {}),\n    })\n\n    this.containerElement = document.createElement('div')\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoBox,\n    })\n\n    this.setState({ infoBox }, this.setInfoBoxCallback)\n  }\n\n  componentDidUpdate(prevProps: InfoBoxProps): void {\n    const { infoBox } = this.state\n\n    if (infoBox !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: infoBox,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    const { onUnmount } = this.props\n    const { infoBox } = this.state\n\n    if (infoBox !== null) {\n      if (onUnmount) {\n        onUnmount(infoBox)\n      }\n\n      unregisterEvents(this.registeredEvents)\n      infoBox.close()\n    }\n  }\n\n  render(): React.ReactPortal | null {\n    if (!this.containerElement) {\n      return null\n    }\n\n    return ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement)\n  }\n}\n\nexport default InfoBoxComponent\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexport default clone;\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","\"use strict\";\n\nmodule.exports = {\n\t/**\n  * Euclidean distance\n  */\n\teudist: function eudist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar d = (v1[i] || 0) - (v2[i] || 0);\n\t\t\tsum += d * d;\n\t\t}\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\tmandist: function mandist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tsum += Math.abs((v1[i] || 0) - (v2[i] || 0));\n\t\t}\n\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\n\n\t/**\n  * Unidimensional distance\n  */\n\tdist: function dist(v1, v2, sqrt) {\n\t\tvar d = Math.abs(v1 - v2);\n\t\treturn sqrt ? d : d * d;\n\t}\n};\n//# sourceMappingURL=distance.js.map\n","\"use strict\";\n\nvar Distance = require(\"./distance.js\"),\n    eudist = Distance.eudist,\n    dist = Distance.dist;\n\nmodule.exports = {\n\tkmrand: function kmrand(data, k) {\n\t\tvar map = {},\n\t\t    ks = [],\n\t\t    t = k << 2;\n\t\tvar len = data.length;\n\t\tvar multi = data[0].length > 0;\n\n\t\twhile (ks.length < k && t-- > 0) {\n\t\t\tvar d = data[Math.floor(Math.random() * len)];\n\t\t\tvar key = multi ? d.join(\"_\") : \"\" + d;\n\t\t\tif (!map[key]) {\n\t\t\t\tmap[key] = true;\n\t\t\t\tks.push(d);\n\t\t\t}\n\t\t}\n\n\t\tif (ks.length < k) throw new Error(\"Error initializating clusters\");else return ks;\n\t},\n\n\n\t/**\n  * K-means++ initial centroid selection\n  */\n\tkmpp: function kmpp(data, k) {\n\t\tvar distance = data[0].length ? eudist : dist;\n\t\tvar ks = [],\n\t\t    len = data.length;\n\t\tvar multi = data[0].length > 0;\n\t\tvar map = {};\n\n\t\t// First random centroid\n\t\tvar c = data[Math.floor(Math.random() * len)];\n\t\tvar key = multi ? c.join(\"_\") : \"\" + c;\n\t\tks.push(c);\n\t\tmap[key] = true;\n\n\t\t// Retrieve next centroids\n\t\twhile (ks.length < k) {\n\t\t\t// Min Distances between current centroids and data points\n\t\t\tvar dists = [],\n\t\t\t    lk = ks.length;\n\t\t\tvar dsum = 0,\n\t\t\t    prs = [];\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar min = Infinity;\n\t\t\t\tfor (var j = 0; j < lk; j++) {\n\t\t\t\t\tvar _dist = distance(data[i], ks[j]);\n\t\t\t\t\tif (_dist <= min) min = _dist;\n\t\t\t\t}\n\t\t\t\tdists[i] = min;\n\t\t\t}\n\n\t\t\t// Sum all min distances\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tdsum += dists[_i];\n\t\t\t}\n\n\t\t\t// Probabilities and cummulative prob (cumsum)\n\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\tprs[_i2] = { i: _i2, v: data[_i2], pr: dists[_i2] / dsum, cs: 0 };\n\t\t\t}\n\n\t\t\t// Sort Probabilities\n\t\t\tprs.sort(function (a, b) {\n\t\t\t\treturn a.pr - b.pr;\n\t\t\t});\n\n\t\t\t// Cummulative Probabilities\n\t\t\tprs[0].cs = prs[0].pr;\n\t\t\tfor (var _i3 = 1; _i3 < len; _i3++) {\n\t\t\t\tprs[_i3].cs = prs[_i3 - 1].cs + prs[_i3].pr;\n\t\t\t}\n\n\t\t\t// Randomize\n\t\t\tvar rnd = Math.random();\n\n\t\t\t// Gets only the items whose cumsum >= rnd\n\t\t\tvar idx = 0;\n\t\t\twhile (idx < len - 1 && prs[idx++].cs < rnd) {}\n\t\t\tks.push(prs[idx - 1].v);\n\t\t\t/*\n   let done = false;\n   while(!done) {\n   \t// this is our new centroid\n   \tc = prs[idx-1].v\n   \tkey = multi? c.join(\"_\") : `${c}`;\n   \tif(!map[key]) {\n   \t\tmap[key] = true;\n   \t\tks.push(c);\n   \t\tdone = true;\n   \t}\n   \telse {\n   \t\tidx++;\n   \t}\n   }\n   */\n\t\t}\n\n\t\treturn ks;\n\t}\n};\n//# sourceMappingURL=kinit.js.map\n","\"use strict\";\n\n/*jshint esversion: 6 */\n\nvar Distance = require(\"./distance.js\"),\n    ClusterInit = require(\"./kinit.js\"),\n    eudist = Distance.eudist,\n    mandist = Distance.mandist,\n    dist = Distance.dist,\n    kmrand = ClusterInit.kmrand,\n    kmpp = ClusterInit.kmpp;\n\nvar MAX = 10000;\n\n/**\n * Inits an array with values\n */\nfunction init(len, val, v) {\n\tv = v || [];\n\tfor (var i = 0; i < len; i++) {\n\t\tv[i] = val;\n\t}return v;\n}\n\nfunction skmeans(data, k, initial, maxit) {\n\tvar ks = [],\n\t    old = [],\n\t    idxs = [],\n\t    dist = [];\n\tvar conv = false,\n\t    it = maxit || MAX;\n\tvar len = data.length,\n\t    vlen = data[0].length,\n\t    multi = vlen > 0;\n\tvar count = [];\n\n\tif (!initial) {\n\t\tvar _idxs = {};\n\t\twhile (ks.length < k) {\n\t\t\tvar idx = Math.floor(Math.random() * len);\n\t\t\tif (!_idxs[idx]) {\n\t\t\t\t_idxs[idx] = true;\n\t\t\t\tks.push(data[idx]);\n\t\t\t}\n\t\t}\n\t} else if (initial == \"kmrand\") {\n\t\tks = kmrand(data, k);\n\t} else if (initial == \"kmpp\") {\n\t\tks = kmpp(data, k);\n\t} else {\n\t\tks = initial;\n\t}\n\n\tdo {\n\t\t// Reset k count\n\t\tinit(k, 0, count);\n\n\t\t// For each value in data, find the nearest centroid\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar min = Infinity,\n\t\t\t    _idx = 0;\n\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t// Multidimensional or unidimensional\n\t\t\t\tvar dist = multi ? eudist(data[i], ks[j]) : Math.abs(data[i] - ks[j]);\n\t\t\t\tif (dist <= min) {\n\t\t\t\t\tmin = dist;\n\t\t\t\t\t_idx = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidxs[i] = _idx; // Index of the selected centroid for that value\n\t\t\tcount[_idx]++; // Number of values for this centroid\n\t\t}\n\n\t\t// Recalculate centroids\n\t\tvar sum = [],\n\t\t    old = [],\n\t\t    dif = 0;\n\t\tfor (var _j = 0; _j < k; _j++) {\n\t\t\t// Multidimensional or unidimensional\n\t\t\tsum[_j] = multi ? init(vlen, 0, sum[_j]) : 0;\n\t\t\told[_j] = ks[_j];\n\t\t}\n\n\t\t// If multidimensional\n\t\tif (multi) {\n\t\t\tfor (var _j2 = 0; _j2 < k; _j2++) {\n\t\t\t\tks[_j2] = [];\n\t\t\t} // Sum values and count for each centroid\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tvar _idx2 = idxs[_i],\n\t\t\t\t    // Centroid for that item\n\t\t\t\tvsum = sum[_idx2],\n\t\t\t\t    // Sum values for this centroid\n\t\t\t\tvect = data[_i]; // Current vector\n\n\t\t\t\t// Accumulate value on the centroid for current vector\n\t\t\t\tfor (var h = 0; h < vlen; h++) {\n\t\t\t\t\tvsum[h] += vect[h];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tconv = true;\n\t\t\tfor (var _j3 = 0; _j3 < k; _j3++) {\n\t\t\t\tvar ksj = ks[_j3],\n\t\t\t\t    // Current centroid\n\t\t\t\tsumj = sum[_j3],\n\t\t\t\t    // Accumulated centroid values\n\t\t\t\toldj = old[_j3],\n\t\t\t\t    // Old centroid value\n\t\t\t\tcj = count[_j3]; // Number of elements for this centroid\n\n\t\t\t\t// New average\n\t\t\t\tfor (var _h = 0; _h < vlen; _h++) {\n\t\t\t\t\tksj[_h] = sumj[_h] / cj || 0; // New centroid\n\t\t\t\t}\n\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tif (conv) {\n\t\t\t\t\tfor (var _h2 = 0; _h2 < vlen; _h2++) {\n\t\t\t\t\t\tif (oldj[_h2] != ksj[_h2]) {\n\t\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If unidimensional\n\t\telse {\n\t\t\t\t// Sum values and count for each centroid\n\t\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\t\tvar _idx3 = idxs[_i2];\n\t\t\t\t\tsum[_idx3] += data[_i2];\n\t\t\t\t}\n\t\t\t\t// Calculate the average for each centroid\n\t\t\t\tfor (var _j4 = 0; _j4 < k; _j4++) {\n\t\t\t\t\tks[_j4] = sum[_j4] / count[_j4] || 0; // New centroid\n\t\t\t\t}\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tconv = true;\n\t\t\t\tfor (var _j5 = 0; _j5 < k; _j5++) {\n\t\t\t\t\tif (old[_j5] != ks[_j5]) {\n\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\tconv = conv || --it <= 0;\n\t} while (!conv);\n\n\treturn {\n\t\tit: MAX - it,\n\t\tk: k,\n\t\tidxs: idxs,\n\t\tcentroids: ks\n\t};\n}\n\nmodule.exports = skmeans;\n//# sourceMappingURL=main.js.map\n","import clone from \"@turf/clone\";\nimport { coordAll, featureEach } from \"@turf/meta\";\nimport skmeans from \"skmeans\";\n/**\n * Takes a set of {@link Point|points} and partition them into clusters using the k-mean .\n * It uses the [k-means algorithm](https://en.wikipedia.org/wiki/K-means_clustering)\n *\n * @name clustersKmeans\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.numberOfClusters=Math.sqrt(numberOfPoints/2)] numberOfClusters that will be generated\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {[number, number]} centroid - Centroid of the cluster [Longitude, Latitude]\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var options = {numberOfClusters: 7};\n * var clustered = turf.clustersKmeans(points, options);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersKmeans(points, options) {\n    if (options === void 0) { options = {}; }\n    // Default Params\n    var count = points.features.length;\n    options.numberOfClusters =\n        options.numberOfClusters || Math.round(Math.sqrt(count / 2));\n    // numberOfClusters can't be greater than the number of points\n    // fallbacks to count\n    if (options.numberOfClusters > count)\n        options.numberOfClusters = count;\n    // Clone points to prevent any mutations (enabled by default)\n    if (options.mutate !== true)\n        points = clone(points);\n    // collect points coordinates\n    var data = coordAll(points);\n    // create seed to avoid skmeans to drift\n    var initialCentroids = data.slice(0, options.numberOfClusters);\n    // create skmeans clusters\n    var skmeansResult = skmeans(data, options.numberOfClusters, initialCentroids);\n    // store centroids {clusterId: [number, number]}\n    var centroids = {};\n    skmeansResult.centroids.forEach(function (coord, idx) {\n        centroids[idx] = coord;\n    });\n    // add associated cluster number\n    featureEach(points, function (point, index) {\n        var clusterId = skmeansResult.idxs[index];\n        point.properties.cluster = clusterId;\n        point.properties.centroid = centroids[clusterId];\n    });\n    return points;\n}\nexport default clustersKmeans;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n","/**\r\n * DBSCAN - Density based clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * DBSCAN class construcotr\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {DBSCAN}\r\n */\r\nfunction DBSCAN(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {Array} */\r\n  this.dataset = [];\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 2;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n  /** @type {Array} */\r\n  this.clusters = [];\r\n  /** @type {Array} */\r\n  this.noise = [];\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._visited = [];\r\n  /** @type {Array} */\r\n  this._assigned = [];\r\n  /** @type {number} */\r\n  this._datasetLength = 0;\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n};\r\n\r\n/******************************************************************************/\r\n// public functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nDBSCAN.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0; pointId < this._datasetLength; pointId++) {\r\n    // if point is not visited, check if it forms a cluster\r\n    if (this._visited[pointId] !== 1) {\r\n      this._visited[pointId] = 1;\r\n\r\n      // if closest neighborhood is too small to form a cluster, mark as noise\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      if (neighbors.length < this.minPts) {\r\n        this.noise.push(pointId);\r\n      } else {\r\n        // create new cluster and add point\r\n        var clusterId = this.clusters.length;\r\n        this.clusters.push([]);\r\n        this._addToCluster(pointId, clusterId);\r\n\r\n        this._expandCluster(clusterId, neighbors);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this.noise = [];\r\n\r\n    this._datasetLength = dataset.length;\r\n    this._visited = new Array(this._datasetLength);\r\n    this._assigned = new Array(this._datasetLength);\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Expand cluster to closest points of given neighborhood\r\n *\r\n * @param {number} clusterId\r\n * @param {Array} neighbors\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._expandCluster = function(clusterId, neighbors) {\r\n\r\n  /**\r\n   * It's very important to calculate length of neighbors array each time,\r\n   * as the number of elements changes over time\r\n   */\r\n  for (var i = 0; i < neighbors.length; i++) {\r\n    var pointId2 = neighbors[i];\r\n\r\n    if (this._visited[pointId2] !== 1) {\r\n      this._visited[pointId2] = 1;\r\n      var neighbors2 = this._regionQuery(pointId2);\r\n\r\n      if (neighbors2.length >= this.minPts) {\r\n        neighbors = this._mergeArrays(neighbors, neighbors2);\r\n      }\r\n    }\r\n\r\n    // add to cluster\r\n    if (this._assigned[pointId2] !== 1) {\r\n      this._addToCluster(pointId2, clusterId);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add new point to cluster\r\n *\r\n * @param {number} pointId\r\n * @param {number} clusterId\r\n */\r\nDBSCAN.prototype._addToCluster = function(pointId, clusterId) {\r\n  this.clusters[clusterId].push(pointId);\r\n  this._assigned[pointId] = 1;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId,\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._regionQuery = function(pointId) {\r\n  var neighbors = [];\r\n\r\n  for (var id = 0; id < this._datasetLength; id++) {\r\n    var dist = this.distance(this.dataset[pointId], this.dataset[id]);\r\n    if (dist < this.epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * @param {Array} a\r\n * @param {Array} b\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._mergeArrays = function(a, b) {\r\n  var len = b.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var P = b[i];\r\n    if (a.indexOf(P) < 0) {\r\n      a.push(P);\r\n    }\r\n  }\r\n\r\n  return a;\r\n};\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = DBSCAN;\r\n}\r\n","﻿/**\r\n * KMEANS clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * KMEANS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} k - number of clusters\r\n * @param {function} distance - distance function\r\n * @returns {KMEANS}\r\n */\r\n function KMEANS(dataset, k, distance) {\r\n  this.k = 3; // number of clusters\r\n  this.dataset = []; // set of feature vectors\r\n  this.assignments = []; // set of associated clusters for each feature vector\r\n  this.centroids = []; // vectors for our clusters\r\n\r\n  this.init(dataset, k, distance);\r\n}\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.init = function(dataset, k, distance) {\r\n  this.assignments = [];\r\n  this.centroids = [];\r\n\r\n  if (typeof dataset !== 'undefined') {\r\n    this.dataset = dataset;\r\n  }\r\n\r\n  if (typeof k !== 'undefined') {\r\n    this.k = k;\r\n  }\r\n\r\n  if (typeof distance !== 'undefined') {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.run = function(dataset, k) {\r\n  this.init(dataset, k);\r\n\r\n  var len = this.dataset.length;\r\n\r\n  // initialize centroids\r\n  for (var i = 0; i < this.k; i++) {\r\n    this.centroids[i] = this.randomCentroid();\r\n\t}\r\n\r\n  var change = true;\r\n  while(change) {\r\n\r\n    // assign feature vectors to clusters\r\n    change = this.assign();\r\n\r\n    // adjust location of centroids\r\n    for (var centroidId = 0; centroidId < this.k; centroidId++) {\r\n      var mean = new Array(maxDim);\r\n      var count = 0;\r\n\r\n      // init mean vector\r\n      for (var dim = 0; dim < maxDim; dim++) {\r\n        mean[dim] = 0;\r\n      }\r\n\r\n      for (var j = 0; j < len; j++) {\r\n        var maxDim = this.dataset[j].length;\r\n\r\n        // if current cluster id is assigned to point\r\n        if (centroidId === this.assignments[j]) {\r\n          for (var dim = 0; dim < maxDim; dim++) {\r\n            mean[dim] += this.dataset[j][dim];\r\n          }\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (count > 0) {\r\n        // if cluster contain points, adjust centroid position\r\n        for (var dim = 0; dim < maxDim; dim++) {\r\n          mean[dim] /= count;\r\n        }\r\n        this.centroids[centroidId] = mean;\r\n      } else {\r\n        // if cluster is empty, generate new random centroid\r\n        this.centroids[centroidId] = this.randomCentroid();\r\n        change = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.getClusters();\r\n};\r\n\r\n/**\r\n * Generate random centroid\r\n *\r\n * @returns {Array}\r\n */\r\nKMEANS.prototype.randomCentroid = function() {\r\n  var maxId = this.dataset.length -1;\r\n  var centroid;\r\n  var id;\r\n\r\n  do {\r\n    id = Math.round(Math.random() * maxId);\r\n    centroid = this.dataset[id];\r\n  } while (this.centroids.indexOf(centroid) >= 0);\r\n\r\n  return centroid;\r\n}\r\n\r\n/**\r\n * Assign points to clusters\r\n *\r\n * @returns {boolean}\r\n */\r\nKMEANS.prototype.assign = function() {\r\n  var change = false;\r\n  var len = this.dataset.length;\r\n  var closestCentroid;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    closestCentroid = this.argmin(this.dataset[i], this.centroids, this.distance);\r\n\r\n    if (closestCentroid != this.assignments[i]) {\r\n      this.assignments[i] = closestCentroid;\r\n      change = true;\r\n    }\r\n  }\r\n\r\n  return change;\r\n}\r\n\r\n/**\r\n * Extract information about clusters\r\n *\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.getClusters = function() {\r\n  var clusters = new Array(this.k);\r\n  var centroidId;\r\n\r\n  for (var pointId = 0; pointId < this.assignments.length; pointId++) {\r\n    centroidId = this.assignments[pointId];\r\n\r\n    // init empty cluster\r\n    if (typeof clusters[centroidId] === 'undefined') {\r\n      clusters[centroidId] = [];\r\n    }\r\n\r\n    clusters[centroidId].push(pointId);\r\n  }\r\n\r\n  return clusters;\r\n};\r\n\r\n// utils\r\n\r\n/**\r\n * @params {Array} point\r\n * @params {Array.<Array>} set\r\n * @params {Function} f\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.argmin = function(point, set, f) {\r\n  var min = Number.MAX_VALUE;\r\n  var arg = 0;\r\n  var len = set.length;\r\n  var d;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    d = f(point, set[i]);\r\n    if (d < min) {\r\n      min = d;\r\n      arg = i;\r\n    }\r\n  }\r\n\r\n  return arg;\r\n};\r\n\r\n/**\r\n * Euclidean distance\r\n *\r\n * @params {number} p\r\n * @params {number} q\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.distance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    var diff = p[i] - q[i];\r\n    sum += diff * diff;\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = KMEANS;\r\n}\r\n","/**\r\n * PriorityQueue\r\n * Elements in this queue are sorted according to their value\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * PriorityQueue class construcotr\r\n * @constructor\r\n *\r\n * @example\r\n * queue: [1,2,3,4]\r\n * priorities: [4,1,2,3]\r\n * > result = [1,4,2,3]\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @param {string} sorting - asc / desc\r\n * @returns {PriorityQueue}\r\n */\r\nfunction PriorityQueue(elements, priorities, sorting) {\r\n  /** @type {Array} */\r\n  this._queue = [];\r\n  /** @type {Array} */\r\n  this._priorities = [];\r\n  /** @type {string} */\r\n  this._sorting = 'desc';\r\n\r\n  this._init(elements, priorities, sorting);\r\n};\r\n\r\n/**\r\n * Insert element\r\n *\r\n * @param {Object} ele\r\n * @param {Object} priority\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.insert = function(ele, priority) {\r\n  var indexToInsert = this._queue.length;\r\n  var index = indexToInsert;\r\n\r\n  while (index--) {\r\n    var priority2 = this._priorities[index];\r\n    if (this._sorting === 'desc') {\r\n      if (priority > priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    } else {\r\n      if (priority < priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  this._insertAt(ele, priority, indexToInsert);\r\n};\r\n\r\n/**\r\n * Remove element\r\n *\r\n * @param {Object} ele\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.remove = function(ele) {\r\n  var index = this._queue.length;\r\n\r\n  while (index--) {\r\n    var ele2 = this._queue[index];\r\n    if (ele === ele2) {\r\n      this._queue.splice(index, 1);\r\n      this._priorities.splice(index, 1);\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For each loop wrapper\r\n *\r\n * @param {function} func\r\n * @returs {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.forEach = function(func) {\r\n  this._queue.forEach(func);\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElements = function() {\r\n  return this._queue;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @returns {Object}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementPriority = function(index) {\r\n  return this._priorities[index];\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getPriorities = function() {\r\n  return this._priorities;\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementsWithPriorities = function() {\r\n  var result = [];\r\n\r\n  for (var i = 0, l = this._queue.length; i < l; i++) {\r\n    result.push([this._queue[i], this._priorities[i]]);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._init = function(elements, priorities, sorting) {\r\n\r\n  if (elements && priorities) {\r\n    this._queue = [];\r\n    this._priorities = [];\r\n\r\n    if (elements.length !== priorities.length) {\r\n      throw new Error('Arrays must have the same length');\r\n    }\r\n\r\n    for (var i = 0; i < elements.length; i++) {\r\n      this.insert(elements[i], priorities[i]);\r\n    }\r\n  }\r\n\r\n  if (sorting) {\r\n    this._sorting = sorting;\r\n  }\r\n};\r\n\r\n/**\r\n * Insert element at given position\r\n *\r\n * @param {Object} ele\r\n * @param {number} index\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._insertAt = function(ele, priority, index) {\r\n  if (this._queue.length === index) {\r\n    this._queue.push(ele);\r\n    this._priorities.push(priority);\r\n  } else {\r\n    this._queue.splice(index, 0, ele);\r\n    this._priorities.splice(index, 0, priority);\r\n  }\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = PriorityQueue;\r\n}\r\n","\r\n/**\r\n * @requires ./PriorityQueue.js\r\n */\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n      var PriorityQueue = require('./PriorityQueue.js');\r\n}\r\n\r\n/**\r\n * OPTICS - Ordering points to identify the clustering structure\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * OPTICS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {OPTICS}\r\n */\r\nfunction OPTICS(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 1;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._reachability = [];\r\n  /** @type {Array} */\r\n  this._processed = [];\r\n  /** @type {number} */\r\n  this._coreDistance = 0;\r\n  /** @type {Array} */\r\n  this._orderedList = [];\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n}\r\n\r\n/******************************************************************************/\r\n// pulic functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nOPTICS.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0, l = this.dataset.length; pointId < l; pointId++) {\r\n    if (this._processed[pointId] !== 1) {\r\n      this._processed[pointId] = 1;\r\n      this.clusters.push([pointId]);\r\n      var clusterId = this.clusters.length - 1;\r\n\r\n      this._orderedList.push(pointId);\r\n      var priorityQueue = new PriorityQueue(null, null, 'asc');\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      // using priority queue assign elements to new cluster\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, priorityQueue);\r\n        this._expandCluster(clusterId, priorityQueue);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/**\r\n * Generate reachability plot for all points\r\n *\r\n * @returns {array}\r\n * @access public\r\n */\r\nOPTICS.prototype.getReachabilityPlot = function() {\r\n  var reachabilityPlot = [];\r\n\r\n  for (var i = 0, l = this._orderedList.length; i < l; i++) {\r\n    var pointId = this._orderedList[i];\r\n    var distance = this._reachability[pointId];\r\n\r\n    reachabilityPlot.push([pointId, distance]);\r\n  }\r\n\r\n  return reachabilityPlot;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this._reachability = new Array(this.dataset.length);\r\n    this._processed = new Array(this.dataset.length);\r\n    this._coreDistance = 0;\r\n    this._orderedList = [];\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Update information in queue\r\n *\r\n * @param {number} pointId\r\n * @param {Array} neighbors\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._updateQueue = function(pointId, neighbors, queue) {\r\n  var self = this;\r\n\r\n  this._coreDistance = this._distanceToCore(pointId);\r\n  neighbors.forEach(function(pointId2) {\r\n    if (self._processed[pointId2] === undefined) {\r\n      var dist = self.distance(self.dataset[pointId], self.dataset[pointId2]);\r\n      var newReachableDistance = Math.max(self._coreDistance, dist);\r\n\r\n      if (self._reachability[pointId2] === undefined) {\r\n        self._reachability[pointId2] = newReachableDistance;\r\n        queue.insert(pointId2, newReachableDistance);\r\n      } else {\r\n        if (newReachableDistance < self._reachability[pointId2]) {\r\n          self._reachability[pointId2] = newReachableDistance;\r\n          queue.remove(pointId2);\r\n          queue.insert(pointId2, newReachableDistance);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Expand cluster\r\n *\r\n * @param {number} clusterId\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._expandCluster = function(clusterId, queue) {\r\n  var queueElements = queue.getElements();\r\n\r\n  for (var p = 0, l = queueElements.length; p < l; p++) {\r\n    var pointId = queueElements[p];\r\n    if (this._processed[pointId] === undefined) {\r\n      var neighbors = this._regionQuery(pointId);\r\n      this._processed[pointId] = 1;\r\n\r\n      this.clusters[clusterId].push(pointId);\r\n      this._orderedList.push(pointId);\r\n\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, queue);\r\n        this._expandCluster(clusterId, queue);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Calculating distance to cluster core\r\n *\r\n * @param {number} pointId\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._distanceToCore = function(pointId) {\r\n  var l = this.epsilon;\r\n  for (var coreDistCand = 0; coreDistCand < l; coreDistCand++) {\r\n    var neighbors = this._regionQuery(pointId, coreDistCand);\r\n    if (neighbors.length >= this.minPts) {\r\n      return coreDistCand;\r\n    }\r\n  }\r\n\r\n  return;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nOPTICS.prototype._regionQuery = function(pointId, epsilon) {\r\n  epsilon = epsilon || this.epsilon;\r\n  var neighbors = [];\r\n\r\n  for (var id = 0, l = this.dataset.length; id < l; id++) {\r\n    if (this.distance(this.dataset[pointId], this.dataset[id]) < epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = OPTICS;\r\n}\r\n","\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = {\r\n      DBSCAN: require('./DBSCAN.js'),\r\n      KMEANS: require('./KMEANS.js'),\r\n      OPTICS: require('./OPTICS.js'),\r\n      PriorityQueue: require('./PriorityQueue.js')\r\n    };\r\n}\r\n","import clone from \"@turf/clone\";\nimport distance from \"@turf/distance\";\nimport { coordAll } from \"@turf/meta\";\nimport { convertLength, } from \"@turf/helpers\";\nimport clustering from \"density-clustering\";\n/**\n * Takes a set of {@link Point|points} and partition them into clusters according to {@link DBSCAN's|https://en.wikipedia.org/wiki/DBSCAN} data clustering algorithm.\n *\n * @name clustersDbscan\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {number} maxDistance Maximum Distance between any point of the cluster to generate the clusters (kilometers only)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] in which `maxDistance` is expressed, can be degrees, radians, miles, or kilometers\n * @param {boolean} [options.mutate=false] Allows GeoJSON input to be mutated\n * @param {number} [options.minPoints=3] Minimum number of points to generate a single cluster,\n * points which do not meet this requirement will be classified as an 'edge' or 'noise'.\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {string} dbscan - type of point it has been classified as ('core'|'edge'|'noise')\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var maxDistance = 100;\n * var clustered = turf.clustersDbscan(points, maxDistance);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersDbscan(points, maxDistance, options) {\n    // Input validation being handled by Typescript\n    // collectionOf(points, 'Point', 'points must consist of a FeatureCollection of only Points');\n    // if (maxDistance === null || maxDistance === undefined) throw new Error('maxDistance is required');\n    // if (!(Math.sign(maxDistance) > 0)) throw new Error('maxDistance is invalid');\n    // if (!(minPoints === undefined || minPoints === null || Math.sign(minPoints) > 0)) throw new Error('options.minPoints is invalid');\n    if (options === void 0) { options = {}; }\n    // Clone points to prevent any mutations\n    if (options.mutate !== true)\n        points = clone(points);\n    // Defaults\n    options.minPoints = options.minPoints || 3;\n    // create clustered ids\n    var dbscan = new clustering.DBSCAN();\n    var clusteredIds = dbscan.run(coordAll(points), convertLength(maxDistance, options.units), options.minPoints, distance);\n    // Tag points to Clusters ID\n    var clusterId = -1;\n    clusteredIds.forEach(function (clusterIds) {\n        clusterId++;\n        // assign cluster ids to input points\n        clusterIds.forEach(function (idx) {\n            var clusterPoint = points.features[idx];\n            if (!clusterPoint.properties)\n                clusterPoint.properties = {};\n            clusterPoint.properties.cluster = clusterId;\n            clusterPoint.properties.dbscan = \"core\";\n        });\n    });\n    // handle noise points, if any\n    // edges points are tagged by DBSCAN as both 'noise' and 'cluster' as they can \"reach\" less than 'minPoints' number of points\n    dbscan.noise.forEach(function (noiseId) {\n        var noisePoint = points.features[noiseId];\n        if (!noisePoint.properties)\n            noisePoint.properties = {};\n        if (noisePoint.properties.cluster)\n            noisePoint.properties.dbscan = \"edge\";\n        else\n            noisePoint.properties.dbscan = \"noise\";\n    });\n    return points;\n}\nexport default clustersDbscan;\n","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Supercluster = factory());\n})(this, (function () { 'use strict';\n\nfunction sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) { return; }\n\n    var m = (left + right) >> 1;\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        var t = coords[2 * k + inc];\n        var i = left;\n        var j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) { swapItem(ids, coords, left, right); }\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) { i++; }\n            while (coords[2 * j + inc] > t) { j--; }\n        }\n\n        if (coords[2 * left + inc] === t) { swapItem(ids, coords, left, j); }\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    var stack = [0, ids.length - 1, 0];\n    var result = [];\n    var x, y;\n\n    while (stack.length) {\n        var axis = stack.pop();\n        var right = stack.pop();\n        var left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (var i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) { result.push(ids[i]); }\n            }\n            continue;\n        }\n\n        var m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) { result.push(ids[m]); }\n\n        var nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction within(ids, coords, qx, qy, r, nodeSize) {\n    var stack = [0, ids.length - 1, 0];\n    var result = [];\n    var r2 = r * r;\n\n    while (stack.length) {\n        var axis = stack.pop();\n        var right = stack.pop();\n        var left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (var i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) { result.push(ids[i]); }\n            }\n            continue;\n        }\n\n        var m = Math.floor((left + right) / 2);\n\n        var x = coords[2 * m];\n        var y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) { result.push(ids[m]); }\n\n        var nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    var dx = ax - bx;\n    var dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nvar defaultGetX = function (p) { return p[0]; };\nvar defaultGetY = function (p) { return p[1]; };\n\nvar KDBush = function KDBush(points, getX, getY, nodeSize, ArrayType) {\n    if ( getX === void 0 ) getX = defaultGetX;\n    if ( getY === void 0 ) getY = defaultGetY;\n    if ( nodeSize === void 0 ) nodeSize = 64;\n    if ( ArrayType === void 0 ) ArrayType = Float64Array;\n\n    this.nodeSize = nodeSize;\n    this.points = points;\n\n    var IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n\n    var ids = this.ids = new IndexArrayType(points.length);\n    var coords = this.coords = new ArrayType(points.length * 2);\n\n    for (var i = 0; i < points.length; i++) {\n        ids[i] = i;\n        coords[2 * i] = getX(points[i]);\n        coords[2 * i + 1] = getY(points[i]);\n    }\n\n    sortKD(ids, coords, nodeSize, 0, ids.length - 1, 0);\n};\n\nKDBush.prototype.range = function range$1 (minX, minY, maxX, maxY) {\n    return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n};\n\nKDBush.prototype.within = function within$1 (x, y, r) {\n    return within(this.ids, this.coords, x, y, r, this.nodeSize);\n};\n\nvar defaultOptions = {\n    minZoom: 0,   // min zoom to generate clusters on\n    maxZoom: 16,  // max zoom level to cluster the points on\n    minPoints: 2, // minimum points to form a cluster\n    radius: 40,   // cluster radius in pixels\n    extent: 512,  // tile extent (radius is calculated relative to it)\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\n    log: false,   // whether to log timing info\n\n    // whether to generate numeric ids for input features (in vector tiles)\n    generateId: false,\n\n    // a reduce function for calculating custom cluster properties\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\n\n    // properties to use for individual points when running the reducer\n    map: function (props) { return props; } // props => ({sum: props.my_value})\n};\n\nvar fround = Math.fround || (function (tmp) { return (function (x) { tmp[0] = +x; return tmp[0]; }); })(new Float32Array(1));\n\nvar Supercluster = function Supercluster(options) {\n    this.options = extend(Object.create(defaultOptions), options);\n    this.trees = new Array(this.options.maxZoom + 1);\n};\n\nSupercluster.prototype.load = function load (points) {\n    var ref = this.options;\n        var log = ref.log;\n        var minZoom = ref.minZoom;\n        var maxZoom = ref.maxZoom;\n        var nodeSize = ref.nodeSize;\n\n    if (log) { console.time('total time'); }\n\n    var timerId = \"prepare \" + (points.length) + \" points\";\n    if (log) { console.time(timerId); }\n\n    this.points = points;\n\n    // generate a cluster object for each point and index input points into a KD-tree\n    var clusters = [];\n    for (var i = 0; i < points.length; i++) {\n        if (!points[i].geometry) { continue; }\n        clusters.push(createPointCluster(points[i], i));\n    }\n    this.trees[maxZoom + 1] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n    if (log) { console.timeEnd(timerId); }\n\n    // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n    // results in a cluster hierarchy across zoom levels\n    for (var z = maxZoom; z >= minZoom; z--) {\n        var now = +Date.now();\n\n        // create a new set of clusters for the zoom and index them with a KD-tree\n        clusters = this._cluster(clusters, z);\n        this.trees[z] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n        if (log) { console.log('z%d: %d clusters in %dms', z, clusters.length, +Date.now() - now); }\n    }\n\n    if (log) { console.timeEnd('total time'); }\n\n    return this;\n};\n\nSupercluster.prototype.getClusters = function getClusters (bbox, zoom) {\n    var minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n    var minLat = Math.max(-90, Math.min(90, bbox[1]));\n    var maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n    var maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n    if (bbox[2] - bbox[0] >= 360) {\n        minLng = -180;\n        maxLng = 180;\n    } else if (minLng > maxLng) {\n        var easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n        var westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n        return easternHem.concat(westernHem);\n    }\n\n    var tree = this.trees[this._limitZoom(zoom)];\n    var ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n    var clusters = [];\n    for (var i = 0, list = ids; i < list.length; i += 1) {\n        var id = list[i];\n\n            var c = tree.points[id];\n        clusters.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n    }\n    return clusters;\n};\n\nSupercluster.prototype.getChildren = function getChildren (clusterId) {\n    var originId = this._getOriginId(clusterId);\n    var originZoom = this._getOriginZoom(clusterId);\n    var errorMsg = 'No cluster with the specified id.';\n\n    var index = this.trees[originZoom];\n    if (!index) { throw new Error(errorMsg); }\n\n    var origin = index.points[originId];\n    if (!origin) { throw new Error(errorMsg); }\n\n    var r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n    var ids = index.within(origin.x, origin.y, r);\n    var children = [];\n    for (var i = 0, list = ids; i < list.length; i += 1) {\n        var id = list[i];\n\n            var c = index.points[id];\n        if (c.parentId === clusterId) {\n            children.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n        }\n    }\n\n    if (children.length === 0) { throw new Error(errorMsg); }\n\n    return children;\n};\n\nSupercluster.prototype.getLeaves = function getLeaves (clusterId, limit, offset) {\n    limit = limit || 10;\n    offset = offset || 0;\n\n    var leaves = [];\n    this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n    return leaves;\n};\n\nSupercluster.prototype.getTile = function getTile (z, x, y) {\n    var tree = this.trees[this._limitZoom(z)];\n    var z2 = Math.pow(2, z);\n    var ref = this.options;\n        var extent = ref.extent;\n        var radius = ref.radius;\n    var p = radius / extent;\n    var top = (y - p) / z2;\n    var bottom = (y + 1 + p) / z2;\n\n    var tile = {\n        features: []\n    };\n\n    this._addTileFeatures(\n        tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\n        tree.points, x, y, z2, tile);\n\n    if (x === 0) {\n        this._addTileFeatures(\n            tree.range(1 - p / z2, top, 1, bottom),\n            tree.points, z2, y, z2, tile);\n    }\n    if (x === z2 - 1) {\n        this._addTileFeatures(\n            tree.range(0, top, p / z2, bottom),\n            tree.points, -1, y, z2, tile);\n    }\n\n    return tile.features.length ? tile : null;\n};\n\nSupercluster.prototype.getClusterExpansionZoom = function getClusterExpansionZoom (clusterId) {\n    var expansionZoom = this._getOriginZoom(clusterId) - 1;\n    while (expansionZoom <= this.options.maxZoom) {\n        var children = this.getChildren(clusterId);\n        expansionZoom++;\n        if (children.length !== 1) { break; }\n        clusterId = children[0].properties.cluster_id;\n    }\n    return expansionZoom;\n};\n\nSupercluster.prototype._appendLeaves = function _appendLeaves (result, clusterId, limit, offset, skipped) {\n    var children = this.getChildren(clusterId);\n\n    for (var i = 0, list = children; i < list.length; i += 1) {\n        var child = list[i];\n\n            var props = child.properties;\n\n        if (props && props.cluster) {\n            if (skipped + props.point_count <= offset) {\n                // skip the whole cluster\n                skipped += props.point_count;\n            } else {\n                // enter the cluster\n                skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\n                // exit the cluster\n            }\n        } else if (skipped < offset) {\n            // skip a single point\n            skipped++;\n        } else {\n            // add a single point\n            result.push(child);\n        }\n        if (result.length === limit) { break; }\n    }\n\n    return skipped;\n};\n\nSupercluster.prototype._addTileFeatures = function _addTileFeatures (ids, points, x, y, z2, tile) {\n    for (var i$1 = 0, list = ids; i$1 < list.length; i$1 += 1) {\n        var i = list[i$1];\n\n            var c = points[i];\n        var isCluster = c.numPoints;\n\n        var tags = (void 0), px = (void 0), py = (void 0);\n        if (isCluster) {\n            tags = getClusterProperties(c);\n            px = c.x;\n            py = c.y;\n        } else {\n            var p = this.points[c.index];\n            tags = p.properties;\n            px = lngX(p.geometry.coordinates[0]);\n            py = latY(p.geometry.coordinates[1]);\n        }\n\n        var f = {\n            type: 1,\n            geometry: [[\n                Math.round(this.options.extent * (px * z2 - x)),\n                Math.round(this.options.extent * (py * z2 - y))\n            ]],\n            tags: tags\n        };\n\n        // assign id\n        var id = (void 0);\n        if (isCluster) {\n            id = c.id;\n        } else if (this.options.generateId) {\n            // optionally generate id\n            id = c.index;\n        } else if (this.points[c.index].id) {\n            // keep id if already assigned\n            id = this.points[c.index].id;\n        }\n\n        if (id !== undefined) { f.id = id; }\n\n        tile.features.push(f);\n    }\n};\n\nSupercluster.prototype._limitZoom = function _limitZoom (z) {\n    return Math.max(this.options.minZoom, Math.min(+z, this.options.maxZoom + 1));\n};\n\nSupercluster.prototype._cluster = function _cluster (points, zoom) {\n    var clusters = [];\n    var ref = this.options;\n        var radius = ref.radius;\n        var extent = ref.extent;\n        var reduce = ref.reduce;\n        var minPoints = ref.minPoints;\n    var r = radius / (extent * Math.pow(2, zoom));\n\n    // loop through each point\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        // if we've already visited the point at this zoom level, skip it\n        if (p.zoom <= zoom) { continue; }\n        p.zoom = zoom;\n\n        // find all nearby points\n        var tree = this.trees[zoom + 1];\n        var neighborIds = tree.within(p.x, p.y, r);\n\n        var numPointsOrigin = p.numPoints || 1;\n        var numPoints = numPointsOrigin;\n\n        // count the number of points in a potential cluster\n        for (var i$1 = 0, list = neighborIds; i$1 < list.length; i$1 += 1) {\n            var neighborId = list[i$1];\n\n                var b = tree.points[neighborId];\n            // filter out neighbors that are already processed\n            if (b.zoom > zoom) { numPoints += b.numPoints || 1; }\n        }\n\n        // if there were neighbors to merge, and there are enough points to form a cluster\n        if (numPoints > numPointsOrigin && numPoints >= minPoints) {\n            var wx = p.x * numPointsOrigin;\n            var wy = p.y * numPointsOrigin;\n\n            var clusterProperties = reduce && numPointsOrigin > 1 ? this._map(p, true) : null;\n\n            // encode both zoom and point index on which the cluster originated -- offset by total length of features\n            var id = (i << 5) + (zoom + 1) + this.points.length;\n\n            for (var i$2 = 0, list$1 = neighborIds; i$2 < list$1.length; i$2 += 1) {\n                var neighborId$1 = list$1[i$2];\n\n                    var b$1 = tree.points[neighborId$1];\n\n                if (b$1.zoom <= zoom) { continue; }\n                b$1.zoom = zoom; // save the zoom (so it doesn't get processed twice)\n\n                var numPoints2 = b$1.numPoints || 1;\n                wx += b$1.x * numPoints2; // accumulate coordinates for calculating weighted center\n                wy += b$1.y * numPoints2;\n\n                b$1.parentId = id;\n\n                if (reduce) {\n                    if (!clusterProperties) { clusterProperties = this._map(p, true); }\n                    reduce(clusterProperties, this._map(b$1));\n                }\n            }\n\n            p.parentId = id;\n            clusters.push(createCluster(wx / numPoints, wy / numPoints, id, numPoints, clusterProperties));\n\n        } else { // left points as unclustered\n            clusters.push(p);\n\n            if (numPoints > 1) {\n                for (var i$3 = 0, list$2 = neighborIds; i$3 < list$2.length; i$3 += 1) {\n                    var neighborId$2 = list$2[i$3];\n\n                        var b$2 = tree.points[neighborId$2];\n                    if (b$2.zoom <= zoom) { continue; }\n                    b$2.zoom = zoom;\n                    clusters.push(b$2);\n                }\n            }\n        }\n    }\n\n    return clusters;\n};\n\n// get index of the point from which the cluster originated\nSupercluster.prototype._getOriginId = function _getOriginId (clusterId) {\n    return (clusterId - this.points.length) >> 5;\n};\n\n// get zoom of the point from which the cluster originated\nSupercluster.prototype._getOriginZoom = function _getOriginZoom (clusterId) {\n    return (clusterId - this.points.length) % 32;\n};\n\nSupercluster.prototype._map = function _map (point, clone) {\n    if (point.numPoints) {\n        return clone ? extend({}, point.properties) : point.properties;\n    }\n    var original = this.points[point.index].properties;\n    var result = this.options.map(original);\n    return clone && result === original ? extend({}, result) : result;\n};\n\nfunction createCluster(x, y, id, numPoints, properties) {\n    return {\n        x: fround(x), // weighted cluster center; round for consistency with Float32Array index\n        y: fround(y),\n        zoom: Infinity, // the last zoom the cluster was processed at\n        id: id, // encodes index of the first child of the cluster and its zoom level\n        parentId: -1, // parent cluster id\n        numPoints: numPoints,\n        properties: properties\n    };\n}\n\nfunction createPointCluster(p, id) {\n    var ref = p.geometry.coordinates;\n    var x = ref[0];\n    var y = ref[1];\n    return {\n        x: fround(lngX(x)), // projected point coordinates\n        y: fround(latY(y)),\n        zoom: Infinity, // the last zoom the point was processed at\n        index: id, // index of the source feature in the original input array,\n        parentId: -1 // parent cluster id\n    };\n}\n\nfunction getClusterJSON(cluster) {\n    return {\n        type: 'Feature',\n        id: cluster.id,\n        properties: getClusterProperties(cluster),\n        geometry: {\n            type: 'Point',\n            coordinates: [xLng(cluster.x), yLat(cluster.y)]\n        }\n    };\n}\n\nfunction getClusterProperties(cluster) {\n    var count = cluster.numPoints;\n    var abbrev =\n        count >= 10000 ? ((Math.round(count / 1000)) + \"k\") :\n        count >= 1000 ? ((Math.round(count / 100) / 10) + \"k\") : count;\n    return extend(extend({}, cluster.properties), {\n        cluster: true,\n        cluster_id: cluster.id,\n        point_count: count,\n        point_count_abbreviated: abbrev\n    });\n}\n\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    var sin = Math.sin(lat * Math.PI / 180);\n    var y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\n\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    var y2 = (180 - y * 360) * Math.PI / 180;\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n}\n\nfunction extend(dest, src) {\n    for (var id in src) { dest[id] = src[id]; }\n    return dest;\n}\n\nfunction getX(p) {\n    return p.x;\n}\nfunction getY(p) {\n    return p.y;\n}\n\nreturn Supercluster;\n\n}));\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import { featureCollection, point } from '@turf/helpers';\nimport clustersKmeans from '@turf/clusters-kmeans';\nimport clustersDbscan from '@turf/clusters-dbscan';\nimport SuperCluster from 'supercluster';\nimport equal from 'fast-deep-equal/es6';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Cluster {\r\n    constructor({ markers, position }) {\r\n        this.markers = markers;\r\n        if (position) {\r\n            if (position instanceof google.maps.LatLng) {\r\n                this._position = position;\r\n            }\r\n            else {\r\n                this._position = new google.maps.LatLng(position);\r\n            }\r\n        }\r\n    }\r\n    get bounds() {\r\n        if (this.markers.length === 0 && !this._position) {\r\n            return undefined;\r\n        }\r\n        return this.markers.reduce((bounds, marker) => {\r\n            return bounds.extend(marker.getPosition());\r\n        }, new google.maps.LatLngBounds(this._position, this._position));\r\n    }\r\n    get position() {\r\n        return this._position || this.bounds.getCenter();\r\n    }\r\n    /**\r\n     * Get the count of **visible** markers.\r\n     */\r\n    get count() {\r\n        return this.markers.filter((m) => m.getVisible())\r\n            .length;\r\n    }\r\n    /**\r\n     * Add a marker to the cluster.\r\n     */\r\n    push(marker) {\r\n        this.markers.push(marker);\r\n    }\r\n    /**\r\n     * Cleanup references and remove marker from map.\r\n     */\r\n    delete() {\r\n        if (this.marker) {\r\n            this.marker.setMap(null);\r\n            delete this.marker;\r\n        }\r\n        this.markers.length = 0;\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst filterMarkersToPaddedViewport = (map, mapCanvasProjection, markers, viewportPadding) => {\r\n    const extendedMapBounds = extendBoundsToPaddedViewport(map.getBounds(), mapCanvasProjection, viewportPadding);\r\n    return markers.filter((marker) => extendedMapBounds.contains(marker.getPosition()));\r\n};\r\n/**\r\n * Extends a bounds by a number of pixels in each direction.\r\n */\r\nconst extendBoundsToPaddedViewport = (bounds, projection, pixels) => {\r\n    const { northEast, southWest } = latLngBoundsToPixelBounds(bounds, projection);\r\n    const extendedPixelBounds = extendPixelBounds({ northEast, southWest }, pixels);\r\n    return pixelBoundsToLatLngBounds(extendedPixelBounds, projection);\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst distanceBetweenPoints = (p1, p2) => {\r\n    const R = 6371; // Radius of the Earth in km\r\n    const dLat = ((p2.lat - p1.lat) * Math.PI) / 180;\r\n    const dLon = ((p2.lng - p1.lng) * Math.PI) / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos((p1.lat * Math.PI) / 180) *\r\n            Math.cos((p2.lat * Math.PI) / 180) *\r\n            Math.sin(dLon / 2) *\r\n            Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst latLngBoundsToPixelBounds = (bounds, projection) => {\r\n    return {\r\n        northEast: projection.fromLatLngToDivPixel(bounds.getNorthEast()),\r\n        southWest: projection.fromLatLngToDivPixel(bounds.getSouthWest()),\r\n    };\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst extendPixelBounds = ({ northEast, southWest }, pixels) => {\r\n    northEast.x += pixels;\r\n    northEast.y -= pixels;\r\n    southWest.x -= pixels;\r\n    southWest.y += pixels;\r\n    return { northEast, southWest };\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst pixelBoundsToLatLngBounds = ({ northEast, southWest }, projection) => {\r\n    const bounds = new google.maps.LatLngBounds();\r\n    bounds.extend(projection.fromDivPixelToLatLng(northEast));\r\n    bounds.extend(projection.fromDivPixelToLatLng(southWest));\r\n    return bounds;\r\n};\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nclass AbstractAlgorithm {\r\n    constructor({ maxZoom = 16 }) {\r\n        this.maxZoom = maxZoom;\r\n    }\r\n    /**\r\n     * Helper function to bypass clustering based upon some map state such as\r\n     * zoom, number of markers, etc.\r\n     *\r\n     * ```typescript\r\n     *  cluster({markers, map}: AlgorithmInput): Cluster[] {\r\n     *    if (shouldBypassClustering(map)) {\r\n     *      return this.noop({markers, map})\r\n     *    }\r\n     * }\r\n     * ```\r\n     */\r\n    noop({ markers }) {\r\n        return noop(markers);\r\n    }\r\n}\r\n/**\r\n * Abstract viewport algorithm proves a class to filter markers by a padded\r\n * viewport. This is a common optimization.\r\n *\r\n * @hidden\r\n */\r\nclass AbstractViewportAlgorithm extends AbstractAlgorithm {\r\n    constructor(_a) {\r\n        var { viewportPadding = 60 } = _a, options = __rest(_a, [\"viewportPadding\"]);\r\n        super(options);\r\n        this.viewportPadding = 60;\r\n        this.viewportPadding = viewportPadding;\r\n    }\r\n    calculate({ markers, map, mapCanvasProjection, }) {\r\n        if (map.getZoom() >= this.maxZoom) {\r\n            return {\r\n                clusters: this.noop({\r\n                    markers,\r\n                    map,\r\n                    mapCanvasProjection,\r\n                }),\r\n                changed: false,\r\n            };\r\n        }\r\n        return {\r\n            clusters: this.cluster({\r\n                markers: filterMarkersToPaddedViewport(map, mapCanvasProjection, markers, this.viewportPadding),\r\n                map,\r\n                mapCanvasProjection,\r\n            }),\r\n        };\r\n    }\r\n}\r\n/**\r\n * @hidden\r\n */\r\nconst noop = (markers) => {\r\n    const clusters = markers.map((marker) => new Cluster({\r\n        position: marker.getPosition(),\r\n        markers: [marker],\r\n    }));\r\n    return clusters;\r\n};\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default Grid algorithm historically used in Google Maps marker\r\n * clustering.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n */\r\nclass GridAlgorithm extends AbstractViewportAlgorithm {\r\n    constructor(_a) {\r\n        var { maxDistance = 40000, gridSize = 40 } = _a, options = __rest(_a, [\"maxDistance\", \"gridSize\"]);\r\n        super(options);\r\n        this.clusters = [];\r\n        this.maxDistance = maxDistance;\r\n        this.gridSize = gridSize;\r\n    }\r\n    cluster({ markers, map, mapCanvasProjection, }) {\r\n        this.clusters = [];\r\n        markers.forEach((marker) => {\r\n            this.addToClosestCluster(marker, map, mapCanvasProjection);\r\n        });\r\n        return this.clusters;\r\n    }\r\n    addToClosestCluster(marker, map, projection) {\r\n        let maxDistance = this.maxDistance; // Some large number\r\n        let cluster = null;\r\n        for (let i = 0; i < this.clusters.length; i++) {\r\n            const candidate = this.clusters[i];\r\n            const distance = distanceBetweenPoints(candidate.bounds.getCenter().toJSON(), marker.getPosition().toJSON());\r\n            if (distance < maxDistance) {\r\n                maxDistance = distance;\r\n                cluster = candidate;\r\n            }\r\n        }\r\n        if (cluster &&\r\n            extendBoundsToPaddedViewport(cluster.bounds, projection, this.gridSize).contains(marker.getPosition())) {\r\n            cluster.push(marker);\r\n        }\r\n        else {\r\n            const cluster = new Cluster({ markers: [marker] });\r\n            this.clusters.push(cluster);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Noop algorithm does not generate any clusters or filter markers by the an extended viewport.\r\n */\r\nclass NoopAlgorithm extends AbstractAlgorithm {\r\n    constructor(_a) {\r\n        var options = __rest(_a, []);\r\n        super(options);\r\n    }\r\n    calculate({ markers, map, mapCanvasProjection, }) {\r\n        return {\r\n            clusters: this.cluster({ markers, map, mapCanvasProjection }),\r\n            changed: false,\r\n        };\r\n    }\r\n    cluster(input) {\r\n        return this.noop(input);\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Experimental algorithm using Kmeans.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n *\r\n * @see https://www.npmjs.com/package/@turf/clusters-kmeans\r\n */\r\nclass KmeansAlgorithm extends AbstractViewportAlgorithm {\r\n    constructor(_a) {\r\n        var { numberOfClusters } = _a, options = __rest(_a, [\"numberOfClusters\"]);\r\n        super(options);\r\n        this.numberOfClusters = numberOfClusters;\r\n    }\r\n    cluster({ markers, map }) {\r\n        const clusters = [];\r\n        if (markers.length === 0) {\r\n            return clusters;\r\n        }\r\n        const points = featureCollection(markers.map((marker) => {\r\n            return point([marker.getPosition().lng(), marker.getPosition().lat()]);\r\n        }));\r\n        let numberOfClusters;\r\n        if (this.numberOfClusters instanceof Function) {\r\n            numberOfClusters = this.numberOfClusters(markers.length, map.getZoom());\r\n        }\r\n        else {\r\n            numberOfClusters = this.numberOfClusters;\r\n        }\r\n        clustersKmeans(points, { numberOfClusters }).features.forEach((point, i) => {\r\n            if (!clusters[point.properties.cluster]) {\r\n                clusters[point.properties.cluster] = new Cluster({\r\n                    position: {\r\n                        lng: point.properties.centroid[0],\r\n                        lat: point.properties.centroid[1],\r\n                    },\r\n                    markers: [],\r\n                });\r\n            }\r\n            clusters[point.properties.cluster].push(markers[i]);\r\n        });\r\n        return clusters;\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_INTERNAL_DBSCAN_OPTION = {\r\n    units: \"kilometers\",\r\n    mutate: false,\r\n    minPoints: 1,\r\n};\r\n/**\r\n *\r\n * **This algorithm is not yet ready for use!**\r\n *\r\n * Experimental algorithm using DBScan.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n *\r\n * @see https://www.npmjs.com/package/@turf/clusters-dbscan\r\n */\r\nclass DBScanAlgorithm extends AbstractViewportAlgorithm {\r\n    constructor(_a) {\r\n        var { maxDistance = 200, minPoints = DEFAULT_INTERNAL_DBSCAN_OPTION.minPoints } = _a, options = __rest(_a, [\"maxDistance\", \"minPoints\"]);\r\n        super(options);\r\n        this.maxDistance = maxDistance;\r\n        this.options = Object.assign(Object.assign({}, DEFAULT_INTERNAL_DBSCAN_OPTION), { minPoints });\r\n    }\r\n    cluster({ markers, mapCanvasProjection, }) {\r\n        const points = featureCollection(markers.map((marker) => {\r\n            const projectedPoint = mapCanvasProjection.fromLatLngToContainerPixel(marker.getPosition());\r\n            return point([projectedPoint.x, projectedPoint.y]);\r\n        }));\r\n        const grouped = [];\r\n        clustersDbscan(points, this.maxDistance, this.options).features.forEach((point, i) => {\r\n            if (!grouped[point.properties.cluster]) {\r\n                grouped[point.properties.cluster] = [];\r\n            }\r\n            grouped[point.properties.cluster].push(markers[i]);\r\n        });\r\n        return grouped.map((markers) => new Cluster({ markers }));\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A very fast JavaScript algorithm for geospatial point clustering using KD trees.\r\n *\r\n * @see https://www.npmjs.com/package/supercluster for more information on options.\r\n */\r\nclass SuperClusterAlgorithm extends AbstractAlgorithm {\r\n    constructor(_a) {\r\n        var { maxZoom, radius = 60 } = _a, options = __rest(_a, [\"maxZoom\", \"radius\"]);\r\n        super({ maxZoom });\r\n        this.superCluster = new SuperCluster(Object.assign({ maxZoom: this.maxZoom, radius }, options));\r\n        this.state = { zoom: null };\r\n    }\r\n    calculate(input) {\r\n        let changed = false;\r\n        if (!equal(input.markers, this.markers)) {\r\n            changed = true;\r\n            // TODO use proxy to avoid copy?\r\n            this.markers = [...input.markers];\r\n            const points = this.markers.map((marker) => {\r\n                return {\r\n                    type: \"Feature\",\r\n                    geometry: {\r\n                        type: \"Point\",\r\n                        coordinates: [\r\n                            marker.getPosition().lng(),\r\n                            marker.getPosition().lat(),\r\n                        ],\r\n                    },\r\n                    properties: { marker },\r\n                };\r\n            });\r\n            this.superCluster.load(points);\r\n        }\r\n        const state = { zoom: input.map.getZoom() };\r\n        if (!changed) {\r\n            if (this.state.zoom > this.maxZoom && state.zoom > this.maxZoom) ;\r\n            else {\r\n                changed = changed || !equal(this.state, state);\r\n            }\r\n        }\r\n        this.state = state;\r\n        if (changed) {\r\n            this.clusters = this.cluster(input);\r\n        }\r\n        return { clusters: this.clusters, changed };\r\n    }\r\n    cluster({ map }) {\r\n        return this.superCluster\r\n            .getClusters([-180, -90, 180, 90], map.getZoom())\r\n            .map(this.transformCluster.bind(this));\r\n    }\r\n    transformCluster({ geometry: { coordinates: [lng, lat], }, properties, }) {\r\n        if (properties.cluster) {\r\n            return new Cluster({\r\n                markers: this.superCluster\r\n                    .getLeaves(properties.cluster_id, Infinity)\r\n                    .map((leaf) => leaf.properties.marker),\r\n                position: new google.maps.LatLng({ lat, lng }),\r\n            });\r\n        }\r\n        else {\r\n            const marker = properties.marker;\r\n            return new Cluster({\r\n                markers: [marker],\r\n                position: marker.getPosition(),\r\n            });\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides statistics on all clusters in the current render cycle for use in {@link Renderer.render}.\r\n */\r\nclass ClusterStats {\r\n    constructor(markers, clusters) {\r\n        this.markers = { sum: markers.length };\r\n        const clusterMarkerCounts = clusters.map((a) => a.count);\r\n        const clusterMarkerSum = clusterMarkerCounts.reduce((a, b) => a + b, 0);\r\n        this.clusters = {\r\n            count: clusters.length,\r\n            markers: {\r\n                mean: clusterMarkerSum / clusters.length,\r\n                sum: clusterMarkerSum,\r\n                min: Math.min(...clusterMarkerCounts),\r\n                max: Math.max(...clusterMarkerCounts),\r\n            },\r\n        };\r\n    }\r\n}\r\nclass DefaultRenderer {\r\n    /**\r\n     * The default render function for the library used by {@link MarkerClusterer}.\r\n     *\r\n     * Currently set to use the following:\r\n     *\r\n     * ```typescript\r\n     * // change color if this cluster has more markers than the mean cluster\r\n     * const color =\r\n     *   count > Math.max(10, stats.clusters.markers.mean)\r\n     *     ? \"#ff0000\"\r\n     *     : \"#0000ff\";\r\n     *\r\n     * // create svg url with fill color\r\n     * const svg = window.btoa(`\r\n     * <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".1\" r=\"130\" />\r\n     * </svg>`);\r\n     *\r\n     * // create marker using svg icon\r\n     * return new google.maps.Marker({\r\n     *   position,\r\n     *   icon: {\r\n     *     url: `data:image/svg+xml;base64,${svg}`,\r\n     *     scaledSize: new google.maps.Size(45, 45),\r\n     *   },\r\n     *   label: {\r\n     *     text: String(count),\r\n     *     color: \"rgba(255,255,255,0.9)\",\r\n     *     fontSize: \"12px\",\r\n     *   },\r\n     *   // adjust zIndex to be above other markers\r\n     *   zIndex: 1000 + count,\r\n     * });\r\n     * ```\r\n     */\r\n    render({ count, position }, stats) {\r\n        // change color if this cluster has more markers than the mean cluster\r\n        const color = count > Math.max(10, stats.clusters.markers.mean) ? \"#ff0000\" : \"#0000ff\";\r\n        // create svg url with fill color\r\n        const svg = window.btoa(`\n  <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n    <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n  </svg>`);\r\n        // create marker using svg icon\r\n        return new google.maps.Marker({\r\n            position,\r\n            icon: {\r\n                url: `data:image/svg+xml;base64,${svg}`,\r\n                scaledSize: new google.maps.Size(45, 45),\r\n            },\r\n            label: {\r\n                text: String(count),\r\n                color: \"rgba(255,255,255,0.9)\",\r\n                fontSize: \"12px\",\r\n            },\r\n            // adjust zIndex to be above other markers\r\n            zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,\r\n        });\r\n    }\r\n}\n\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Extends an object's prototype by another's.\r\n *\r\n * @param type1 The Type to be extended.\r\n * @param type2 The Type to extend with.\r\n * @ignore\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction extend(type1, type2) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line prefer-const\r\n    for (let property in type2.prototype) {\r\n        type1.prototype[property] = type2.prototype[property];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass OverlayViewSafe {\r\n    constructor() {\r\n        // MarkerClusterer implements google.maps.OverlayView interface. We use the\r\n        // extend function to extend MarkerClusterer with google.maps.OverlayView\r\n        // because it might not always be available when the code is defined so we\r\n        // look for it at the last possible moment. If it doesn't exist now then\r\n        // there is no point going ahead :)\r\n        extend(OverlayViewSafe, google.maps.OverlayView);\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MarkerClustererEvents;\r\n(function (MarkerClustererEvents) {\r\n    MarkerClustererEvents[\"CLUSTERING_BEGIN\"] = \"clusteringbegin\";\r\n    MarkerClustererEvents[\"CLUSTERING_END\"] = \"clusteringend\";\r\n    MarkerClustererEvents[\"CLUSTER_CLICK\"] = \"click\";\r\n})(MarkerClustererEvents || (MarkerClustererEvents = {}));\r\nconst defaultOnClusterClickHandler = (_, cluster, map) => {\r\n    map.fitBounds(cluster.bounds);\r\n};\r\n/**\r\n * MarkerClusterer creates and manages per-zoom-level clusters for large amounts\r\n * of markers. See {@link MarkerClustererOptions} for more details.\r\n *\r\n * <iframe src=\"https://googlemaps.github.io/js-three/public/anchor/index.html\"></iframe>\r\n */\r\nclass MarkerClusterer extends OverlayViewSafe {\r\n    constructor({ map, markers = [], algorithm = new SuperClusterAlgorithm({}), renderer = new DefaultRenderer(), onClusterClick = defaultOnClusterClickHandler, }) {\r\n        super();\r\n        this.markers = [...markers];\r\n        this.clusters = [];\r\n        this.algorithm = algorithm;\r\n        this.renderer = renderer;\r\n        this.onClusterClick = onClusterClick;\r\n        if (map) {\r\n            this.setMap(map);\r\n        }\r\n    }\r\n    addMarker(marker, noDraw) {\r\n        if (this.markers.includes(marker)) {\r\n            return;\r\n        }\r\n        this.markers.push(marker);\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n    }\r\n    addMarkers(markers, noDraw) {\r\n        markers.forEach((marker) => {\r\n            this.addMarker(marker, true);\r\n        });\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n    }\r\n    removeMarker(marker, noDraw) {\r\n        const index = this.markers.indexOf(marker);\r\n        if (index === -1) {\r\n            // Marker is not in our list of markers, so do nothing:\r\n            return false;\r\n        }\r\n        marker.setMap(null);\r\n        this.markers.splice(index, 1); // Remove the marker from the list of managed markers\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n        return true;\r\n    }\r\n    removeMarkers(markers, noDraw) {\r\n        let removed = false;\r\n        markers.forEach((marker) => {\r\n            removed = this.removeMarker(marker, true) || removed;\r\n        });\r\n        if (removed && !noDraw) {\r\n            this.render();\r\n        }\r\n        return removed;\r\n    }\r\n    clearMarkers(noDraw) {\r\n        this.markers.length = 0;\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n    }\r\n    /**\r\n     * Recalculates and draws all the marker clusters.\r\n     */\r\n    render() {\r\n        const map = this.getMap();\r\n        if (map instanceof google.maps.Map && this.getProjection()) {\r\n            google.maps.event.trigger(this, MarkerClustererEvents.CLUSTERING_BEGIN, this);\r\n            const { clusters, changed } = this.algorithm.calculate({\r\n                markers: this.markers,\r\n                map,\r\n                mapCanvasProjection: this.getProjection(),\r\n            });\r\n            // allow algorithms to return flag on whether the clusters/markers have changed\r\n            if (changed || changed == undefined) {\r\n                // reset visibility of markers and clusters\r\n                this.reset();\r\n                // store new clusters\r\n                this.clusters = clusters;\r\n                this.renderClusters();\r\n            }\r\n            google.maps.event.trigger(this, MarkerClustererEvents.CLUSTERING_END, this);\r\n        }\r\n    }\r\n    onAdd() {\r\n        this.idleListener = this.getMap().addListener(\"idle\", this.render.bind(this));\r\n        this.render();\r\n    }\r\n    onRemove() {\r\n        google.maps.event.removeListener(this.idleListener);\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.markers.forEach((marker) => marker.setMap(null));\r\n        this.clusters.forEach((cluster) => cluster.delete());\r\n        this.clusters = [];\r\n    }\r\n    renderClusters() {\r\n        // generate stats to pass to renderers\r\n        const stats = new ClusterStats(this.markers, this.clusters);\r\n        const map = this.getMap();\r\n        this.clusters.forEach((cluster) => {\r\n            if (cluster.markers.length === 1) {\r\n                cluster.marker = cluster.markers[0];\r\n            }\r\n            else {\r\n                cluster.marker = this.renderer.render(cluster, stats);\r\n                if (this.onClusterClick) {\r\n                    cluster.marker.addListener(\"click\", \r\n                    /* istanbul ignore next */\r\n                    (event) => {\r\n                        google.maps.event.trigger(this, MarkerClustererEvents.CLUSTER_CLICK, cluster);\r\n                        this.onClusterClick(event, cluster, map);\r\n                    });\r\n                }\r\n            }\r\n            cluster.marker.setMap(map);\r\n        });\r\n    }\r\n}\n\nexport { AbstractAlgorithm, AbstractViewportAlgorithm, Cluster, ClusterStats, DBScanAlgorithm, DefaultRenderer, GridAlgorithm, KmeansAlgorithm, MarkerClusterer, MarkerClustererEvents, NoopAlgorithm, SuperClusterAlgorithm, defaultOnClusterClickHandler, distanceBetweenPoints, extendBoundsToPaddedViewport, extendPixelBounds, filterMarkersToPaddedViewport, noop, pixelBoundsToLatLngBounds };\n//# sourceMappingURL=index.esm.js.map\n","import React, { useState, useEffect } from 'react'\nimport { MarkerClusterer, MarkerClustererOptions } from '@googlemaps/markerclusterer'\n\nimport { useGoogleMap } from '../../map-context'\n\nexport type MarkerClustererOptionsSubset = Omit<MarkerClustererOptions, 'map' | 'markers'>\n\nexport interface GoogleMarkerClustererProps {\n  /** Render prop that exposes marker clusterer to children components\n   * \n   * The callback function should return a list of Marker components.\n   */\n  children: (markerClusterer: MarkerClusterer) => React.ReactElement<any, any>,\n  /** Subset of {@link MarkerClustererOptions} options \n   * \n   * ```\n   * {  \n   *   algorithm?: Algorithm;  \n   *   renderer?: Renderer;  \n   *   onClusterClick?: onClusterClickHandler;  \n   * }\n   * ```\n   */\n  options: MarkerClustererOptionsSubset\n}\n\nexport const useGoogleMarkerClusterer = (options: MarkerClustererOptionsSubset): MarkerClusterer | null => {\n  const map = useGoogleMap()\n  const [markerClusterer, setMarkerClusterer] = useState<MarkerClusterer | null>(null)\n\n  useEffect(() => {\n    if (map && markerClusterer === null) {\n      const markerCluster = new MarkerClusterer({ ...options, map })\n      setMarkerClusterer(markerCluster)\n    }\n  }, [map])\n\n  return markerClusterer\n}\n\n/** Wrapper around [@googlemaps/markerclusterer](https://github.com/googlemaps/js-markerclusterer)\n * \n * Accepts {@link  MarkerClustererOptionsSubset} which is a subset of  {@link MarkerClustererOptions}\n */\nexport const GoogleMarkerClusterer = ({ children, options }: GoogleMarkerClustererProps) => {\n  const markerClusterer = useGoogleMarkerClusterer(options)\n\n  return markerClusterer !== null ? children(markerClusterer) : null\n}\n\nexport default GoogleMarkerClusterer\n","/* global google */\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport invariant from 'invariant'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed',\n}\n\nconst updaterMap = {\n  options(instance: google.maps.InfoWindow, options: google.maps.InfoWindowOptions): void {\n    instance.setOptions(options)\n  },\n  position(\n    instance: google.maps.InfoWindow,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  zIndex(instance: google.maps.InfoWindow, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ninterface InfoWindowState {\n  infoWindow: google.maps.InfoWindow | null\n}\n\nexport interface InfoWindowProps {\n  /** Can be any MVCObject that exposes a LatLng position property and optionally a Point anchorPoint property for calculating the pixelOffset. The anchorPoint is the offset from the anchor's position to the tip of the InfoWindow. */\n  anchor?: google.maps.MVCObject\n  options?: google.maps.InfoWindowOptions\n  /** The LatLng at which to display this InfoWindow. If the InfoWindow is opened with an anchor, the anchor's position will be used instead. */\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  /** All InfoWindows are displayed on the map in order of their zIndex, with higher values displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed according to their latitude, with InfoWindows of lower latitudes appearing in front of InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers. */\n  zIndex?: number\n  /** This event is fired when the close button was clicked. */\n  onCloseClick?: () => void\n  /** This event is fired when the <div> containing the InfoWindow's content is attached to the DOM. You may wish to monitor this event if you are building out your info window content dynamically. */\n  onDomReady?: () => void\n  /** This event is fired when the content property changes. */\n  onContentChanged?: () => void\n  /** This event is fired when the position property changes. */\n  onPositionChanged?: () => void\n  /** This event is fired when the InfoWindow's zIndex changes. */\n  onZindexChanged?: () => void\n  /** This callback is called when the infoWindow instance has loaded. It is called with the infoWindow instance. */\n  onLoad?: (infoWindow: google.maps.InfoWindow) => void\n  /** This callback is called when the component unmounts. It is called with the infoWindow instance. */\n  onUnmount?: (infoWindow: google.maps.InfoWindow) => void\n}\n\nexport class InfoWindow extends React.PureComponent<InfoWindowProps, InfoWindowState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: HTMLElement | null = null\n\n  state: InfoWindowState = {\n    infoWindow: null,\n  }\n\n  open = (infoWindow: google.maps.InfoWindow, anchor?: google.maps.MVCObject): void => {\n    if (anchor) {\n      infoWindow.open(this.context, anchor)\n    } else if (infoWindow.getPosition()) {\n      infoWindow.open(this.context)\n    } else {\n      invariant(\n        false,\n        `You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.`\n      )\n    }\n  }\n\n  setInfoWindowCallback = (): void => {\n    if (this.state.infoWindow !== null && this.containerElement !== null) {\n      this.state.infoWindow.setContent(this.containerElement)\n\n      this.open(this.state.infoWindow, this.props.anchor)\n\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.infoWindow)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const infoWindow = new google.maps.InfoWindow({\n      ...(this.props.options || {}),\n    })\n\n    this.containerElement = document.createElement('div')\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoWindow,\n    })\n\n    this.setState(function setInfoWindow() {\n      return {\n        infoWindow,\n      }\n    }, this.setInfoWindowCallback)\n  }\n\n  componentDidUpdate(prevProps: InfoWindowProps): void {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.infoWindow,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.state.infoWindow.close()\n    }\n  }\n\n  render(): React.ReactPortal | React.ReactNode {\n    return this.containerElement ? (\n      ReactDOM.createPortal(React.Children.only(this.props.children), this.containerElement)\n    ) : (\n      <></>\n    )\n  }\n}\n\nexport default InfoWindow\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  draggable(instance: google.maps.Polyline, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Polyline, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Polyline, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Polyline, options: google.maps.PolylineOptions): void {\n    instance.setOptions(options)\n  },\n  path(\n    instance: google.maps.Polyline,\n    path:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[]\n  ): void {\n    instance.setPath(path)\n  },\n  visible(instance: google.maps.Polyline, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface PolylineState {\n  polyline: google.maps.Polyline | null\n}\n\nexport interface PolylineProps {\n  options?: google.maps.PolylineOptions\n  /** If set to true, the user can drag this shape over the map. The geodesic property defines the mode of dragging. */\n  draggable?: boolean\n  /** If set to true, the user can edit this shape by dragging the control points shown at the vertices and on each segment. */\n  editable?: boolean\n  /** Hides this poly if set to false. */\n  visible?: boolean\n  /** Sets the path. The ordered sequence of coordinates of the Polyline. This path may be specified using either a simple array of LatLngs, or an MVCArray of LatLngs. Note that if you pass a simple array, it will be converted to an MVCArray Inserting or removing LatLngs in the MVCArray will automatically update the polyline on the map. */\n  path?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n  /** This event is fired when the DOM dblclick event is fired on the Polyline. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the polyline. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user starts dragging the polyline. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the Polyline. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the Polyline. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polyline mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polyline mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the Polyline. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the Polyline is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the Polyline. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the polyline. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This callback is called when the polyline instance has loaded. It is called with the polyline instance. */\n  onLoad?: (polyline: google.maps.Polyline) => void\n  /** This callback is called when the component unmounts. It is called with the polyline instance. */\n  onUnmount?: (polyline: google.maps.Polyline) => void\n}\n\nexport class Polyline extends React.PureComponent<PolylineProps, PolylineState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: PolylineState = {\n    polyline: null,\n  }\n\n  setPolylineCallback = (): void => {\n    if (this.state.polyline !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.polyline)\n    }\n  }\n\n  componentDidMount(): void {\n    const polyline = new google.maps.Polyline({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polyline,\n    })\n\n    this.setState(function setPolyline() {\n      return {\n        polyline,\n      }\n    }, this.setPolylineCallback)\n  }\n\n  componentDidUpdate(prevProps: PolylineProps): void {\n    if (this.state.polyline !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polyline,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.polyline !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polyline)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.polyline.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <></>\n  }\n}\n\nexport default Polyline\n","/* global google */\nimport * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  draggable(instance: google.maps.Polygon, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Polygon, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Polygon, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Polygon, options: google.maps.PolygonOptions): void {\n    instance.setOptions(options)\n  },\n  path(\n    instance: google.maps.Polygon,\n    path:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.LatLng[]\n      | google.maps.LatLngLiteral[]\n  ): void {\n    instance.setPath(path)\n  },\n\n  paths(\n    instance: google.maps.Polygon,\n    paths:\n      | google.maps.MVCArray<google.maps.LatLng>\n      | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n      | google.maps.LatLng[]\n      | google.maps.LatLng[][]\n      | google.maps.LatLngLiteral[]\n      | google.maps.LatLngLiteral[][]\n  ): void {\n    instance.setPaths(paths)\n  },\n\n  visible(instance: google.maps.Polygon, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface PolygonState {\n  polygon: google.maps.Polygon | null\n}\n\nexport interface PolygonProps {\n  options?: google.maps.PolygonOptions\n  /** If set to true, the user can drag this shape over the map. The geodesic property defines the mode of dragging. */\n  draggable?: boolean\n  /** If set to true, the user can edit this shape by dragging the control points shown at the vertices and on each segment. */\n  editable?: boolean\n  /** Hides this poly if set to false. */\n  visible?: boolean\n  /** Sets the first path. See Paths for more details. */\n  path?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.LatLng[]\n    | google.maps.LatLngLiteral[]\n  /** Sets the path for this polygon. The ordered sequence of coordinates that designates a closed loop. Unlike polylines, a polygon may consist of one or more paths. As a result, the paths property may specify one or more arrays of LatLng coordinates. Paths are closed automatically; do not repeat the first vertex of the path as the last vertex. Simple polygons may be defined using a single array of LatLngs. More complex polygons may specify an array of arrays. Any simple arrays are converted into MVCArrays. Inserting or removing LatLngs from the MVCArray will automatically update the polygon on the map. */\n  paths?:\n    | google.maps.MVCArray<google.maps.LatLng>\n    | google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>\n    | google.maps.LatLng[]\n    | google.maps.LatLng[][]\n    | google.maps.LatLngLiteral[]\n    | google.maps.LatLngLiteral[][]\n  /** This event is fired when the DOM dblclick event is fired on the Polygon. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the polygon. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user starts dragging the polygon. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the Polygon. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the Polygon. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polygon mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on Polygon mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the Polygon. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the Polygon is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the Polygon. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the polygon. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This callback is called when the polygon instance has loaded. It is called with the polygon instance. */\n  onLoad?: (polygon: google.maps.Polygon) => void\n  /** This callback is called when the component unmounts. It is called with the polygon instance. */\n  onUnmount?: (polygon: google.maps.Polygon) => void\n}\n\nexport class Polygon extends React.PureComponent<PolygonProps, PolygonState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: PolygonState = {\n    polygon: null,\n  }\n\n  setPolygonCallback = (): void => {\n    if (this.state.polygon !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.polygon)\n    }\n  }\n\n  componentDidMount(): void {\n    const polygon = new google.maps.Polygon({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polygon,\n    })\n\n    this.setState(function setPolygon() {\n      return {\n        polygon,\n      }\n    }, this.setPolygonCallback)\n  }\n\n  componentDidUpdate(prevProps: PolygonProps): void {\n    if (this.state.polygon !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.polygon,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.polygon !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polygon)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.polygon && this.state.polygon.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default Polygon\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onBoundsChanged: 'bounds_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.Rectangle,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n  draggable(instance: google.maps.Rectangle, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Rectangle, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Rectangle, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Rectangle, options: google.maps.RectangleOptions): void {\n    instance.setOptions(options)\n  },\n  visible(instance: google.maps.Rectangle, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface RectangleState {\n  rectangle: google.maps.Rectangle | null\n}\n\nexport interface RectangleProps {\n  options?: google.maps.RectangleOptions\n  /** Sets the bounds of this rectangle. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  /** If set to true, the user can drag this rectangle over the map. */\n  draggable?: boolean\n  /** If set to true, the user can edit this rectangle by dragging the control points shown at the corners and on each edge. */\n  editable?: boolean\n  /** Hides this rectangle if set to false. */\n  visible?: boolean\n  /** Indicates whether this Rectangle handles mouse events. Defaults to true. */\n  clickable?: boolean\n  /** This event is fired when the DOM dblclick event is fired on the rectangle. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the rectangle. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user starts dragging the rectangle. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the rectangle. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the rectangle. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on rectangle mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on rectangle mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the rectangle. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the rectangle is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the rectangle. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the rectangle. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the rectangle's bounds are changed. */\n  onBoundsChanged?: () => void\n  /** This callback is called when the rectangle instance has loaded. It is called with the rectangle instance. */\n  onLoad?: (rectangle: google.maps.Rectangle) => void\n  /** This callback is called when the component unmounts. It is called with the rectangle instance. */\n  onUnmount?: (rectangle: google.maps.Rectangle) => void\n}\n\nexport class Rectangle extends React.PureComponent<RectangleProps, RectangleState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: RectangleState = {\n    rectangle: null,\n  }\n\n  setRectangleCallback = (): void => {\n    if (this.state.rectangle !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.rectangle)\n    }\n  }\n\n  componentDidMount(): void {\n    const rectangle = new google.maps.Rectangle({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: rectangle,\n    })\n\n    this.setState(function setRectangle() {\n      return {\n        rectangle,\n      }\n    }, this.setRectangleCallback)\n  }\n\n  componentDidUpdate(prevProps: RectangleProps): void {\n    if (this.state.rectangle !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.rectangle,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.rectangle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.rectangle)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.rectangle.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <></>\n  }\n}\n\nexport default Rectangle\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRadiusChanged: 'radius_changed',\n  onRightClick: 'rightclick',\n}\n\nconst updaterMap = {\n  center(instance: google.maps.Circle, center: google.maps.LatLng): void {\n    instance.setCenter(center)\n  },\n  draggable(instance: google.maps.Circle, draggable: boolean): void {\n    instance.setDraggable(draggable)\n  },\n  editable(instance: google.maps.Circle, editable: boolean): void {\n    instance.setEditable(editable)\n  },\n  map(instance: google.maps.Circle, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(instance: google.maps.Circle, options: google.maps.CircleOptions): void {\n    instance.setOptions(options)\n  },\n  radius(instance: google.maps.Circle, radius: number): void {\n    instance.setRadius(radius)\n  },\n  visible(instance: google.maps.Circle, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n}\n\ninterface CircleState {\n  circle: google.maps.Circle | null\n}\n\nexport interface CircleProps {\n  options?: google.maps.CircleOptions\n\n  // required\n  /** sets the center of the circle */\n  center: google.maps.LatLng | google.maps.LatLngLiteral\n\n  // required\n  /** Sets the radius of this circle (in meters) */\n  radius: number\n  /** If set to true, the user can drag this circle over the map */\n  draggable?: boolean\n  /** If set to true, the user can edit this circle by dragging the control points shown at the center and around the circumference of the circle. */\n  editable?: boolean\n  /** Hides this circle if set to false. */\n  visible?: boolean\n  /** This event is fired when the DOM dblclick event is fired on the circle. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the user stops dragging the circle. */\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void\n  /**  This event is fired when the user starts dragging the circle. */\n  onDragStart?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousedown event is fired on the circle. */\n  onMouseDown?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mousemove event is fired on the circle. */\n  onMouseMove?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on circle mouseout. */\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired on circle mouseover. */\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM mouseup event is fired on the circle. */\n  onMouseUp?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the circle is right-clicked on. */\n  onRightClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the circle's center is changed. */\n  onCenterChanged?: () => void\n  /** This event is fired when the DOM click event is fired on the circle. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is repeatedly fired while the user drags the circle. */\n  onDrag?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the circle's radius is changed. */\n  onRadiusChanged?: () => void\n  /** This callback is called when the circle instance has loaded. It is called with the circle instance. */\n  onLoad?: (circle: google.maps.Circle) => void\n  /** This callback is called when the component unmounts. It is called with the circle instance. */\n  onUnmount?: (circle: google.maps.Circle) => void\n}\n\nexport class Circle extends React.PureComponent<CircleProps, CircleState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: CircleState = {\n    circle: null,\n  }\n\n  setCircleCallback = (): void => {\n    if (this.state.circle !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.circle)\n    }\n  }\n\n  componentDidMount(): void {\n    const circle = new google.maps.Circle({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: circle,\n    })\n\n    this.setState(function setCircle() {\n      return {\n        circle,\n      }\n    }, this.setCircleCallback)\n  }\n\n  componentDidUpdate(prevProps: CircleProps): void {\n    if (this.state.circle !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.circle,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.circle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.circle)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.circle && this.state.circle.setMap(null)\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default Circle\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onAddFeature: 'addfeature',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRemoveFeature: 'removefeature',\n  onRemoveProperty: 'removeproperty',\n  onRightClick: 'rightclick',\n  onSetGeometry: 'setgeometry',\n  onSetProperty: 'setproperty',\n}\n\nconst updaterMap = {\n  add(\n    instance: google.maps.Data,\n    features: google.maps.Data.Feature | google.maps.Data.FeatureOptions\n  ): void {\n    instance.add(features)\n  },\n  addgeojson(\n    instance: google.maps.Data,\n    geojson: object,\n    options?: google.maps.Data.GeoJsonOptions\n  ): void {\n    instance.addGeoJson(geojson, options)\n  },\n  contains(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.contains(feature)\n  },\n  foreach(instance: google.maps.Data, callback: (feature: google.maps.Data.Feature) => void): void {\n    instance.forEach(callback)\n  },\n  loadgeojson(\n    instance: google.maps.Data,\n    url: string,\n    options: google.maps.Data.GeoJsonOptions,\n    callback: (features: google.maps.Data.Feature[]) => void\n  ): void {\n    instance.loadGeoJson(url, options, callback)\n  },\n  overridestyle(\n    instance: google.maps.Data,\n    feature: google.maps.Data.Feature,\n    style: google.maps.Data.StyleOptions\n  ): void {\n    instance.overrideStyle(feature, style)\n  },\n  remove(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.remove(feature)\n  },\n  revertstyle(instance: google.maps.Data, feature: google.maps.Data.Feature): void {\n    instance.revertStyle(feature)\n  },\n  controlposition(instance: google.maps.Data, controlPosition: google.maps.ControlPosition): void {\n    instance.setControlPosition(controlPosition)\n  },\n  controls(instance: google.maps.Data, controls: string[] | null): void {\n    instance.setControls(controls)\n  },\n  drawingmode(instance: google.maps.Data, mode: string | null): void {\n    instance.setDrawingMode(mode)\n  },\n  map(instance: google.maps.Data, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  style(\n    instance: google.maps.Data,\n    style: google.maps.Data.StylingFunction | google.maps.Data.StyleOptions\n  ): void {\n    instance.setStyle(style)\n  },\n  togeojson(instance: google.maps.Data, callback: (feature: object) => void): void {\n    instance.toGeoJson(callback)\n  },\n}\n\ninterface DataState {\n  data: google.maps.Data | null\n}\nexport interface DataProps {\n  options?: google.maps.Data.DataOptions\n  /**  This event is fired when a feature is added to the collection. */\n  onAddFeature?: (e: google.maps.Data.AddFeatureEvent) => void\n  /**  This event is fired for a click on the geometry. */\n  onClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a double click on the geometry. */\n  onDblClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a mousedown on the geometry. */\n  onMouseDown?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when the mouse leaves the area of the geometry. */\n  onMouseOut?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when the mouse enters the area of the geometry. */\n  onMouseOver?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired for a mouseup on the geometry. */\n  onMouseUp?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when a feature is removed from the collection. */\n  onRemoveFeature?: (e: google.maps.Data.RemoveFeatureEvent) => void\n  /**  This event is fired when a feature's property is removed. */\n  onRemoveProperty?: (e: google.maps.Data.RemovePropertyEvent) => void\n  /**  This event is fired for a rightclick on the geometry. */\n  onRightClick?: (e: google.maps.Data.MouseEvent) => void\n  /**  This event is fired when a feature's geometry is set. */\n  onSetGeometry?: (e: google.maps.Data.SetGeometryEvent) => void\n  /**  This event is fired when a feature's property is set. */\n  onSetProperty?: (e: google.maps.Data.SetPropertyEvent) => void\n  /**  This callback is called when the data instance has loaded. It is called with the data instance. */\n  onLoad?: (data: google.maps.Data) => void\n  /**  This callback is called when the component unmounts. It is called with the data instance.  */\n  onUnmount?: (data: google.maps.Data) => void\n}\n\nexport class Data extends React.PureComponent<DataProps, DataState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DataState = {\n    data: null,\n  }\n\n  setDataCallback = (): void => {\n    if (this.state.data !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.data)\n    }\n  }\n\n  componentDidMount(): void {\n    const data = new google.maps.Data({\n      ...(this.props.options || {}),\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: data,\n    })\n\n    this.setState(function setData() {\n      return {\n        data,\n      }\n    }, this.setDataCallback)\n  }\n\n  componentDidUpdate(prevProps: DataProps): void {\n    if (this.state.data !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.data,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.data !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.data)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.state.data) {\n        this.state.data.setMap(null)\n      }\n    }\n  }\n\n  render(): null {\n    return null\n  }\n}\n\nexport default Data\n","import { PureComponent } from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onClick: 'click',\n  onDefaultViewportChanged: 'defaultviewport_changed',\n  onStatusChanged: 'status_changed',\n}\n\nconst updaterMap = {\n  options(instance: google.maps.KmlLayer, options: google.maps.KmlLayerOptions): void {\n    instance.setOptions(options)\n  },\n  url(instance: google.maps.KmlLayer, url: string): void {\n    instance.setUrl(url)\n  },\n  zIndex(instance: google.maps.KmlLayer, zIndex: number): void {\n    instance.setZIndex(zIndex)\n  },\n}\n\ninterface KmlLayerState {\n  kmlLayer: google.maps.KmlLayer | null\n}\n\nexport interface KmlLayerProps {\n  options?: google.maps.KmlLayerOptions\n  /** The URL of the KML document to display. */\n  url?: string\n  /** The z-index of the layer. */\n  zIndex?: number\n  /** This event is fired when a feature in the layer is clicked. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the KML layers default viewport has changed. */\n  onDefaultViewportChanged?: () => void\n  /** This event is fired when the KML layer has finished loading. At this point it is safe to read the status property to determine if the layer loaded successfully. */\n  onStatusChanged?: () => void\n  /** This callback is called when the kmlLayer instance has loaded. It is called with the kmlLayer instance. */\n  onLoad?: (kmlLayer: google.maps.KmlLayer) => void\n  /** This callback is called when the component unmounts. It is called with the kmlLayer instance. */\n  onUnmount?: (kmlLayer: google.maps.KmlLayer) => void\n}\n\nexport class KmlLayer extends PureComponent<KmlLayerProps, KmlLayerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: KmlLayerState = {\n    kmlLayer: null,\n  }\n\n  setKmlLayerCallback = (): void => {\n    if (this.state.kmlLayer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.kmlLayer)\n    }\n  }\n\n  componentDidMount(): void {\n    const kmlLayer = new google.maps.KmlLayer({\n      ...this.props.options,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: kmlLayer,\n    })\n\n    this.setState(function setLmlLayer() {\n      return {\n        kmlLayer,\n      }\n    }, this.setKmlLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: KmlLayerProps): void {\n    if (this.state.kmlLayer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.kmlLayer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.kmlLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.kmlLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.kmlLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default KmlLayer\n","import { PositionDrawProps } from \"../../types\"\n\n/* eslint-disable filenames/match-regex */\nexport function getOffsetOverride(\n  containerElement: HTMLElement,\n  getPixelPositionOffset?: (offsetWidth: number, offsetHeight: number) => { x: number; y: number }\n): { x: number; y: number } | {} {\n  return typeof getPixelPositionOffset === 'function'\n    ? getPixelPositionOffset(containerElement.offsetWidth, containerElement.offsetHeight)\n    : {}\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createLatLng = (inst: any, Type: any): any => new Type(inst.lat, inst.lng)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createLatLngBounds = (inst: any, Type: any): any =>\n  new Type(\n    new google.maps.LatLng(inst.ne.lat, inst.ne.lng),\n    new google.maps.LatLng(inst.sw.lat, inst.sw.lng)\n  )\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ensureOfType = (inst: any, type: any, factory: any): any => {\n  return inst instanceof type ? inst : factory(inst, type)\n}\n\nconst getLayoutStylesByBounds = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  bounds: google.maps.LatLngBounds\n): { left: string; top: string; width?: string; height?: string } => {\n  const ne = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast())\n\n  const sw = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest())\n\n  if (ne && sw) {\n    return {\n      left: `${sw.x + offset.x}px`,\n      top: `${ne.y + offset.y}px`,\n      width: `${ne.x - sw.x - offset.x}px`,\n      height: `${sw.y - ne.y - offset.y}px`,\n    }\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px',\n  }\n}\n\nconst getLayoutStylesByPosition = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  position: google.maps.LatLng\n): { left: string; top: string } => {\n  const point = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(position)\n\n  if (point) {\n    const { x, y } = point\n\n    return {\n      left: `${x + offset.x}px`,\n      top: `${y + offset.y}px`,\n    }\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px',\n  }\n}\n\nexport const getLayoutStyles = (\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  offset: { x: number; y: number },\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral,\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n): PositionDrawProps => {\n  return bounds !== undefined\n    ? getLayoutStylesByBounds(\n        mapCanvasProjection,\n        offset,\n        ensureOfType(bounds, google.maps.LatLngBounds, createLatLngBounds)\n      )\n    : getLayoutStylesByPosition(\n        mapCanvasProjection,\n        offset,\n        ensureOfType(position, google.maps.LatLng, createLatLng)\n      )\n}\n\nexport const arePositionsEqual = (\n  currentPosition: PositionDrawProps,\n  previousPosition: PositionDrawProps\n): boolean => {\n  return currentPosition.left === previousPosition.left\n    && currentPosition.top === previousPosition.top\n    && currentPosition.width === previousPosition.height\n    && currentPosition.height === previousPosition.height;\n}","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport invariant from 'invariant'\n\nimport MapContext from '../../map-context'\n\nimport { getOffsetOverride, getLayoutStyles, arePositionsEqual } from './dom-helper'\n\ninterface OverlayViewState {\n  paneEl: Element | null\n  containerStyle: React.CSSProperties\n}\n\nfunction convertToLatLngString(latLngLike?: google.maps.LatLng | google.maps.LatLngLiteral | null) {\n  if (!latLngLike) {\n    return ''\n  }\n\n  const latLng = latLngLike instanceof google.maps.LatLng\n    ? latLngLike\n    : new google.maps.LatLng(latLngLike.lat, latLngLike.lng)\n\n  return latLng + ''\n}\n\nfunction convertToLatLngBoundsString(latLngBoundsLike?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral | null) {\n  if (!latLngBoundsLike) {\n    return ''\n  }\n\n  const latLngBounds = latLngBoundsLike instanceof google.maps.LatLngBounds\n    ? latLngBoundsLike\n    : new google.maps.LatLngBounds(\n        new google.maps.LatLng(latLngBoundsLike.south, latLngBoundsLike.east),\n        new google.maps.LatLng(latLngBoundsLike.north, latLngBoundsLike.west)\n      )\n\n  return latLngBounds + ''\n}\n\nexport type PaneNames = keyof google.maps.MapPanes\nexport interface OverlayViewProps {\n  // required\n  mapPaneName: PaneNames\n  getPixelPositionOffset?: (offsetWidth: number, offsetHeight: number) => { x: number; y: number }\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  position?: google.maps.LatLng | google.maps.LatLngLiteral\n  onLoad?: (overlayView: google.maps.OverlayView) => void\n  onUnmount?: (overlayView: google.maps.OverlayView) => void\n}\n\nexport class OverlayView extends React.PureComponent<OverlayViewProps, OverlayViewState> {\n  static FLOAT_PANE: PaneNames = `floatPane`\n  static MAP_PANE: PaneNames = `mapPane`\n  static MARKER_LAYER: PaneNames = `markerLayer`\n  static OVERLAY_LAYER: PaneNames = `overlayLayer`\n  static OVERLAY_MOUSE_TARGET: PaneNames = `overlayMouseTarget`\n\n  static contextType = MapContext\n\n  state: OverlayViewState = {\n    paneEl: null,\n    containerStyle: {\n      // set initial position\n      position: 'absolute'\n    },\n  }\n\n  overlayView: google.maps.OverlayView\n  containerRef: React.RefObject<HTMLDivElement>\n\n  updatePane = (): void => {\n    const mapPaneName = this.props.mapPaneName\n\n    // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapPanes\n    const mapPanes = this.overlayView.getPanes()\n    invariant(\n      !!mapPaneName,\n      `OverlayView requires props.mapPaneName but got %s`,\n      mapPaneName\n    )\n\n    if (mapPanes) {\n      this.setState({\n        paneEl: mapPanes[mapPaneName]\n      })\n    } else {\n      this.setState({\n        paneEl: null\n      })\n    }\n  }\n  onAdd = (): void => {\n    this.updatePane()\n    this.props.onLoad?.(this.overlayView)\n  }\n\n  onPositionElement = (): void => {\n    const mapCanvasProjection = this.overlayView.getProjection()\n\n    const offset = {\n      x: 0,\n      y: 0,\n      ...(this.containerRef.current\n        ? getOffsetOverride(this.containerRef.current, this.props.getPixelPositionOffset)\n        : {}),\n    }\n\n    const layoutStyles = getLayoutStyles(\n      mapCanvasProjection,\n      offset,\n      this.props.bounds,\n      this.props.position\n    )\n\n    const { left, top, width, height } = this.state.containerStyle;\n    if(!arePositionsEqual(layoutStyles, { left, top, width, height })) {\n      this.setState({\n        containerStyle: {\n          ...layoutStyles,\n          position: 'absolute'\n        },\n      })\n    }\n  }\n\n  draw = (): void => {\n    this.onPositionElement()\n  }\n\n  onRemove = (): void => {\n    this.setState(() => ({\n      paneEl: null\n    }))\n    // this.mapPaneEl = null\n    this.props.onUnmount?.(this.overlayView)\n  }\n\n  constructor(props: OverlayViewProps) {\n    super(props)\n\n    this.containerRef = React.createRef()\n    // You must implement three methods: onAdd(), draw(), and onRemove().\n    const overlayView = new google.maps.OverlayView()\n    overlayView.onAdd = this.onAdd\n    overlayView.draw = this.draw\n    overlayView.onRemove = this.onRemove\n    this.overlayView = overlayView\n  }\n\n  componentDidMount(): void {\n    // You must call setMap() with a valid Map object to trigger the call to\n    // the onAdd() method and setMap(null) in order to trigger the onRemove() method.\n    this.overlayView.setMap(this.context)\n  }\n\n  componentDidUpdate(prevProps: OverlayViewProps): void {\n    const prevPositionString = convertToLatLngString(prevProps.position)\n    const positionString = convertToLatLngString(this.props.position)\n    const prevBoundsString = convertToLatLngBoundsString(prevProps.bounds)\n    const boundsString = convertToLatLngBoundsString(this.props.bounds)\n\n    if (prevPositionString !== positionString || prevBoundsString !== boundsString) {\n      this.overlayView.draw()\n    }\n    if (prevProps.mapPaneName !== this.props.mapPaneName) {\n      this.updatePane()\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.overlayView.setMap(null)\n  }\n\n  render(): React.ReactPortal | React.ReactNode {\n    const paneEl = this.state.paneEl\n    if (paneEl) {\n      return ReactDOM.createPortal(\n        <div\n          ref={this.containerRef}\n          style={this.state.containerStyle}\n        >\n          {React.Children.only(this.props.children)}\n        </div>,\n        paneEl\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default OverlayView\n","export function noop(): void {}\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\nimport { noop } from '../../utils/noop'\n\nconst eventMap = {\n  onDblClick: 'dblclick',\n  onClick: 'click',\n}\n\nconst updaterMap = {\n  opacity(instance: google.maps.GroundOverlay, opacity: number): void {\n    instance.setOpacity(opacity)\n  },\n}\n\ninterface GroundOverlayState {\n  groundOverlay: google.maps.GroundOverlay | null\n}\n\nexport interface GroundOverlayProps {\n  options?: google.maps.GroundOverlayOptions\n  /** The opacity of the overlay, expressed as a number between 0 and 1. Optional. Defaults to 1. */\n  opacity?: number\n  /** This event is fired when the DOM dblclick event is fired on the GroundOverlay. */\n  onDblClick?: (e: google.maps.MapMouseEvent) => void\n  /** This event is fired when the DOM click event is fired on the GroundOverlay. */\n  onClick?: (e: google.maps.MapMouseEvent) => void\n  /** The url of the projected image */\n  url: string\n  /** The bounds that the image will be scaled to fit */\n  bounds: google.maps.LatLngBounds\n  /** This callback is called when the groundOverlay instance has loaded. It is called with the groundOverlay instance. */\n  onLoad?: (groundOverlay: google.maps.GroundOverlay) => void\n  /** This callback is called when the component unmounts. It is called with the groundOverlay instance. */\n  onUnmount?: (groundOverlay: google.maps.GroundOverlay) => void\n}\n\nexport class GroundOverlay extends React.PureComponent<GroundOverlayProps, GroundOverlayState> {\n  public static defaultProps = {\n    onLoad: noop,\n  }\n\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: GroundOverlayState = {\n    groundOverlay: null,\n  }\n\n  setGroundOverlayCallback = (): void => {\n    if (this.state.groundOverlay !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.groundOverlay)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.url || !!this.props.bounds,\n      `For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by \\`react-google-maps-api\\`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just \\`key={url}\\` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655`\n    )\n\n    const groundOverlay = new google.maps.GroundOverlay(this.props.url, this.props.bounds, {\n      ...this.props.options,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: groundOverlay,\n    })\n\n    this.setState(function setGroundOverlay() {\n      return {\n        groundOverlay,\n      }\n    }, this.setGroundOverlayCallback)\n  }\n\n  componentDidUpdate(prevProps: GroundOverlayProps): void {\n    if (this.state.groundOverlay !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.groundOverlay,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.groundOverlay) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.groundOverlay)\n      }\n\n      this.state.groundOverlay.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default GroundOverlay\n","import * as React from 'react'\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {}\n\nconst updaterMap = {\n  data(\n    instance: google.maps.visualization.HeatmapLayer,\n    data:\n      | google.maps.MVCArray<google.maps.LatLng | google.maps.visualization.WeightedLocation>\n      | google.maps.LatLng[]\n      | google.maps.visualization.WeightedLocation[]\n  ): void {\n    instance.setData(data)\n  },\n  map(instance: google.maps.visualization.HeatmapLayer, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(\n    instance: google.maps.visualization.HeatmapLayer,\n    options: google.maps.visualization.HeatmapLayerOptions\n  ): void {\n    instance.setOptions(options)\n  },\n}\n\ninterface HeatmapLayerState {\n  heatmapLayer: google.maps.visualization.HeatmapLayer | null\n}\n\nexport interface HeatmapLayerProps {\n  // required\n  /** The data points to display. Required. */\n  data:\n    | google.maps.MVCArray<google.maps.LatLng | google.maps.visualization.WeightedLocation>\n    | google.maps.LatLng[]\n    | google.maps.visualization.WeightedLocation[]\n  options?: google.maps.visualization.HeatmapLayerOptions\n  /** This callback is called when the heatmapLayer instance has loaded. It is called with the heatmapLayer instance. */\n  onLoad?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void\n  /** This callback is called when the component unmounts. It is called with the heatmapLayer instance. */\n  onUnmount?: (heatmapLayer: google.maps.visualization.HeatmapLayer) => void\n}\n\nexport class HeatmapLayer extends React.PureComponent<HeatmapLayerProps, HeatmapLayerState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: HeatmapLayerState = {\n    heatmapLayer: null,\n  }\n\n  setHeatmapLayerCallback = (): void => {\n    if (this.state.heatmapLayer !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.heatmapLayer)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.visualization,\n      'Did you include prop libraries={[\"visualization\"]} to <LoadScript />? %s',\n      google.maps.visualization\n    )\n\n    invariant(!!this.props.data, 'data property is required in HeatmapLayer %s', this.props.data)\n\n    const heatmapLayer = new google.maps.visualization.HeatmapLayer({\n      ...(this.props.options || {}),\n      data: this.props.data,\n      map: this.context,\n    })\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: heatmapLayer,\n    })\n\n    this.setState(function setHeatmapLayer() {\n      return {\n        heatmapLayer,\n      }\n    }, this.setHeatmapLayerCallback)\n  }\n\n  componentDidUpdate(prevProps: HeatmapLayerProps): void {\n    unregisterEvents(this.registeredEvents)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.heatmapLayer,\n    })\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.heatmapLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.heatmapLayer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.heatmapLayer.setMap(null)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default HeatmapLayer\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onCloseClick: 'closeclick',\n  onPanoChanged: 'pano_changed',\n  onPositionChanged: 'position_changed',\n  onPovChanged: 'pov_changed',\n  onResize: 'resize',\n  onStatusChanged: 'status_changed',\n  onVisibleChanged: 'visible_changed',\n  onZoomChanged: 'zoom_changed',\n}\n\nconst updaterMap = {\n  register(\n    instance: google.maps.StreetViewPanorama,\n    provider: (input: string) => google.maps.StreetViewPanoramaData,\n    options: google.maps.PanoProviderOptions\n  ): void {\n    instance.registerPanoProvider(provider, options)\n  },\n  links(instance: google.maps.StreetViewPanorama, links: google.maps.StreetViewLink[]): void {\n    instance.setLinks(links)\n  },\n  motionTracking(instance: google.maps.StreetViewPanorama, motionTracking: boolean): void {\n    instance.setMotionTracking(motionTracking)\n  },\n  options(\n    instance: google.maps.StreetViewPanorama,\n    options: google.maps.StreetViewPanoramaOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  pano(instance: google.maps.StreetViewPanorama, pano: string): void {\n    instance.setPano(pano)\n  },\n  position(\n    instance: google.maps.StreetViewPanorama,\n    position: google.maps.LatLng | google.maps.LatLngLiteral\n  ): void {\n    instance.setPosition(position)\n  },\n  pov(instance: google.maps.StreetViewPanorama, pov: google.maps.StreetViewPov): void {\n    instance.setPov(pov)\n  },\n  visible(instance: google.maps.StreetViewPanorama, visible: boolean): void {\n    instance.setVisible(visible)\n  },\n  zoom(instance: google.maps.StreetViewPanorama, zoom: number): void {\n    instance.setZoom(zoom)\n  },\n}\n\ninterface StreetViewPanoramaState {\n  streetViewPanorama: google.maps.StreetViewPanorama | null\n}\n\nexport interface StreetViewPanoramaProps {\n  options?: google.maps.StreetViewPanoramaOptions\n  /** This event is fired when the close button is clicked. */\n  onCloseclick?: (event: google.maps.MapMouseEvent) => void\n  /** This event is fired when the panorama's pano id changes. The pano may change as the user navigates through the panorama or the position is manually set. Note that not all position changes trigger a pano_changed. */\n  onPanoChanged?: () => void\n  /** This event is fired when the panorama's position changes. The position changes as the user navigates through the panorama or the position is set manually. */\n  onPositionChanged?: () => void\n  /** This event is fired when the panorama's point-of-view changes. The point of view changes as the pitch, zoom, or heading changes. */\n  onPovChanged?: () => void\n  /** Developers should trigger this event on the panorama when its div changes size: google.maps.event.trigger(panorama, 'resize'). */\n  onResize?: () => void\n  /** This event is fired after every panorama lookup by id or location, via setPosition() or setPano(). */\n  onStatusChanged?: () => void\n  /** This event is fired when the panorama's visibility changes. The visibility is changed when the Pegman is dragged onto the map, the close button is clicked, or setVisible() is called. */\n  onVisibleChanged?: () => void\n  /** This event is fired when the panorama's zoom level changes. */\n  onZoomChange?: () => void\n  /** This callback is called when the streetViewPanorama instance has loaded. It is called with the streetViewPanorama instance. */\n  onLoad?: (streetViewPanorama: google.maps.StreetViewPanorama) => void\n  /** This callback is called when the component unmounts. It is called with the streetViewPanorama instance. */\n  onUnmount?: (streetViewPanorama: google.maps.StreetViewPanorama) => void\n}\n\nexport class StreetViewPanorama extends React.PureComponent<\n  StreetViewPanoramaProps,\n  StreetViewPanoramaState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: StreetViewPanoramaState = {\n    streetViewPanorama: null,\n  }\n\n  setStreetViewPanoramaCallback = (): void => {\n    if (this.state.streetViewPanorama !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.streetViewPanorama)\n    }\n  }\n\n  componentDidMount(): void {\n    const streetViewPanorama = this.context.getStreetView()\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: streetViewPanorama,\n    })\n\n    this.setState(function setStreetViewPanorama() {\n      return {\n        streetViewPanorama,\n      }\n    }, this.setStreetViewPanoramaCallback)\n  }\n\n  componentDidUpdate(prevProps: StreetViewPanoramaProps): void {\n    if (this.state.streetViewPanorama !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.streetViewPanorama,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.streetViewPanorama !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewPanorama)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      this.state.streetViewPanorama.setVisible(false)\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default StreetViewPanorama\n","import * as React from 'react'\n\nimport MapContext from '../../map-context'\n\nexport interface StreetViewServiceProps {\n  /** This callback is called when the streetViewService instance has loaded. It is called with the streetViewService instance. */\n  onLoad?: (streetViewService: google.maps.StreetViewService | null) => void\n  /** This callback is called when the component unmounts. It is called with the streetViewService instance. */\n  onUnmount?: (streetViewService: google.maps.StreetViewService | null) => void\n}\n\ninterface StreetViewServiceState {\n  streetViewService: google.maps.StreetViewService | null\n}\n\nexport class StreetViewService extends React.PureComponent<\n  StreetViewServiceProps,\n  StreetViewServiceState\n> {\n  static contextType = MapContext\n\n  state = {\n    streetViewService: null,\n  }\n\n  setStreetViewServiceCallback = (): void => {\n    if (this.state.streetViewService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.streetViewService)\n    }\n  }\n\n  componentDidMount(): void {\n    const streetViewService = new google.maps.StreetViewService()\n\n    this.setState(function setStreetViewService() {\n      return {\n        streetViewService,\n      }\n    }, this.setStreetViewServiceCallback)\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.streetViewService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewService)\n      }\n    }\n  }\n\n  render(): React.ReactNode {\n    return null\n  }\n}\n\nexport default StreetViewService\n","import * as React from 'react'\nimport invariant from 'invariant'\n\ninterface DirectionsServiceState {\n  directionsService: google.maps.DirectionsService | null\n}\n\nexport interface DirectionsServiceProps {\n  // required for default functionality\n  options: google.maps.DirectionsRequest\n\n  // required for default functionality\n  callback: (\n    // required\n    /** The directions response retrieved from the directions server. You can render these using a DirectionsRenderer or parse this object and render it yourself. You must display the warnings and copyrights as noted in the Google Maps Platform Terms of Service. Note that though this result is \"JSON-like,\" it is not strictly JSON, as it indirectly includes LatLng objects */\n    result: google.maps.DirectionsResult | null,\n    // required\n    /** The status returned by the DirectionsService on the completion of a call to route(). Specify these by value, or by using the constant's name. For example, 'OK' or google.maps.DirectionsStatus.OK */\n    status: google.maps.DirectionsStatus\n  ) => void\n  /** This callback is called when the directionsService instance has loaded. It is called with the directionsService instance. */\n  onLoad?: (directionsService: google.maps.DirectionsService) => void\n  /** This callback is called when the component unmounts. It is called with the directionsService instance. */\n  onUnmount?: (directionsService: google.maps.DirectionsService) => void\n}\n\nexport class DirectionsService extends React.PureComponent<\n  DirectionsServiceProps,\n  DirectionsServiceState\n> {\n  state: DirectionsServiceState = {\n    directionsService: null,\n  }\n\n  setDirectionsServiceCallback = (): void => {\n    if (this.state.directionsService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.directionsService)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.options,\n      'DirectionsService expected options object as parameter, but got %s',\n      this.props.options\n    )\n\n    const directionsService = new google.maps.DirectionsService()\n\n    this.setState(function setDirectionsService() {\n      return {\n        directionsService,\n      }\n    }, this.setDirectionsServiceCallback)\n  }\n\n  componentDidUpdate(): void {\n    if (this.state.directionsService !== null) {\n      this.state.directionsService.route(this.props.options, this.props.callback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.directionsService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsService)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DirectionsService\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onDirectionsChanged: 'directions_changed',\n}\n\nconst updaterMap = {\n  directions(\n    instance: google.maps.DirectionsRenderer,\n    directions: google.maps.DirectionsResult\n  ): void {\n    instance.setDirections(directions)\n  },\n  map(instance: google.maps.DirectionsRenderer, map: google.maps.Map): void {\n    instance.setMap(map)\n  },\n  options(\n    instance: google.maps.DirectionsRenderer,\n    options: google.maps.DirectionsRendererOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  panel(instance: google.maps.DirectionsRenderer, panel: Element): void {\n    instance.setPanel(panel)\n  },\n  routeIndex(instance: google.maps.DirectionsRenderer, routeIndex: number): void {\n    instance.setRouteIndex(routeIndex)\n  },\n}\n\ninterface DirectionsRendererState {\n  directionsRenderer: google.maps.DirectionsRenderer | null\n}\n\nexport interface DirectionsRendererProps {\n  options?: google.maps.DirectionsRendererOptions\n  /** The directions to display on the map and/or in a <div> panel, retrieved as a DirectionsResult object from DirectionsService. */\n  directions?: google.maps.DirectionsResult\n  /** The <div> in which to display the directions steps. */\n  panel?: Element\n  /** The index of the route within the DirectionsResult object. The default value is 0. */\n  routeIndex?: number\n  /** This event is fired when the rendered directions change, either when a new DirectionsResult is set or when the user finishes dragging a change to the directions path. */\n  onDirectionsChanged?: () => void\n  /** This callback is called when the directionsRenderer instance has loaded. It is called with the directionsRenderer instance. */\n  onLoad?: (directionsRenderer: google.maps.DirectionsRenderer) => void\n  /** This callback is called when the component unmounts. It is called with the directionsRenderer instance. */\n  onUnmount?: (directionsRenderer: google.maps.DirectionsRenderer) => void\n}\n\nexport class DirectionsRenderer extends React.PureComponent<\n  DirectionsRendererProps,\n  DirectionsRendererState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  state: DirectionsRendererState = {\n    directionsRenderer: null,\n  }\n\n  setDirectionsRendererCallback = (): void => {\n    if (this.state.directionsRenderer !== null) {\n      this.state.directionsRenderer.setMap(this.context)\n\n      if (this.props.onLoad) {\n        this.props.onLoad(this.state.directionsRenderer)\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    const directionsRenderer = new google.maps.DirectionsRenderer(this.props.options)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: directionsRenderer,\n    })\n\n    this.setState(function setDirectionsRenderer() {\n      return {\n        directionsRenderer,\n      }\n    }, this.setDirectionsRendererCallback)\n  }\n\n  componentDidUpdate(prevProps: DirectionsRendererProps): void {\n    if (this.state.directionsRenderer !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.directionsRenderer,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.directionsRenderer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsRenderer)\n      }\n\n      unregisterEvents(this.registeredEvents)\n\n      if (this.state.directionsRenderer) {\n        this.state.directionsRenderer.setMap(null)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DirectionsRenderer\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\ninterface DistanceMatrixServiceState {\n  distanceMatrixService: google.maps.DistanceMatrixService | null\n}\n\nexport interface DistanceMatrixServiceProps {\n  // required for default functionality\n  options: google.maps.DistanceMatrixRequest\n\n  // required for default functionality\n  callback: (\n    // required\n    /** The response to a DistanceMatrixService request, consisting of the formatted origin and destination addresses, and a sequence of DistanceMatrixResponseRows, one for each corresponding origin address. */\n    response: google.maps.DistanceMatrixResponse | null,\n    // required\n    /** The top-level status about the request in general returned by the DistanceMatrixService upon completion of a distance matrix request. Specify these by value, or by using the constant's name. For example, 'OK' or google.maps.DistanceMatrixStatus.OK. */\n    status: google.maps.DistanceMatrixStatus\n  ) => void\n  /** This callback is called when the distanceMatrixService instance has loaded. It is called with the distanceMatrixService instance. */\n  onLoad?: (distanceMatrixService: google.maps.DistanceMatrixService) => void\n  /** This callback is called when the component unmounts. It is called with the distanceMatrixService instance. */\n  onUnmount?: (distanceMatrixService: google.maps.DistanceMatrixService) => void\n}\n\nexport class DistanceMatrixService extends React.PureComponent<\n  DistanceMatrixServiceProps,\n  DistanceMatrixServiceState\n> {\n  state: DistanceMatrixServiceState = {\n    distanceMatrixService: null,\n  }\n\n  setDistanceMatrixServiceCallback = (): void => {\n    if (this.state.distanceMatrixService !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.distanceMatrixService)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!this.props.options,\n      'DistanceMatrixService expected options object as parameter, but go %s',\n      this.props.options\n    )\n\n    const distanceMatrixService = new google.maps.DistanceMatrixService()\n\n    this.setState(function setDistanceMatrixService() {\n      return {\n        distanceMatrixService,\n      }\n    }, this.setDistanceMatrixServiceCallback)\n  }\n\n  componentDidUpdate(): void {\n    if (this.state.distanceMatrixService !== null) {\n      this.state.distanceMatrixService.getDistanceMatrix(this.props.options, this.props.callback)\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.distanceMatrixService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.distanceMatrixService)\n      }\n    }\n  }\n\n  render(): JSX.Element {\n    return <></>\n  }\n}\n\nexport default DistanceMatrixService\n","import * as React from 'react'\n\nimport invariant from 'invariant'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nconst eventMap = {\n  onPlacesChanged: 'places_changed',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.places.SearchBox,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n}\n\ninterface StandaloneSearchBoxState {\n  searchBox: google.maps.places.SearchBox | null\n}\n\nexport interface StandaloneSearchBoxProps {\n  /** The area towards which to bias query predictions. Predictions are biased towards, but not restricted to, queries targeting these bounds. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  options?: google.maps.places.SearchBoxOptions\n  /** This event is fired when the user selects a query, getPlaces should be used to get new places. */\n  onPlacesChanged?: () => void\n  /** This callback is called when the searchBox instance has loaded. It is called with the searchBox instance. */\n  onLoad?: (searchBox: google.maps.places.SearchBox) => void\n  /** This callback is called when the component unmounts. It is called with the searchBox instance. */\n  onUnmount?: (searchBox: google.maps.places.SearchBox) => void\n}\n\nclass StandaloneSearchBox extends React.PureComponent<\n  StandaloneSearchBoxProps,\n  StandaloneSearchBoxState\n> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n\n  containerElement: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state: StandaloneSearchBoxState = {\n    searchBox: null,\n  }\n\n  setSearchBoxCallback = (): void => {\n    if (this.state.searchBox !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.searchBox)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.places,\n      'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s',\n      google.maps.places\n    )\n\n    if (this.containerElement !== null && this.containerElement.current !== null) {\n      const input = this.containerElement.current.querySelector('input')\n\n      if (input !== null) {\n        const searchBox = new google.maps.places.SearchBox(input, this.props.options)\n\n        this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n          updaterMap,\n          eventMap,\n          prevProps: {},\n          nextProps: this.props,\n          instance: searchBox,\n        })\n\n        this.setState(function setSearchBox() {\n          return {\n            searchBox,\n          }\n        }, this.setSearchBoxCallback)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps: StandaloneSearchBoxProps): void {\n    if (this.state.searchBox !== null) {\n      unregisterEvents(this.registeredEvents)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps,\n        nextProps: this.props,\n        instance: this.state.searchBox,\n      })\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.searchBox !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.searchBox)\n      }\n\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <div ref={this.containerElement}>{React.Children.only(this.props.children)}</div>\n  }\n}\n\nexport default StandaloneSearchBox\n","import * as React from 'react'\n\nimport { unregisterEvents, applyUpdatersToPropsAndRegisterEvents } from '../../utils/helper'\n\nimport MapContext from '../../map-context'\n\nimport invariant from 'invariant'\n\nconst eventMap = {\n  onPlaceChanged: 'place_changed',\n}\n\nconst updaterMap = {\n  bounds(\n    instance: google.maps.places.Autocomplete,\n    bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  ): void {\n    instance.setBounds(bounds)\n  },\n  restrictions(\n    instance: google.maps.places.Autocomplete,\n    restrictions: google.maps.places.ComponentRestrictions\n  ): void {\n    instance.setComponentRestrictions(restrictions)\n  },\n  fields(instance: google.maps.places.Autocomplete, fields: string[]): void {\n    instance.setFields(fields)\n  },\n  options(\n    instance: google.maps.places.Autocomplete,\n    options: google.maps.places.AutocompleteOptions\n  ): void {\n    instance.setOptions(options)\n  },\n  types(instance: google.maps.places.Autocomplete, types: string[]): void {\n    instance.setTypes(types)\n  },\n}\n\ninterface AutocompleteState {\n  autocomplete: google.maps.places.Autocomplete | null\n}\n\nexport interface AutocompleteProps {\n  // required\n  children: React.ReactChild\n  /** The area in which to search for places. */\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral\n  /** The component restrictions. Component restrictions are used to restrict predictions to only those within the parent component. For example, the country. */\n  restrictions?: google.maps.places.ComponentRestrictions\n  /** Fields to be included for the Place in the details response when the details are successfully retrieved. For a list of fields see PlaceResult. Nested fields can be specified with dot-paths (for example, \"geometry.location\"). */\n  fields?: string[]\n  options?: google.maps.places.AutocompleteOptions\n  /** The types of predictions to be returned. For a list of supported types, see the developer's guide. If nothing is specified, all types are returned. In general only a single type is allowed. The exception is that you can safely mix the 'geocode' and 'establishment' types, but note that this will have the same effect as specifying no types. */\n  types?: string[]\n  /** This event is fired when a PlaceResult is made available for a Place the user has selected. If the user enters the name of a Place that was not suggested by the control and presses the Enter key, or if a Place Details request fails, the PlaceResult contains the user input in the name property, with no other properties defined. */\n  onPlaceChanged?: () => void\n  /** This callback is called when the autocomplete instance has loaded. It is called with the autocomplete instance. */\n  onLoad?: (autocomplete: google.maps.places.Autocomplete) => void\n  /** This callback is called when the component unmounts. It is called with the autocomplete instance. */\n  onUnmount?: (autocomplete: google.maps.places.Autocomplete) => void\n  className?: string\n}\n\nexport class Autocomplete extends React.PureComponent<AutocompleteProps, AutocompleteState> {\n  static contextType = MapContext\n\n  registeredEvents: google.maps.MapsEventListener[] = []\n  containerElement: React.RefObject<HTMLDivElement> = React.createRef()\n\n  state: AutocompleteState = {\n    autocomplete: null,\n  }\n\n  setAutocompleteCallback = (): void => {\n    if (this.state.autocomplete !== null && this.props.onLoad) {\n      this.props.onLoad(this.state.autocomplete)\n    }\n  }\n\n  componentDidMount(): void {\n    invariant(\n      !!google.maps.places,\n      'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s',\n      google.maps.places\n    )\n\n    // TODO: why current could be equal null?\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const input = this.containerElement.current.querySelector('input')\n\n    if (input) {\n      const autocomplete = new google.maps.places.Autocomplete(input, this.props.options)\n\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap,\n        eventMap,\n        prevProps: {},\n        nextProps: this.props,\n        instance: autocomplete,\n      })\n\n      this.setState(function setAutocomplete() {\n        return {\n          autocomplete,\n        }\n      }, this.setAutocompleteCallback)\n    }\n  }\n\n  componentDidUpdate(prevProps: AutocompleteProps): void {\n    unregisterEvents(this.registeredEvents)\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap,\n      eventMap,\n      prevProps,\n      nextProps: this.props,\n      instance: this.state.autocomplete,\n    })\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.autocomplete !== null) {\n      unregisterEvents(this.registeredEvents)\n    }\n  }\n\n  render(): React.ReactNode {\n    return <div ref={this.containerElement} className={this.props.className || ''}>{React.Children.only(this.props.children)}</div>\n  }\n}\n\nexport default Autocomplete\n"]},"metadata":{},"sourceType":"module"}