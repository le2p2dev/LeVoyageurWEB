{"ast":null,"code":"var _jsxFileName = \"/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const queryClient = new QueryClient();\n  const [lat, setLat] = useState(41.3851);\n  const [lng, setLng] = useState(2.1734);\n  const mapStyles = {\n    height: \"80vh\",\n    width: \"99%\"\n  };\n  const defaultCenter = {\n    lat: lat,\n    lng: lng\n  };\n  var list = [\"Hotels\", \"Restaurants\", \"Museums\", \"Bars\", \"Famous Landmarks\"];\n  const [searchLocation, setSearchLocation] = useState(\"\");\n  const [newLocation, setNewLocation] = useState(\"\");\n\n  const handleSearchLocationChange = event => {\n    setSearchLocation(event.target.value);\n  };\n\n  const mapBoxToken = \"&access_token=pk.eyJ1IjoiNTczZiIsImEiOiJja3l5Z2JoMWQwcnlsMnJzM2pxN29md2RnIn0.YnpLDRmULNCqnV2XLcmgCQ\";\n  const urlPreFix = \"https://api.mapbox.com/geocoding/v5/mapbox.places/\";\n  const urlSettings = \"limit=1&types=place\";\n\n  const fetchCoords = input => {\n    const userInputLocation = input.queryKey[1];\n    console.log(\"userInput\", userInputLocation);\n    const url = urlPreFix + userInputLocation + \".json?\" + urlSettings + mapBoxToken;\n    console.log(url);\n    return fetch(url, {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      console.log(\"inside\", data); //console.log(data.features[0].center);\n\n      return data;\n    }).catch(error => {\n      //console.log(\"failed: \", error)\n      return error;\n    });\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    refetch\n  } = useQuery([\"fetchCoords\", searchLocation], fetchCoords, {\n    refetchOnWindowFocus: false,\n    enabled: false,\n    onSuccess: data => {\n      console.log(\"onSuccess\", data);\n      setLat(data.features[0].center[1]);\n      setLng(data.features[0].center[0]);\n    }\n  });\n\n  const renderMarkers = (map, maps) => {\n    let marker = new maps.Marker({\n      position: {\n        lat: lat,\n        lng: lng\n      },\n      map,\n      title: \"name\"\n    });\n    console.log(\"marker=\", marker);\n    return marker;\n  };\n\n  const handleLocationSearch = () => {\n    console.log(searchLocation);\n    refetch(); //console.log(\"Promise=\",promise);\n    //const data = promise.then((data) => {console.log(data)});\n  };\n\n  isLoading ? console.log(\"not finished loading\") : console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mapFile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputBox\",\n        type: \"text\",\n        name: \"lng\",\n        placeholder: \"Search Location\",\n        onChange: handleSearchLocationChange,\n        value: searchLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonClass\",\n        id: \"seatchBtnMap\",\n        type: \"submit\",\n        onClick: () => handleLocationSearch(),\n        children: \"Search Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"AIzaSyAr_YxyNFRK6HRPkMhwxUwyrux4ysNbO4M\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: mapStyles,\n          zoom: 13,\n          center: defaultCenter,\n          yesIWantToUseGoogleMapApiInternals: true,\n          onGoogleApiLoaded: (map, maps) => renderMarkers(map, maps),\n          onClick: ev => {\n            console.log(\"latitide = \", ev.latLng.lat());\n            console.log(\"longitude = \", ev.latLng.lng());\n          },\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: lat,\n              lng: lng\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: lat,\n              lng: lng\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"test\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lst\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Hotels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lst\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Restaurants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lst\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lst\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Museums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lst\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Landmarks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"FCWzIOSUNYpsdSwZQEKA6ZUOP5s=\", false, function () {\n  return [useQuery];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/yassinmeghazi/Desktop/biblio/cours/projet-tut/Accrobat/LeVoyageurWEB/src/Map.js"],"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","QueryClient","QueryClientProvider","useQuery","Map","queryClient","lat","setLat","lng","setLng","mapStyles","height","width","defaultCenter","list","searchLocation","setSearchLocation","newLocation","setNewLocation","handleSearchLocationChange","event","target","value","mapBoxToken","urlPreFix","urlSettings","fetchCoords","input","userInputLocation","queryKey","console","log","url","fetch","method","then","res","json","data","catch","error","isLoading","isError","refetch","refetchOnWindowFocus","enabled","onSuccess","features","center","renderMarkers","map","maps","marker","position","title","handleLocationSearch","ev","latLng"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript,Marker } from '@react-google-maps/api';\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport './Map.css'\nconst Map = () => {\n\n  const queryClient = new QueryClient()\n\n  const [lat,setLat] = useState(41.3851);\n  const [lng,setLng] = useState(2.1734);\n\n  \n  const mapStyles = {        \n    height: \"80vh\",\n    width: \"99%\"};\n  \n  const defaultCenter = {\n    lat: lat, lng: lng\n  }\n\n  var list = [\"Hotels\",\"Restaurants\",\"Museums\",\"Bars\",\"Famous Landmarks\"]\n\n \n\n  const [searchLocation,setSearchLocation] = useState(\"\");\n  const [newLocation, setNewLocation] = useState(\"\");\n\n  const handleSearchLocationChange = event => {\n\t\tsetSearchLocation(event.target.value)\n  };\n  \n\n  const mapBoxToken = \"&access_token=pk.eyJ1IjoiNTczZiIsImEiOiJja3l5Z2JoMWQwcnlsMnJzM2pxN29md2RnIn0.YnpLDRmULNCqnV2XLcmgCQ\";\n  const urlPreFix = \"https://api.mapbox.com/geocoding/v5/mapbox.places/\";\n  const urlSettings = \"limit=1&types=place\";\n\n  const fetchCoords = (input) => {\n\n    const userInputLocation = input.queryKey[1];\n    console.log(\"userInput\", userInputLocation);\n    const url = urlPreFix+userInputLocation+\".json?\"+urlSettings+mapBoxToken;\n    console.log(url);\n\n    return (fetch(url, {\n    method: 'GET',\n    })\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(\"inside\", data);\n      //console.log(data.features[0].center);\n      return (data);\n    })\n    .catch((error) => {\n        //console.log(\"failed: \", error)\n        return(error);\n    }))\n  }\n\n\n  const { isLoading, isError, error, data, refetch } = useQuery([\"fetchCoords\", searchLocation], fetchCoords, {\n      refetchOnWindowFocus:false,\n      enabled:false,\n      onSuccess: (data) => {\n        console.log(\"onSuccess\",data);\n        setLat(data.features[0].center[1]);\n        setLng(data.features[0].center[0]);\n      }\n  });\n\n  const renderMarkers = (map,maps) => {\n\n    let marker = new maps.Marker({\n      position:{lat:lat,lng:lng},\n      map,\n      title:\"name\"\n    });\n\n    console.log(\"marker=\",marker);\n\n    return marker;\n    \n  }\n\n  const handleLocationSearch = () => {\n\n    console.log(searchLocation);\n    refetch();\n    //console.log(\"Promise=\",promise);\n    //const data = promise.then((data) => {console.log(data)});\n    \n    \n\n  }\n\n  isLoading ? console.log(\"not finished loading\") :  console.log(data);\n  \n  return (\n\n    <div id = \"mapFile\">\n      <div className = \"searchBar\">\n        <input \n          className = \"inputBox\"\n          type=\"text\"\n          name=\"lng\"\n          placeholder=\"Search Location\"\n          onChange = {handleSearchLocationChange}\n          value = {searchLocation} /> \n\n        <button \n          className = \"buttonClass\" \n          id = \"seatchBtnMap\"\n          type = \"submit\" \n          onClick = {() => handleLocationSearch()}> \n            Search Location\n        </button>\n      </div>\n\n      <div id = \"mapWrapper\">\n      <LoadScript\n        googleMapsApiKey='AIzaSyAr_YxyNFRK6HRPkMhwxUwyrux4ysNbO4M'>\n          <GoogleMap \n            mapContainerStyle={mapStyles}\n            zoom={13}\n            center={defaultCenter}\n            yesIWantToUseGoogleMapApiInternals={true}\n            onGoogleApiLoaded={(map, maps)=> renderMarkers(map,maps) }\n            onClick={ev => {\n              console.log(\"latitide = \", ev.latLng.lat());\n              console.log(\"longitude = \", ev.latLng.lng());\n            }}>\n            <Marker position={{ lat: lat, lng: lng }} />\n            <Marker position={{ lat: lat, lng: lng }} />\n          </GoogleMap>   \n      </LoadScript>\n        <div id =\"test\">\n          <div className=\"lst\">\n            <input type=\"checkbox\"/>\n            <label>Hotels</label>\n          </div>\n          <div className=\"lst\">\n            <input type=\"checkbox\"/>\n            <label>Restaurants</label>\n          </div>\n          <div className=\"lst\">\n            <input type=\"checkbox\"/>\n            <label>Bars</label>\n          </div>\n          <div className=\"lst\">\n            <input type=\"checkbox\"/>  \n            <label>Museums</label>\n          </div>\n          <div className=\"lst\">\n            <input type=\"checkbox\"/>\n            <label>Landmarks</label>    \n          </div>\n        </div>\n      </div>\n     \n    </div>\n  )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}